/* tslint:disable */
/* eslint-disable */
/**
 * Planetizer API
 * Planetizer API!
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import type { Configuration } from './configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import globalAxios from 'axios';
// Some imports not used depending on template conditions
// @ts-ignore
import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setOAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction } from './common';
import type { RequestArgs } from './base';
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, BaseAPI, RequiredError, operationServerMap } from './base';

/**
 * 
 * @export
 * @interface Config
 */
export interface Config {
    /**
     * 
     * @type {Array<Source>}
     * @memberof Config
     */
    'sources': Array<Source>;
    /**
     * 
     * @type {Array<Tag>}
     * @memberof Config
     */
    'tags': Array<Tag>;
}
/**
 * 
 * @export
 * @interface Feed
 */
export interface Feed {
    /**
     * 
     * @type {string}
     * @memberof Feed
     */
    'generated_at': string;
    /**
     * 
     * @type {Array<FeedEntry>}
     * @memberof Feed
     */
    'entries': Array<FeedEntry>;
}
/**
 * 
 * @export
 * @interface FeedEntry
 */
export interface FeedEntry {
    /**
     * 
     * @type {string}
     * @memberof FeedEntry
     */
    'title': string;
    /**
     * 
     * @type {string}
     * @memberof FeedEntry
     */
    'link': string;
    /**
     * 
     * @type {string}
     * @memberof FeedEntry
     */
    'published': string;
    /**
     * 
     * @type {string}
     * @memberof FeedEntry
     */
    'summary': string;
    /**
     * 
     * @type {string}
     * @memberof FeedEntry
     */
    'source': string;
}
/**
 * 
 * @export
 * @interface Source
 */
export interface Source {
    /**
     * 
     * @type {string}
     * @memberof Source
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof Source
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof Source
     */
    'desc': string;
    /**
     * 
     * @type {Array<string>}
     * @memberof Source
     */
    'tags': Array<string>;
}
/**
 * 
 * @export
 * @interface Tag
 */
export interface Tag {
    /**
     * 
     * @type {string}
     * @memberof Tag
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof Tag
     */
    'desc': string;
}

