[
  {
    "title": "KDOC 394: manのシステムコールセクションがインストールされてないことがある",
    "link": "https://kijimad.github.io/roam/20250614T125259--kdoc-394-man%E3%81%AE%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E3%82%B3%E3%83%BC%E3%83%AB%E3%82%BB%E3%82%AF%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%8C%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%95%E3%82%8C%E3%81%A6%E3%81%AA%E3%81%84%E3%81%93%E3%81%A8%E3%81%8C%E3%81%82%E3%82%8B__draft_wiki.html",
    "published": "2025-06-14T15:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"content\" class=\"content\"\u003e\n\n \u003cdiv id=\"outline-container-org2825984\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org2825984\"\u003e \u003ca href=\"#org2825984\"\u003eこの文書のステータス\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org2825984\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e作成\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"off\"\u003e \u003cinput type=\"checkbox\"\u003e\u003c/input\u003e \u0026lt;署名\u0026gt;\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e \u003cul class=\"org-ul\"\u003e \u003cli\u003eレビュー\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"off\"\u003e \u003cinput type=\"checkbox\"\u003e\u003c/input\u003e \u0026lt;署名\u0026gt;\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org5f0d90e\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org5f0d90e\"\u003e \u003ca href=\"#org5f0d90e\"\u003e概要\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org5f0d90e\"\u003e\n \u003cp\u003e\nLinux Mint 22.1では、manのシステムコールのセクションが見つからない。ディストリビュージョンによっては、省略されていることがあるという。\n\u003c/p\u003e\n\n \u003cp\u003e\nインストールする。\n\u003c/p\u003e\n\n \u003cdiv class=\"org-src-container\"\u003e\n \u003clabel class=\"org-src-name\"\u003e \u003cspan class=\"listing-number\"\u003eListing 1: \u003c/span\u003emanpages-devをインストールする\u003c/label\u003e \u003cpre class=\"src src-shell\"\u003esudo apt update\nsudo apt install manpages-dev\n\u003c/pre\u003e\n\u003c/div\u003e\n\n \u003cdiv class=\"org-src-container\"\u003e\n \u003cpre class=\"src src-shell\"\u003eman 2 fork | head -n10\n\u003c/pre\u003e\n\u003c/div\u003e\n\n \u003cdiv class=\"org-src-container\"\u003e\n \u003cpre class=\"src src-nil\"\u003efork(2)                       System Calls Manual                      fork(2)\n\nNAME\n       fork - create a child process\n\nLIBRARY\n       Standard C library (libc, -lc)\n\nSYNOPSIS\n       #include \u003cunistd.h\u003e\n\u003c/unistd.h\u003e\u003c/pre\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org7a7526b\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org7a7526b\"\u003e \u003ca href=\"#org7a7526b\"\u003e関連\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org7a7526b\"\u003e\n \u003cp\u003e\nなし。\n\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003c/body\u003e",
    "source": "Insomnia"
  },
  {
    "title": "KDOC 393: デプロイ時に生まれる秘孔を考慮する",
    "link": "https://kijimad.github.io/roam/20250614T104010--kdoc-393-%E3%83%87%E3%83%97%E3%83%AD%E3%82%A4%E6%99%82%E3%81%AB%E7%94%9F%E3%81%BE%E3%82%8C%E3%82%8B%E7%A7%98%E5%AD%94%E3%82%92%E8%80%83%E6%85%AE%E3%81%99%E3%82%8B__draft_wiki.html",
    "published": "2025-06-14T15:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"content\" class=\"content\"\u003e\n\n \u003cdiv id=\"outline-container-org21f2ef0\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org21f2ef0\"\u003e \u003ca href=\"#org21f2ef0\"\u003eこの文書のステータス\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org21f2ef0\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e作成\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"off\"\u003e \u003cinput type=\"checkbox\"\u003e\u003c/input\u003e \u0026lt;署名\u0026gt;\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e \u003cul class=\"org-ul\"\u003e \u003cli\u003eレビュー\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"off\"\u003e \u003cinput type=\"checkbox\"\u003e\u003c/input\u003e \u0026lt;署名\u0026gt;\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org0f341ba\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org0f341ba\"\u003e \u003ca href=\"#org0f341ba\"\u003e概要\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org0f341ba\"\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-orgde3bf7e\" class=\"outline-2\"\u003e\n \u003ch2 id=\"orgde3bf7e\"\u003e \u003ca href=\"#orgde3bf7e\"\u003e関連\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-orgde3bf7e\"\u003e\n \u003cp\u003e\nなし。\n\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003c/body\u003e",
    "source": "Insomnia"
  },
  {
    "title": "KDOC 392: 絞ってからJOINすることでパフォーマンスを改善する",
    "link": "https://kijimad.github.io/roam/20250614T103239--kdoc-392-%E7%B5%9E%E3%81%A3%E3%81%A6%E3%81%8B%E3%82%89join%E3%81%99%E3%82%8B%E3%81%93%E3%81%A8%E3%81%A7%E3%83%91%E3%83%95%E3%82%A9%E3%83%BC%E3%83%9E%E3%83%B3%E3%82%B9%E3%82%92%E6%94%B9%E5%96%84%E3%81%99%E3%82%8B__draft_wiki.html",
    "published": "2025-06-14T15:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"content\" class=\"content\"\u003e\n\n \u003cdiv id=\"outline-container-org880cbc8\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org880cbc8\"\u003e \u003ca href=\"#org880cbc8\"\u003eこの文書のステータス\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org880cbc8\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e作成\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"off\"\u003e \u003cinput type=\"checkbox\"\u003e\u003c/input\u003e \u0026lt;署名\u0026gt;\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e \u003cul class=\"org-ul\"\u003e \u003cli\u003eレビュー\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"off\"\u003e \u003cinput type=\"checkbox\"\u003e\u003c/input\u003e \u0026lt;署名\u0026gt;\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org5fec45f\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org5fec45f\"\u003e \u003ca href=\"#org5fec45f\"\u003e概要\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org5fec45f\"\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-orga82d79b\" class=\"outline-2\"\u003e\n \u003ch2 id=\"orga82d79b\"\u003e \u003ca href=\"#orga82d79b\"\u003e関連\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-orga82d79b\"\u003e\n \u003cp\u003e\nなし。\n\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003c/body\u003e",
    "source": "Insomnia"
  },
  {
    "title": "KDOC 391: 1対1のテーブルを維持する",
    "link": "https://kijimad.github.io/roam/20250614T012819--kdoc-391-1%E5%AF%BE1%E3%81%AE%E3%83%86%E3%83%BC%E3%83%96%E3%83%AB%E3%82%92%E7%B6%AD%E6%8C%81%E3%81%99%E3%82%8B__draft_wiki.html",
    "published": "2025-06-14T15:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"content\" class=\"content\"\u003e\n\n \u003cdiv id=\"outline-container-org519d5b7\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org519d5b7\"\u003e \u003ca href=\"#org519d5b7\"\u003eこの文書のステータス\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org519d5b7\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e作成\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"off\"\u003e \u003cinput type=\"checkbox\"\u003e\u003c/input\u003e \u0026lt;署名\u0026gt;\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e \u003cul class=\"org-ul\"\u003e \u003cli\u003eレビュー\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"off\"\u003e \u003cinput type=\"checkbox\"\u003e\u003c/input\u003e \u0026lt;署名\u0026gt;\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org3bd953f\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org3bd953f\"\u003e \u003ca href=\"#org3bd953f\"\u003e概要\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org3bd953f\"\u003e\n \u003cp\u003e\n親テーブルと子テーブルが1対1であることを保ちたい場面がある。親だけ、子だけが消されるとデータ不整合になったり浮いたデータになって有害である。\n\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org482ebe1\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org482ebe1\"\u003e \u003ca href=\"#org482ebe1\"\u003e関連\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org482ebe1\"\u003e\n \u003cp\u003e\nなし。\n\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003c/body\u003e",
    "source": "Insomnia"
  },
  {
    "title": "KDOC 390: イーサネットや無線LANは1つのネットワーク内での通信を行えるが、そのままではネットワークを相互に接続できない",
    "link": "https://kijimad.github.io/roam/20250613T090351--kdoc-390-%E3%82%A4%E3%83%BC%E3%82%B5%E3%83%8D%E3%83%83%E3%83%88%E3%82%84%E7%84%A1%E7%B7%9Alan%E3%81%AF1%E3%81%A4%E3%81%AE%E3%83%8D%E3%83%83%E3%83%88%E3%83%AF%E3%83%BC%E3%82%AF%E5%86%85%E3%81%A7%E3%81%AE%E9%80%9A%E4%BF%A1%E3%82%92%E8%A1%8C%E3%81%88%E3%82%8B%E3%81%8C%E3%80%81%E3%81%9D%E3%81%AE%E3%81%BE%E3%81%BE%E3%81%A7%E3%81%AF%E3%83%8D%E3%83%83%E3%83%88%E3%83%AF%E3%83%BC%E3%82%AF%E3%82%92%E7%9B%B8%E4%BA%92%E3%81%AB%E6%8E%A5%E7%B6%9A%E3%81%A7%E3%81%8D%E3%81%AA%E3%81%84__draft_book.html",
    "published": "2025-06-14T15:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"content\" class=\"content\"\u003e\n\n \u003cdiv id=\"outline-container-org2e4a9ae\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org2e4a9ae\"\u003e \u003ca href=\"#org2e4a9ae\"\u003eこの文書のステータス\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org2e4a9ae\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e作成\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"off\"\u003e \u003cinput type=\"checkbox\"\u003e\u003c/input\u003e \u0026lt;署名\u0026gt;\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e \u003cul class=\"org-ul\"\u003e \u003cli\u003eレビュー\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"off\"\u003e \u003cinput type=\"checkbox\"\u003e\u003c/input\u003e \u0026lt;署名\u0026gt;\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org6605478\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org6605478\"\u003e \u003ca href=\"#org6605478\"\u003e概要\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org6605478\"\u003e\n \u003cp\u003e\nIPの役割は複雑に接続されたインターネット(ネットワークが相互に接続されたもの)において、接続されている個々の機器が任意の相手にデータを送れるようにすることである。イーサネットや無線LANは1つのネットワーク内での通信を行えるが、そのままでは多数のネットワークを相互に接続できない(位置119)\n\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-orgc6bdcaa\" class=\"outline-2\"\u003e\n \u003ch2 id=\"orgc6bdcaa\"\u003e \u003ca href=\"#orgc6bdcaa\"\u003e関連\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-orgc6bdcaa\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e \u003ca href=\"20250506T120102--kdoc-377-『一日で読めてわかるtcpipのエッセンス』__draft_book.html#ID-20250506T120102\"\u003eKDOC 377: 『一日で読めてわかるTCP/IPのエッセンス』\u003c/a\u003eから\u003c/li\u003e\n \u003cli\u003e \u003ca href=\"20250612T204735--kdoc-387-イーサネットによる通信はmacアドレスを使う。1つのイーサネットネットワークの内部でしか通信できない__draft_book.html#ID-20250612T204735\"\u003eKDOC 387: イーサネットによる通信はMACアドレスを使う。1つのイーサネットネットワークの内部でしか通信できない\u003c/a\u003eを、言い換えたもの。層ごとに役割があり、できないことを考えると理解がしやすく見える\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003c/body\u003e",
    "source": "Insomnia"
  },
  {
    "title": "KDOC 389: GORM + MySQLでカラムの順番が変動するのはなぜか?",
    "link": "https://kijimad.github.io/roam/20250612T234932--kdoc-389-gorm-mysql%E3%81%A7%E3%82%AB%E3%83%A9%E3%83%A0%E3%81%AE%E9%A0%86%E7%95%AA%E3%81%8C%E5%A4%89%E5%8B%95%E3%81%99%E3%82%8B%E3%81%AE%E3%81%AF%E3%81%AA%E3%81%9C%E3%81%8B__draft_wiki.html",
    "published": "2025-06-14T15:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"content\" class=\"content\"\u003e\n\n \u003cdiv id=\"outline-container-org263d24e\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org263d24e\"\u003e \u003ca href=\"#org263d24e\"\u003eこの文書のステータス\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org263d24e\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e作成\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"off\"\u003e \u003cinput type=\"checkbox\"\u003e\u003c/input\u003e \u0026lt;署名\u0026gt;\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e \u003cul class=\"org-ul\"\u003e \u003cli\u003eレビュー\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"off\"\u003e \u003cinput type=\"checkbox\"\u003e\u003c/input\u003e \u0026lt;署名\u0026gt;\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org2fc6800\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org2fc6800\"\u003e \u003ca href=\"#org2fc6800\"\u003e概要\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org2fc6800\"\u003e\n \u003cp\u003e\nMySQL + gormでマイグレーションすると、カラムの順序が毎回変動する。そうなると困ることがある。tblsでDBスキーマを出力すると毎回差分が出て、自動チェックができないのである。\n\u003c/p\u003e\n\n \u003cp\u003e\nPostgresでは発生しない。原因はDBなのか、ORMなのか。なぜなのだろうか。\n\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org85f6577\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org85f6577\"\u003e \u003ca href=\"#org85f6577\"\u003e関連\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org85f6577\"\u003e\n \u003cp\u003e\nなし。\n\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003c/body\u003e",
    "source": "Insomnia"
  },
  {
    "title": "KDOC 388: 『仕事ですぐに使えるTypeScript』",
    "link": "https://kijimad.github.io/roam/20250612T231654--kdoc-388-%E3%80%8E%E4%BB%95%E4%BA%8B%E3%81%A7%E3%81%99%E3%81%90%E3%81%AB%E4%BD%BF%E3%81%88%E3%82%8Btypescript%E3%80%8F__draft_book.html",
    "published": "2025-06-14T15:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"content\" class=\"content\"\u003e\n\n \u003cdiv id=\"outline-container-orgde93684\" class=\"outline-2\"\u003e\n \u003ch2 id=\"orgde93684\"\u003e \u003ca href=\"#orgde93684\"\u003eこの文書のステータス\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-orgde93684\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e作成\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"off\"\u003e \u003cinput type=\"checkbox\"\u003e\u003c/input\u003e \u0026lt;署名\u0026gt;\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e \u003cul class=\"org-ul\"\u003e \u003cli\u003eレビュー\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"off\"\u003e \u003cinput type=\"checkbox\"\u003e\u003c/input\u003e \u0026lt;署名\u0026gt;\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org3f0fd99\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org3f0fd99\"\u003e \u003ca href=\"#org3f0fd99\"\u003e概要\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org3f0fd99\"\u003e\n \u003cp\u003e\n \u003ca href=\"https://future-architect.github.io/typescript-guide/typescript-guide.pdf\"\u003e仕事ですぐに使えるTypeScript\u003c/a\u003eは、TypeScriptの入門本。\n\u003c/p\u003e\n\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e76\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org284da0b\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org284da0b\"\u003e \u003ca href=\"#org284da0b\"\u003eメモ\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org284da0b\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003eTypeScriptのソースコードはあくまでもJavaScriptに変換されてから実行される。TypeScriptのコンパイラが持つインターフェースやtypeなど固有の型情報はランタイムには存在しない。そのため「このオブジェクトがこのインターフェースを持つとき」という実行文はほかの言語のようにそのまま実行できない(p68)\u003c/li\u003e\n \u003cli\u003eTypeScriptはそれを解決するために型ガードという機能が実装されている。実行時の文脈を解析し、型の選択肢を適切に絞り込んでいく。コンパイラはtypeofやinstanceofなどを見て型ガードと判定する、という(p68)\u003c/li\u003e\n \u003cli\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/body\u003e",
    "source": "Insomnia"
  },
  {
    "title": "KDOC 387: イーサネットによる通信はMACアドレスを使う。1つのイーサネットネットワークの内部でしか通信できない",
    "link": "https://kijimad.github.io/roam/20250612T204735--kdoc-387-%E3%82%A4%E3%83%BC%E3%82%B5%E3%83%8D%E3%83%83%E3%83%88%E3%81%AB%E3%82%88%E3%82%8B%E9%80%9A%E4%BF%A1%E3%81%AFmac%E3%82%A2%E3%83%89%E3%83%AC%E3%82%B9%E3%82%92%E4%BD%BF%E3%81%86%E3%80%821%E3%81%A4%E3%81%AE%E3%82%A4%E3%83%BC%E3%82%B5%E3%83%8D%E3%83%83%E3%83%88%E3%83%8D%E3%83%83%E3%83%88%E3%83%AF%E3%83%BC%E3%82%AF%E3%81%AE%E5%86%85%E9%83%A8%E3%81%A7%E3%81%97%E3%81%8B%E9%80%9A%E4%BF%A1%E3%81%A7%E3%81%8D%E3%81%AA%E3%81%84__draft_book.html",
    "published": "2025-06-14T15:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"content\" class=\"content\"\u003e\n\n \u003cdiv id=\"outline-container-orgbb87126\" class=\"outline-2\"\u003e\n \u003ch2 id=\"orgbb87126\"\u003e \u003ca href=\"#orgbb87126\"\u003eこの文書のステータス\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-orgbb87126\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e作成\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-06-12 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n \u003cli\u003eレビュー\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"off\"\u003e \u003cinput type=\"checkbox\"\u003e\u003c/input\u003e \u0026lt;署名\u0026gt;\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org97efc32\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org97efc32\"\u003e \u003ca href=\"#org97efc32\"\u003e概要\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org97efc32\"\u003e\n \u003cp\u003e\nイーサネットによる通信は、MACアドレスを使い、各機器のインターフェース間で行われる。イーサネットの通信は1つのイーサネットネットワークの内部でしかできない(位置274)\n\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org81a4ce4\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org81a4ce4\"\u003e \u003ca href=\"#org81a4ce4\"\u003e関連\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org81a4ce4\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e \u003ca href=\"20250506T120102--kdoc-377-『一日で読めてわかるtcpipのエッセンス』__draft_book.html#ID-20250506T120102\"\u003eKDOC 377: 『一日で読めてわかるTCP/IPのエッセンス』\u003c/a\u003eから\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org86d3f3b\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org86d3f3b\"\u003e \u003ca href=\"#org86d3f3b\"\u003eBacklinks\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org86d3f3b\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e \u003ca href=\"./20250613T090351--kdoc-390-イーサネットや無線lanは1つのネットワーク内での通信を行えるが、そのままではネットワークを相互に接続できない__draft_book.html\"\u003eKDOC 390: イーサネットや無線LANは1つのネットワーク内での通信を行えるが、そのままではネットワークを相互に接続できない\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003c/body\u003e",
    "source": "Insomnia"
  },
  {
    "title": "KDOC 386: IPはデータを機器に届けられるが、目的のプログラムを示せない",
    "link": "https://kijimad.github.io/roam/20250611T184309--kdoc-386-ip%E3%81%AF%E3%83%87%E3%83%BC%E3%82%BF%E3%82%92%E6%A9%9F%E5%99%A8%E3%81%AB%E5%B1%8A%E3%81%91%E3%82%89%E3%82%8C%E3%82%8B%E3%81%8C%E3%80%81%E7%9B%AE%E7%9A%84%E3%81%AE%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%A0%E3%82%92%E7%A4%BA%E3%81%9B%E3%81%AA%E3%81%84__draft_book.html",
    "published": "2025-06-14T15:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"content\" class=\"content\"\u003e\n\n \u003cdiv id=\"outline-container-org5816afa\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org5816afa\"\u003e \u003ca href=\"#org5816afa\"\u003eこの文書のステータス\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org5816afa\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e作成\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"off\"\u003e \u003cinput type=\"checkbox\"\u003e\u003c/input\u003e \u0026lt;署名\u0026gt;\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e \u003cul class=\"org-ul\"\u003e \u003cli\u003eレビュー\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"off\"\u003e \u003cinput type=\"checkbox\"\u003e\u003c/input\u003e \u0026lt;署名\u0026gt;\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-orgdbbbcfc\" class=\"outline-2\"\u003e\n \u003ch2 id=\"orgdbbbcfc\"\u003e \u003ca href=\"#orgdbbbcfc\"\u003e概要\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-orgdbbbcfc\"\u003e\n \u003cp\u003e\nIPはデータを機器に届けられるが、目的のプログラムを示せない。機器間の伝送までしかできない。この識別を行いプログラム間でのデータ転送を実現するのが伝送プロトコルのUDPとTCPの役割である(位置151)\n\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-orge8a68f9\" class=\"outline-2\"\u003e\n \u003ch2 id=\"orge8a68f9\"\u003e \u003ca href=\"#orge8a68f9\"\u003e関連\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-orge8a68f9\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e \u003ca href=\"20250506T120102--kdoc-377-『一日で読めてわかるtcpipのエッセンス』__draft_book.html#ID-20250506T120102\"\u003eKDOC 377: 『一日で読めてわかるTCP/IPのエッセンス』\u003c/a\u003eから\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003c/body\u003e",
    "source": "Insomnia"
  },
  {
    "title": "KDOC 385: 『続ける思考』",
    "link": "https://kijimad.github.io/roam/20250611T180912--kdoc-385-%E3%80%8E%E7%B6%9A%E3%81%91%E3%82%8B%E6%80%9D%E8%80%83%E3%80%8F__draft_book.html",
    "published": "2025-06-14T15:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"content\" class=\"content\"\u003e\n\n \u003cdiv id=\"outline-container-org1f5c285\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org1f5c285\"\u003e \u003ca href=\"#org1f5c285\"\u003eこの文書のステータス\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org1f5c285\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e作成\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"off\"\u003e \u003cinput type=\"checkbox\"\u003e\u003c/input\u003e \u0026lt;署名\u0026gt;\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e \u003cul class=\"org-ul\"\u003e \u003cli\u003eレビュー\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"off\"\u003e \u003cinput type=\"checkbox\"\u003e\u003c/input\u003e \u0026lt;署名\u0026gt;\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org3f1ea22\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org3f1ea22\"\u003e \u003ca href=\"#org3f1ea22\"\u003e概要\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org3f1ea22\"\u003e\n \u003cp\u003e\n \u003ca href=\"https://amzn.to/3SQiCn6\"\u003e『続ける思考』\u003c/a\u003eはどうやってものごとを続けるか、についての本である。「習慣家」である筆者がその方法を解説する。\n\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org30f4f2f\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org30f4f2f\"\u003e \u003ca href=\"#org30f4f2f\"\u003eメモ\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org30f4f2f\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e(感想)アイデアを説明するために映画や漫画の引用を多用する。わかりやすい。映画や漫画を見て記録したことが生かされている\u003c/li\u003e\n \u003cli\u003eただ「成果」を先に求めてしまうとそれがすべてになる。はじめた瞬間から「修練」や「修行」になってしまう。つらい(位置227)\u003c/li\u003e\n \u003cli\u003e最初は上達を感じてたのしい。でもそのうち尻すぼみしていく。なかなかうまくならない。自分ってこんなものかと考える。つまらなく感じる(位置238)\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e(感想)非常によくわかる。その繰り返しだ\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n \u003cli\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/body\u003e",
    "source": "Insomnia"
  },
  {
    "title": "KDOC 384: 『syntactic support for error handling』",
    "link": "https://kijimad.github.io/roam/20250610T175039--kdoc-384-%E3%80%8Esyntactic-support-for-error-handling%E3%80%8F__draft_book.html",
    "published": "2025-06-14T15:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"content\" class=\"content\"\u003e\n\n \u003cdiv id=\"outline-container-orge0ef471\" class=\"outline-2\"\u003e\n \u003ch2 id=\"orge0ef471\"\u003e \u003ca href=\"#orge0ef471\"\u003eこの文書のステータス\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-orge0ef471\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e作成\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-06-11 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n \u003cli\u003eレビュー\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"off\"\u003e \u003cinput type=\"checkbox\"\u003e\u003c/input\u003e \u0026lt;署名\u0026gt;\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org28c27c4\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org28c27c4\"\u003e \u003ca href=\"#org28c27c4\"\u003e概要\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org28c27c4\"\u003e\n \u003cp\u003e\nGo公式ブログの \u003ca href=\"https://go.dev/blog/error-syntax\"\u003e[ On | No ] syntactic support for error handling\u003c/a\u003eを読んだメモ。\n\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org483e549\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org483e549\"\u003e \u003ca href=\"#org483e549\"\u003eメモ\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org483e549\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003eエラーハンドリングの書き方  \u003ccode\u003eif err != nil\u003c/code\u003e に関しては、今までたくさんのプロポーザルが送られてきた\u003c/li\u003e\n \u003cli\u003e多くの場合は個人の好みに基づいた調整の提案が溢れかえった\u003c/li\u003e\n \u003cli\u003eエラーのシンタックスと、エラーハンドリングは別の問題である\u003c/li\u003e\n \u003cli\u003e定型文を覆い隠すと、明快さが失われる\u003c/li\u003e\n \u003cli\u003eワンラインの、追加文法は受け入れない。1つのことは1つの書き方に反するから\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e \u003ccode\u003e:=\u003c/code\u003e の、再宣言する機能は例外である。エラーハンドリングのため追加された機能\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n \u003cli\u003e \u003ccode\u003eCmp.Or\u003c/code\u003e を使って複数のエラーを一気にチェックできる。値であるから、自由度がある\u003c/li\u003e\n \u003cli\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/body\u003e",
    "source": "Insomnia"
  },
  {
    "title": "KDOC 383: JavaScriptはブラウザの組み込み言語でありランタイムの更新は難しい",
    "link": "https://kijimad.github.io/roam/20250603T215644--kdoc-383-javascript%E3%81%AF%E3%83%96%E3%83%A9%E3%82%A6%E3%82%B6%E3%81%AE%E7%B5%84%E3%81%BF%E8%BE%BC%E3%81%BF%E8%A8%80%E8%AA%9E%E3%81%A7%E3%81%82%E3%82%8A%E3%83%A9%E3%83%B3%E3%82%BF%E3%82%A4%E3%83%A0%E3%81%AE%E6%9B%B4%E6%96%B0%E3%81%AF%E9%9B%A3%E3%81%97%E3%81%84__draft_permanent.html",
    "published": "2025-06-14T15:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"content\" class=\"content\"\u003e\n\n \u003cdiv id=\"outline-container-org06c8bd0\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org06c8bd0\"\u003e \u003ca href=\"#org06c8bd0\"\u003eこの文書のステータス\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org06c8bd0\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e作成\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-06-11 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n \u003cli\u003eレビュー\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"off\"\u003e \u003cinput type=\"checkbox\"\u003e\u003c/input\u003e \u0026lt;署名\u0026gt;\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org6bdce7f\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org6bdce7f\"\u003e \u003ca href=\"#org6bdce7f\"\u003e概要\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org6bdce7f\"\u003e\n \u003cp\u003e\nJavaScriptはブラウザの組み込み言語であるため、サーバーアプリケーションのようにランタイムをアプリケーションに合わせて維持したり更新できない。そのため、拡張した機能や文法を使いつつJavaScriptに変換することでランタイムを変更することなく追加機能の恩恵を受けるということをしている。\n\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org5292e93\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org5292e93\"\u003e \u003ca href=\"#org5292e93\"\u003e関連\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org5292e93\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e \u003ca href=\"20250612T231654--kdoc-388-『仕事ですぐに使えるtypescript』__draft_book.html#ID-20250612T231654\"\u003eKDOC 388: 『仕事ですぐに使えるTypeScript』\u003c/a\u003e4ページから\u003c/li\u003e\n \u003cli\u003e \u003ca href=\"20250603T215521--kdoc-382-javascriptにトランスパイルするのはなぜか__draft_permanent.html#ID-20250603T215521\"\u003eKDOC 382: JavaScriptにトランスパイルするのはなぜか?\u003c/a\u003e。疑問に対する答え\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003c/body\u003e",
    "source": "Insomnia"
  },
  {
    "title": "KDOC 382: JavaScriptにトランスパイルするのはなぜか?",
    "link": "https://kijimad.github.io/roam/20250603T215521--kdoc-382-javascript%E3%81%AB%E3%83%88%E3%83%A9%E3%83%B3%E3%82%B9%E3%83%91%E3%82%A4%E3%83%AB%E3%81%99%E3%82%8B%E3%81%AE%E3%81%AF%E3%81%AA%E3%81%9C%E3%81%8B__draft_permanent.html",
    "published": "2025-06-14T15:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"content\" class=\"content\"\u003e\n\n \u003cdiv id=\"outline-container-orgf77d7c2\" class=\"outline-2\"\u003e\n \u003ch2 id=\"orgf77d7c2\"\u003e \u003ca href=\"#orgf77d7c2\"\u003eこの文書のステータス\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-orgf77d7c2\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e作成\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-06-11 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n \u003cli\u003eレビュー\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"off\"\u003e \u003cinput type=\"checkbox\"\u003e\u003c/input\u003e \u0026lt;署名\u0026gt;\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-orgd4039ea\" class=\"outline-2\"\u003e\n \u003ch2 id=\"orgd4039ea\"\u003e \u003ca href=\"#orgd4039ea\"\u003e概要\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-orgd4039ea\"\u003e\n \u003cp\u003e\nTypeScriptにせよ、CoffeeScriptなど、JavaScriptにトランスパイルするプログラミング言語がある。ほかの言語では見ない特徴に見える。なぜだろうか。\n\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-orga9ded80\" class=\"outline-2\"\u003e\n \u003ch2 id=\"orga9ded80\"\u003e \u003ca href=\"#orga9ded80\"\u003e関連\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-orga9ded80\"\u003e\n \u003cp\u003e\nなし。\n\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org3b72c3b\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org3b72c3b\"\u003e \u003ca href=\"#org3b72c3b\"\u003eBacklinks\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org3b72c3b\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e \u003ca href=\"./20250603T215644--kdoc-383-javascriptはブラウザの組み込み言語でありランタイムの更新は難しい__draft_permanent.html\"\u003eKDOC 383: JavaScriptはブラウザの組み込み言語でありランタイムの更新は難しい\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003c/body\u003e",
    "source": "Insomnia"
  },
  {
    "title": "KDOC 381: 識別子の先頭に数値が使えないのは区別がつかなくなるから",
    "link": "https://kijimad.github.io/roam/20250603T215002--kdoc-381-%E8%AD%98%E5%88%A5%E5%AD%90%E3%81%AE%E5%85%88%E9%A0%AD%E3%81%AB%E6%95%B0%E5%80%A4%E3%81%8C%E4%BD%BF%E3%81%88%E3%81%AA%E3%81%84%E3%81%AE%E3%81%AF%E5%8C%BA%E5%88%A5%E3%81%8C%E3%81%A4%E3%81%8B%E3%81%AA%E3%81%8F%E3%81%AA%E3%82%8B%E3%81%8B%E3%82%89__draft_permanent.html",
    "published": "2025-06-14T15:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"content\" class=\"content\"\u003e\n\n \u003cdiv id=\"outline-container-org05b285d\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org05b285d\"\u003e \u003ca href=\"#org05b285d\"\u003eこの文書のステータス\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org05b285d\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e作成\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-06-11 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n \u003cli\u003eレビュー\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"off\"\u003e \u003cinput type=\"checkbox\"\u003e\u003c/input\u003e \u0026lt;署名\u0026gt;\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org224825e\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org224825e\"\u003e \u003ca href=\"#org224825e\"\u003e概要\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org224825e\"\u003e\n \u003cp\u003e\n関数名や変数名といった識別子には、先頭に数字もしくは数字だけは無効、という制限をするプログラミング言語が多い。それは、数値リテラルと区別がつかなくなるためである。\n\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org8c90355\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org8c90355\"\u003e \u003ca href=\"#org8c90355\"\u003e関連\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org8c90355\"\u003e\n \u003cp\u003e\nなし。\n\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003c/body\u003e",
    "source": "Insomnia"
  },
  {
    "title": "KDOC 380: 『すごい面接の技術 転職活動で「選ばれる人」になる唯一の方法』",
    "link": "https://kijimad.github.io/roam/20250602T184338--kdoc-380-%E3%80%8E%E3%81%99%E3%81%94%E3%81%84%E9%9D%A2%E6%8E%A5%E3%81%AE%E6%8A%80%E8%A1%93-%E8%BB%A2%E8%81%B7%E6%B4%BB%E5%8B%95%E3%81%A7%E3%80%8C%E9%81%B8%E3%81%B0%E3%82%8C%E3%82%8B%E4%BA%BA%E3%80%8D%E3%81%AB%E3%81%AA%E3%82%8B%E5%94%AF%E4%B8%80%E3%81%AE%E6%96%B9%E6%B3%95%E3%80%8F__book.html",
    "published": "2025-06-14T15:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"content\" class=\"content\"\u003e\n\n \u003cdiv id=\"outline-container-org458fb26\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org458fb26\"\u003e \u003ca href=\"#org458fb26\"\u003eこの文書のステータス\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org458fb26\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e作成\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-06-09 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n \u003cli\u003eレビュー\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-06-11 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-orgc4eb1d2\" class=\"outline-2\"\u003e\n \u003ch2 id=\"orgc4eb1d2\"\u003e \u003ca href=\"#orgc4eb1d2\"\u003e概要\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-orgc4eb1d2\"\u003e\n \u003cp\u003e\n『すごい面接の技術 転職活動で「選ばれる人」になる唯一の方法』は、転職活動の面接についての本。\n\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org8c8b362\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org8c8b362\"\u003e \u003ca href=\"#org8c8b362\"\u003eメモ\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org8c8b362\"\u003e\n \u003cp\u003e\n面接官の立場になって考えること。\n\u003c/p\u003e\n\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e \u003cp\u003e\n視点\n\u003c/p\u003e\n\n \u003cp\u003e\n面接官の立場で考えて、「相手が欲しい答え」が何か見つけ出す。\n\u003c/p\u003e\u003c/li\u003e\n\n \u003cli\u003e \u003cp\u003e\nわかりやすさ\n\u003c/p\u003e\n\n \u003cp\u003e\n「答え」をわかりやすく伝える。\n\u003c/p\u003e\u003c/li\u003e\n\n \u003cli\u003eストーリー\n\n \u003cul class=\"org-ul\"\u003e \u003cli\u003eキャリアの過去と未来をつなげるストーリーを使って、「だから御社で活躍できる」を伝える\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e \u003cp\u003e\nメモ。\n\u003c/p\u003e\n\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e転職活動は能力やスキル、経験だけで結果が決まらない。決まるなら、面接する必要はないから。だから、チャンスであるともいえる。不利な状況を覆せる可能性がある(p6)\u003c/li\u003e\n \u003cli\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/body\u003e",
    "source": "Insomnia"
  },
  {
    "title": "KDOC 379: 選択するとき考えること",
    "link": "https://kijimad.github.io/roam/20250518T092255--kdoc-379-%E9%81%B8%E6%8A%9E%E3%81%99%E3%82%8B%E3%81%A8%E3%81%8D%E8%80%83%E3%81%88%E3%82%8B%E3%81%93%E3%81%A8__draft_essay.html",
    "published": "2025-06-14T15:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"content\" class=\"content\"\u003e\n\n \u003cdiv id=\"outline-container-org9c24426\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org9c24426\"\u003e \u003ca href=\"#org9c24426\"\u003eこの文書のステータス\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org9c24426\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e作成\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"off\"\u003e \u003cinput type=\"checkbox\"\u003e\u003c/input\u003e \u0026lt;署名\u0026gt;\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e \u003cul class=\"org-ul\"\u003e \u003cli\u003eレビュー\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"off\"\u003e \u003cinput type=\"checkbox\"\u003e\u003c/input\u003e \u0026lt;署名\u0026gt;\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-orgf352ddf\" class=\"outline-2\"\u003e\n \u003ch2 id=\"orgf352ddf\"\u003e \u003ca href=\"#orgf352ddf\"\u003e概要\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-orgf352ddf\"\u003e\n \u003cp\u003e\n選択するうえで考えること。どちらもIT投資家ポール・グレアムの何かのエッセイで言っていたことで、ずっとこうやって選ぶようにしている。\n\u003c/p\u003e\n\n \u003col class=\"org-ol\"\u003e \u003cli\u003e \u003cp\u003e\n好きなことをやる\n\u003c/p\u003e\n\n \u003cp\u003e\n好きなことをやっているときが一番幸福で、能力を発揮できると考えている。好きにも程度があって、金を払ったりリスクを負っても追い求めるくらい好きなこと、を見つけてやり続けることが大切だと考えている。例えば昼はバイトをして夜演奏するミュージシャンは、好きの程度が非常に高いと考えている。\n\u003c/p\u003e\u003c/li\u003e\n\n \u003cli\u003e \u003cp\u003e\n難しいことをやる\n\u003c/p\u003e\n\n \u003cp\u003e\u003c/p\u003e\u003c/li\u003e\u003c/ol\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/body\u003e",
    "source": "Insomnia"
  },
  {
    "title": "KDOC 378: 『RFC 1952: GZIP file format specification version 4.3』",
    "link": "https://kijimad.github.io/roam/20250506T160040--kdoc-378-%E3%80%8Erfc-1952-gzip-file-format-specification-version-43%E3%80%8F__draft_book.html",
    "published": "2025-06-14T15:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"content\" class=\"content\"\u003e\n\n \u003cdiv id=\"outline-container-org55d6ec5\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org55d6ec5\"\u003e \u003ca href=\"#org55d6ec5\"\u003eこの文書のステータス\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org55d6ec5\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e作成\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-06 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n \u003cli\u003eレビュー\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"off\"\u003e \u003cinput type=\"checkbox\"\u003e\u003c/input\u003e \u0026lt;署名\u0026gt;\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-orgc040429\" class=\"outline-2\"\u003e\n \u003ch2 id=\"orgc040429\"\u003e \u003ca href=\"#orgc040429\"\u003e概要\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-orgc040429\"\u003e\n \u003cp\u003e\n \u003ca href=\"https://www.rfc-editor.org/rfc/rfc1952.html\"\u003eRFC 1952: GZIP file format specification version 4.3\u003c/a\u003eはgzipファイルの仕様を示した文書。\n\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-orge9328bf\" class=\"outline-2\"\u003e\n \u003ch2 id=\"orge9328bf\"\u003e \u003ca href=\"#orge9328bf\"\u003eメモ\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-orge9328bf\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003egzipファイルフォーマットは一連の「メンバ」、圧縮データのセットで構成される。\u003c/li\u003e\n \u003cli\u003eデータ仕様のアスキーアートにも仕様がある。1つの箱は1バイトを示す\u003c/li\u003e\n \u003cli\u003eleast significant: 最下位ビット\u003c/li\u003e\n \u003cli\u003esignificant bit: 最上位ビット\u003c/li\u003e\n \u003cli\u003e先頭はgzipファイルであることを示すID\n \u003cul class=\"org-ul\"\u003e \u003cli\u003eID1 = 31(0x1f, \\037)\u003c/li\u003e\n \u003cli\u003eID2 = 139(0x8b, \\213)\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e \u003cdiv class=\"org-src-container\"\u003e\n \u003clabel class=\"org-src-name\"\u003e \u003cspan class=\"listing-number\"\u003eListing 1: \u003c/span\u003e先頭2バイトがIDの1f 8bになっている\u003c/label\u003e \u003cpre class=\"src src-shell\"\u003e \u003cspan class=\"org-builtin\"\u003eecho\u003c/span\u003e  \u003cspan class=\"org-string\"\u003e\u0026#34;xxx\u0026#34;\u003c/span\u003e \u0026gt; aaa\ngzip aaa\nxxd aaa.gz\nrm aaa.gz\n\u003c/pre\u003e\n\u003c/div\u003e\n\n \u003cdiv class=\"org-src-container\"\u003e\n \u003cpre class=\"src src-nil\"\u003e00000000: 1f8b 0808 d6bc 1968 0003 6161 6100 aba8  .......h..aaa...\n00000010: a8e0 0200 6774 1ed2 0400 0000            ....gt......\n\u003c/pre\u003e\n\u003c/div\u003e\n\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e誤り検出符号(CRC)  \u003ca href=\"https://ja.wikipedia.org/wiki/%E5%B7%A1%E5%9B%9E%E5%86%97%E9%95%B7%E6%A4%9C%E6%9F%BB\"\u003e巡回冗長検査 - Wikipedia\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e \u003cdiv class=\"org-src-container\"\u003e\n \u003clabel class=\"org-src-name\"\u003e \u003cspan class=\"listing-number\"\u003eListing 2: \u003c/span\u003e\u003c/label\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/body\u003e",
    "source": "Insomnia"
  },
  {
    "title": "KDOC 377: 『一日で読めてわかるTCP/IPのエッセンス』",
    "link": "https://kijimad.github.io/roam/20250506T120102--kdoc-377-%E3%80%8E%E4%B8%80%E6%97%A5%E3%81%A7%E8%AA%AD%E3%82%81%E3%81%A6%E3%82%8F%E3%81%8B%E3%82%8Btcpip%E3%81%AE%E3%82%A8%E3%83%83%E3%82%BB%E3%83%B3%E3%82%B9%E3%80%8F__draft_book.html",
    "published": "2025-06-14T15:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"content\" class=\"content\"\u003e\n\n \u003cdiv id=\"outline-container-org71e616f\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org71e616f\"\u003e \u003ca href=\"#org71e616f\"\u003eこの文書のステータス\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org71e616f\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e作成\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-11 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n \u003cli\u003eレビュー\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"off\"\u003e \u003cinput type=\"checkbox\"\u003e\u003c/input\u003e \u0026lt;署名\u0026gt;\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-orge7aafaa\" class=\"outline-2\"\u003e\n \u003ch2 id=\"orge7aafaa\"\u003e \u003ca href=\"#orge7aafaa\"\u003e概要\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-orge7aafaa\"\u003e\n \u003cp\u003e\n \u003ca href=\"https://nextpublishing.jp/book/4891.html\"\u003e1日で読めてわかるTCP/IPのエッセンス\u003c/a\u003eはTCP/IPを易しく解説する本。\n\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-orgfc925ca\" class=\"outline-2\"\u003e\n \u003ch2 id=\"orgfc925ca\"\u003e \u003ca href=\"#orgfc925ca\"\u003eメモ\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-orgfc925ca\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003eTCP/IPは実際に通信するネットワーク方式を定めていない。TCP/IPは特定のネットワーク方式に依存するプロトコルではない。ネットワーク方式に依存する要素はプロトコルに含まれていない(位置84)\u003c/li\u003e\n \u003cli\u003eTCP/IPは使用するアプリケーションの動作を定めない。アプリケーションやサービスを自由に実装するための基盤となる(位置84)\u003c/li\u003e\n \u003cli\u003eTCP/IPはイーサネットなどの実際のネットワークシステムとネットワークを使うアプリケーションの間に位置する。アプリケーションとネットワークハードウェアの間を取り持ち、汎用的な通信サービスを提供する(位置106)\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/body\u003e",
    "source": "Insomnia"
  },
  {
    "title": "KDOC 376: 業務経験や企業ブランドの評価割合が高い理由",
    "link": "https://kijimad.github.io/roam/20250505T214835--kdoc-376-%E6%A5%AD%E5%8B%99%E7%B5%8C%E9%A8%93%E3%82%84%E4%BC%81%E6%A5%AD%E3%83%96%E3%83%A9%E3%83%B3%E3%83%89%E3%81%AE%E8%A9%95%E4%BE%A1%E5%89%B2%E5%90%88%E3%81%8C%E9%AB%98%E3%81%84%E7%90%86%E7%94%B1__permanent.html",
    "published": "2025-06-14T15:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"content\" class=\"content\"\u003e\n\n \u003cdiv id=\"outline-container-org51946d5\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org51946d5\"\u003e \u003ca href=\"#org51946d5\"\u003eこの文書のステータス\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org51946d5\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e作成\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-06 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n \u003cli\u003eレビュー\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-18 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org48f6f6c\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org48f6f6c\"\u003e \u003ca href=\"#org48f6f6c\"\u003e概要\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org48f6f6c\"\u003e\n \u003cp\u003e\n(日本の)中途採用では、採用において類似した業務経験や、有名企業への所属が合否に貢献する割合が高い。面接はマイナス評価によって弾くシステムになっていることが多い。 \u003ca href=\"20250505T214152--kdoc-375-面接官たちは自分たちの見立てや決断において、リスクを取りたがらない__book.html#ID-20250505T214152\"\u003eKDOC 375: 面接官たちは自分たちの見立てや決断において、リスクを取りたがらない\u003c/a\u003eためである。他国でもエリート層の採用は同じ傾向があるという。\n\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org10aa1ad\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org10aa1ad\"\u003e \u003ca href=\"#org10aa1ad\"\u003e関連\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org10aa1ad\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e \u003ca href=\"20250504T212651--kdoc-370-『人を選ぶ技術』__book.html#ID-20250504T212651\"\u003eKDOC 370: 『人を選ぶ技術』\u003c/a\u003eからメモした\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003c/body\u003e",
    "source": "Insomnia"
  },
  {
    "title": "KDOC 375: 面接官たちは自分たちの見立てや決断において、リスクを取りたがらない",
    "link": "https://kijimad.github.io/roam/20250505T214152--kdoc-375-%E9%9D%A2%E6%8E%A5%E5%AE%98%E3%81%9F%E3%81%A1%E3%81%AF%E8%87%AA%E5%88%86%E3%81%9F%E3%81%A1%E3%81%AE%E8%A6%8B%E7%AB%8B%E3%81%A6%E3%82%84%E6%B1%BA%E6%96%AD%E3%81%AB%E3%81%8A%E3%81%84%E3%81%A6%E3%80%81%E3%83%AA%E3%82%B9%E3%82%AF%E3%82%92%E5%8F%96%E3%82%8A%E3%81%9F%E3%81%8C%E3%82%89%E3%81%AA%E3%81%84__book.html",
    "published": "2025-06-14T15:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"content\" class=\"content\"\u003e\n\n \u003cdiv id=\"outline-container-orga0a7dd1\" class=\"outline-2\"\u003e\n \u003ch2 id=\"orga0a7dd1\"\u003e \u003ca href=\"#orga0a7dd1\"\u003eこの文書のステータス\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-orga0a7dd1\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e作成\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-06 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n \u003cli\u003eレビュー\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-18 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org83a4647\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org83a4647\"\u003e \u003ca href=\"#org83a4647\"\u003e概要\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org83a4647\"\u003e\n \u003cp\u003e\n面接官たちは自分たちの見立てや決断において、リスクを取りたがらない。それは会社のシステムによるもので、当たったときの加点よりもうまくいかなかったときの減点が大きいシステムになっていることが多いためである(位置2017)\n\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org5df41ef\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org5df41ef\"\u003e \u003ca href=\"#org5df41ef\"\u003e関連\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org5df41ef\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e \u003ca href=\"20250504T212651--kdoc-370-『人を選ぶ技術』__book.html#ID-20250504T212651\"\u003eKDOC 370: 『人を選ぶ技術』\u003c/a\u003eからメモした\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org7c815a6\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org7c815a6\"\u003e \u003ca href=\"#org7c815a6\"\u003eBacklinks\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org7c815a6\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e \u003ca href=\"./20250505T214835--kdoc-376-業務経験や企業ブランドの評価割合が高い理由__permanent.html\"\u003eKDOC 376: 業務経験や企業ブランドの評価割合が高い理由\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003c/body\u003e",
    "source": "Insomnia"
  },
  {
    "title": "KDOC 374: 会社の評価システムと権限委譲システムはカルチャーの絶対的な指標となる",
    "link": "https://kijimad.github.io/roam/20250505T213328--kdoc-374-%E4%BC%9A%E7%A4%BE%E3%81%AE%E8%A9%95%E4%BE%A1%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E3%81%A8%E6%A8%A9%E9%99%90%E5%A7%94%E8%AD%B2%E3%82%B7%E3%82%B9%E3%83%86%E3%83%A0%E3%81%AF%E3%82%AB%E3%83%AB%E3%83%81%E3%83%A3%E3%83%BC%E3%81%AE%E7%B5%B6%E5%AF%BE%E7%9A%84%E3%81%AA%E6%8C%87%E6%A8%99%E3%81%A8%E3%81%AA%E3%82%8B__book.html",
    "published": "2025-06-14T15:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"content\" class=\"content\"\u003e\n\n \u003cdiv id=\"outline-container-org5abd368\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org5abd368\"\u003e \u003ca href=\"#org5abd368\"\u003eこの文書のステータス\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org5abd368\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e作成\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-06 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n \u003cli\u003eレビュー\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-18 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-orgd916d27\" class=\"outline-2\"\u003e\n \u003ch2 id=\"orgd916d27\"\u003e \u003ca href=\"#orgd916d27\"\u003e概要\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-orgd916d27\"\u003e\n \u003cp\u003e\n会社のカルチャーを把握するうえで絶対的な指標となりうるのは、会社の「評価システム」と「権限委譲システム」である。\n\u003c/p\u003e\n\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e \u003cp\u003e\n評価システム\n\u003c/p\u003e\n\n \u003cp\u003e\nチームワークと自己犠牲を評価するのか、個人としての結果をより評価するのか。固定給が大きくてボーナスでは差が出ないのか、成果でボーナスをもらえるのか。評価のシステムがどうデザインされているかは企業カルチャーに色濃く反映される(位置1489)\n\u003c/p\u003e\u003c/li\u003e\n\n \u003cli\u003e \u003cp\u003e\n権限委譲システム\n\u003c/p\u003e\n\n \u003cp\u003e\nものの決め方のスタイル。中央集権的だと早いが多面的な検証はしにくい。移譲されていると多面的な意見で是非を検討できるがスピードは遅くなりやすい(位置1505)\n\u003c/p\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org970cd5f\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org970cd5f\"\u003e \u003ca href=\"#org970cd5f\"\u003e関連\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org970cd5f\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e \u003ca href=\"20250504T212651--kdoc-370-『人を選ぶ技術』__book.html#ID-20250504T212651\"\u003eKDOC 370: 『人を選ぶ技術』\u003c/a\u003eからメモした\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003c/body\u003e",
    "source": "Insomnia"
  },
  {
    "title": "KDOC 373: アイスブレイクのコツは相手の氷ではなく自分自身の氷を溶かすこと",
    "link": "https://kijimad.github.io/roam/20250505T212440--kdoc-373-%E3%82%A2%E3%82%A4%E3%82%B9%E3%83%96%E3%83%AC%E3%82%A4%E3%82%AF%E3%81%AE%E3%82%B3%E3%83%84%E3%81%AF%E7%9B%B8%E6%89%8B%E3%81%AE%E6%B0%B7%E3%81%A7%E3%81%AF%E3%81%AA%E3%81%8F%E8%87%AA%E5%88%86%E8%87%AA%E8%BA%AB%E3%81%AE%E6%B0%B7%E3%82%92%E6%BA%B6%E3%81%8B%E3%81%99%E3%81%93%E3%81%A8__book.html",
    "published": "2025-06-14T15:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"content\" class=\"content\"\u003e\n\n \u003cdiv id=\"outline-container-orgbb6b103\" class=\"outline-2\"\u003e\n \u003ch2 id=\"orgbb6b103\"\u003e \u003ca href=\"#orgbb6b103\"\u003eこの文書のステータス\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-orgbb6b103\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e作成\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-06 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n \u003cli\u003eレビュー\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-18 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-orgde7e8db\" class=\"outline-2\"\u003e\n \u003ch2 id=\"orgde7e8db\"\u003e \u003ca href=\"#orgde7e8db\"\u003e概要\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-orgde7e8db\"\u003e\n \u003cp\u003e\nアイスブレイクのコツは、相手の氷ではなく「自分自身の氷」を溶かすことにある。自分はどうすればリラックスできるか考えればよい(位置1233)\n\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org11cadf3\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org11cadf3\"\u003e \u003ca href=\"#org11cadf3\"\u003e関連\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org11cadf3\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e \u003ca href=\"20250504T212651--kdoc-370-『人を選ぶ技術』__book.html#ID-20250504T212651\"\u003eKDOC 370: 『人を選ぶ技術』\u003c/a\u003eからメモした\u003c/li\u003e\n \u003cli\u003e \u003ca href=\"20250505T212014--kdoc-372-相手をリラックスさせるには自分自身がリラックスすればよい__book.html#ID-20250505T212014\"\u003eKDOC 372: 相手をリラックスさせるには自分自身がリラックスすればよい\u003c/a\u003e。アイスブレイクは具体例の1つ\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003c/body\u003e",
    "source": "Insomnia"
  },
  {
    "title": "KDOC 372: 相手をリラックスさせるには自分自身がリラックスすればよい",
    "link": "https://kijimad.github.io/roam/20250505T212014--kdoc-372-%E7%9B%B8%E6%89%8B%E3%82%92%E3%83%AA%E3%83%A9%E3%83%83%E3%82%AF%E3%82%B9%E3%81%95%E3%81%9B%E3%82%8B%E3%81%AB%E3%81%AF%E8%87%AA%E5%88%86%E8%87%AA%E8%BA%AB%E3%81%8C%E3%83%AA%E3%83%A9%E3%83%83%E3%82%AF%E3%82%B9%E3%81%99%E3%82%8C%E3%81%B0%E3%82%88%E3%81%84__book.html",
    "published": "2025-06-14T15:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"content\" class=\"content\"\u003e\n\n \u003cdiv id=\"outline-container-orgd98b010\" class=\"outline-2\"\u003e\n \u003ch2 id=\"orgd98b010\"\u003e \u003ca href=\"#orgd98b010\"\u003eこの文書のステータス\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-orgd98b010\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e作成\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-06 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n \u003cli\u003eレビュー\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-18 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org0218678\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org0218678\"\u003e \u003ca href=\"#org0218678\"\u003e概要\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org0218678\"\u003e\n \u003cp\u003e\n誰もが実践できる相手をリラックスさせる方法は、自分自身がリラックスすることである。人間の感情はたやすく他人に伝播する。積極的に和らぐことが初対面時では重要である(位置1199)\n\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-orgafd219e\" class=\"outline-2\"\u003e\n \u003ch2 id=\"orgafd219e\"\u003e \u003ca href=\"#orgafd219e\"\u003e関連\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-orgafd219e\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e \u003ca href=\"20250504T212651--kdoc-370-『人を選ぶ技術』__book.html#ID-20250504T212651\"\u003eKDOC 370: 『人を選ぶ技術』\u003c/a\u003eからメモした\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-orgb24bf65\" class=\"outline-2\"\u003e\n \u003ch2 id=\"orgb24bf65\"\u003e \u003ca href=\"#orgb24bf65\"\u003eBacklinks\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-orgb24bf65\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e \u003ca href=\"./20250505T212440--kdoc-373-アイスブレイクのコツは相手の氷ではなく自分自身の氷を溶かすこと__book.html\"\u003eKDOC 373: アイスブレイクのコツは相手の氷ではなく自分自身の氷を溶かすこと\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003c/body\u003e",
    "source": "Insomnia"
  },
  {
    "title": "KDOC 371: 初対面の緊張は正対しないことで緩和できる",
    "link": "https://kijimad.github.io/roam/20250505T211616--kdoc-371-%E5%88%9D%E5%AF%BE%E9%9D%A2%E3%81%AE%E7%B7%8A%E5%BC%B5%E3%81%AF%E6%AD%A3%E5%AF%BE%E3%81%97%E3%81%AA%E3%81%84%E3%81%93%E3%81%A8%E3%81%A7%E7%B7%A9%E5%92%8C%E3%81%A7%E3%81%8D%E3%82%8B__book.html",
    "published": "2025-06-14T15:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"content\" class=\"content\"\u003e\n\n \u003cdiv id=\"outline-container-org495ac0d\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org495ac0d\"\u003e \u003ca href=\"#org495ac0d\"\u003eこの文書のステータス\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org495ac0d\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e作成\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-06 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n \u003cli\u003eレビュー\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-18 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org7cc1d16\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org7cc1d16\"\u003e \u003ca href=\"#org7cc1d16\"\u003e概要\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org7cc1d16\"\u003e\n \u003cp\u003e\n初対面の緊張は座り方で緩和できる。こぶしひとつ分ほど椅子を斜めにずらし、ラフな着座位置を作る。真正面で向き合わないようにする。少し打ち解けてきたら、体を斜めにして正対しないようにする(位置1145)\n\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-orge45eed0\" class=\"outline-2\"\u003e\n \u003ch2 id=\"orge45eed0\"\u003e \u003ca href=\"#orge45eed0\"\u003e関連\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-orge45eed0\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e \u003ca href=\"20250504T212651--kdoc-370-『人を選ぶ技術』__book.html#ID-20250504T212651\"\u003eKDOC 370: 『人を選ぶ技術』\u003c/a\u003eからメモした\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003c/body\u003e",
    "source": "Insomnia"
  },
  {
    "title": "KDOC 370: 『人を選ぶ技術』",
    "link": "https://kijimad.github.io/roam/20250504T212651--kdoc-370-%E3%80%8E%E4%BA%BA%E3%82%92%E9%81%B8%E3%81%B6%E6%8A%80%E8%A1%93%E3%80%8F__book.html",
    "published": "2025-06-14T15:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"content\" class=\"content\"\u003e\n\n \u003cdiv id=\"outline-container-orgac2b20a\" class=\"outline-2\"\u003e\n \u003ch2 id=\"orgac2b20a\"\u003e \u003ca href=\"#orgac2b20a\"\u003eこの文書のステータス\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-orgac2b20a\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e作成\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-05 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n \u003cli\u003eレビュー\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-18 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org47774db\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org47774db\"\u003e \u003ca href=\"#org47774db\"\u003e概要\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org47774db\"\u003e\n \u003cp\u003e\n『人を選ぶ技術』は世界的な人材会社で働く著者が、企業の採用について解説した本。\n\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org86fdd39\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org86fdd39\"\u003e \u003ca href=\"#org86fdd39\"\u003eメモ\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org86fdd39\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e人の優劣を判断するとき、特定の評価軸でしか判断しないことが多い。何をもって優秀とするかは個人や会社によって異なり、「弁が立つ」「花がある」などがある。そうではないが、大きなことをなした人は経営者は多い。成功したスタートアップでものを言ったのは「粘り強さ」と「鈍感力」であり、優劣を見誤った、という(位置517)\u003c/li\u003e\n \u003cli\u003eコンピテンシーとは、その人がどんなシチュエーションでどういうアクションを取りがちかという固有の行動パターン、だという(位置713)\u003c/li\u003e\n \u003cli\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/body\u003e",
    "source": "Insomnia"
  },
  {
    "title": "KDOC 369: 名前付きパイプは読み書き両方をオープンしてないとブロックする",
    "link": "https://kijimad.github.io/roam/20250504T011045--kdoc-369-%E5%90%8D%E5%89%8D%E4%BB%98%E3%81%8D%E3%83%91%E3%82%A4%E3%83%97%E3%81%AF%E8%AA%AD%E3%81%BF%E6%9B%B8%E3%81%8D%E4%B8%A1%E6%96%B9%E3%82%92%E3%82%AA%E3%83%BC%E3%83%97%E3%83%B3%E3%81%97%E3%81%A6%E3%81%AA%E3%81%84%E3%81%A8%E3%83%96%E3%83%AD%E3%83%83%E3%82%AF%E3%81%99%E3%82%8B__wiki.html",
    "published": "2025-06-14T15:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"content\" class=\"content\"\u003e\n\n \u003cdiv id=\"outline-container-org0cb9254\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org0cb9254\"\u003e \u003ca href=\"#org0cb9254\"\u003eこの文書のステータス\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org0cb9254\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e作成\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-06 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n \u003cli\u003eレビュー\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-18 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-orgd049ea0\" class=\"outline-2\"\u003e\n \u003ch2 id=\"orgd049ea0\"\u003e \u003ca href=\"#orgd049ea0\"\u003e概要\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-orgd049ea0\"\u003e\n \u003cp\u003e\n名前付きパイプは読み書き両方をオープンしてないと処理がブロックされる。\n\u003c/p\u003e\n\n \u003cdiv class=\"org-src-container\"\u003e\n \u003cpre class=\"src src-shell\"\u003eman fifo\n\u003c/pre\u003e\n\u003c/div\u003e\n\n \u003cblockquote\u003e\n \u003cp\u003e\nThe FIFO must be opened on both ends (reading and writing) before data can be passed. Normally, opening the FIFO blocks until the other end is opened also.\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n \u003cdiv class=\"org-src-container\"\u003e\n \u003cpre class=\"src src-shell\"\u003emkfifo my_pipe\ncat my_pipe \u0026amp;  \u003cspan class=\"org-comment-delimiter\"\u003e# \u003c/span\u003e \u003cspan class=\"org-comment\"\u003e読み込み。これを実行しないと書き込みで止まる\u003c/span\u003e\n \u003cspan class=\"org-builtin\"\u003eecho\u003c/span\u003e  \u003cspan class=\"org-string\"\u003e\u0026#34;aaa\u0026#34;\u003c/span\u003e \u0026gt; my_pipe  \u003cspan class=\"org-comment-delimiter\"\u003e# \u003c/span\u003e \u003cspan class=\"org-comment\"\u003e書き込み\u003c/span\u003e\n\u003c/pre\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org0890160\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org0890160\"\u003e \u003ca href=\"#org0890160\"\u003e関連\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org0890160\"\u003e\n \u003cp\u003e\nなし。\n\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003c/body\u003e",
    "source": "Insomnia"
  },
  {
    "title": "KDOC 368: 名前付きパイプはファイル書き込みが発生しないため早い",
    "link": "https://kijimad.github.io/roam/20250504T004903--kdoc-368-%E5%90%8D%E5%89%8D%E4%BB%98%E3%81%8D%E3%83%91%E3%82%A4%E3%83%97%E3%81%AF%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E6%9B%B8%E3%81%8D%E8%BE%BC%E3%81%BF%E3%81%8C%E7%99%BA%E7%94%9F%E3%81%97%E3%81%AA%E3%81%84%E3%81%9F%E3%82%81%E6%97%A9%E3%81%84__permanent.html",
    "published": "2025-06-14T15:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"content\" class=\"content\"\u003e\n\n \u003cdiv id=\"outline-container-org76c096b\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org76c096b\"\u003e \u003ca href=\"#org76c096b\"\u003eこの文書のステータス\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org76c096b\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e作成\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-05 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n \u003cli\u003eレビュー\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-18 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org5b72241\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org5b72241\"\u003e \u003ca href=\"#org5b72241\"\u003e概要\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org5b72241\"\u003e\n \u003cp\u003e\n名前付きパイプはアプリーケーションからアプリケーションへ、一時ファイルを作成せずに転送できる。一時ファイルのストレージへの書き込みが発生しないため、早いメリットがある。\n\u003c/p\u003e\n\n \u003cdiv class=\"org-src-container\"\u003e\n \u003cpre class=\"src src-shell\"\u003eman fifo\n\u003c/pre\u003e\n\u003c/div\u003e\n\n \u003cblockquote\u003e\n \u003cp\u003e\nWhen processes are exchanging data via the FIFO, the kernel passes all data internally without writing it to the filesystem.\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e \u003ca href=\"https://ja.wikipedia.org/wiki/%E5%90%8D%E5%89%8D%E4%BB%98%E3%81%8D%E3%83%91%E3%82%A4%E3%83%97\"\u003e名前付きパイプ - Wikipedia\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-orge609928\" class=\"outline-2\"\u003e\n \u003ch2 id=\"orge609928\"\u003e \u003ca href=\"#orge609928\"\u003e関連\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-orge609928\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e \u003ca href=\"20250503T125732--kdoc-367-名前付きパイプの使い道は何か__permanent.html#ID-20250503T125732\"\u003eKDOC 367: 名前付きパイプの使い道は何か?\u003c/a\u003e。使い道を調べた\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003c/body\u003e",
    "source": "Insomnia"
  },
  {
    "title": "KDOC 367: 名前付きパイプの使い道は何か?",
    "link": "https://kijimad.github.io/roam/20250503T125732--kdoc-367-%E5%90%8D%E5%89%8D%E4%BB%98%E3%81%8D%E3%83%91%E3%82%A4%E3%83%97%E3%81%AE%E4%BD%BF%E3%81%84%E9%81%93%E3%81%AF%E4%BD%95%E3%81%8B__permanent.html",
    "published": "2025-06-14T15:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"content\" class=\"content\"\u003e\n\n \u003cdiv id=\"outline-container-org0b94283\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org0b94283\"\u003e \u003ca href=\"#org0b94283\"\u003eこの文書のステータス\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org0b94283\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e作成\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-05 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n \u003cli\u003eレビュー\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-07 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org3984d5d\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org3984d5d\"\u003e \u003ca href=\"#org3984d5d\"\u003e概要\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org3984d5d\"\u003e\n \u003cp\u003e\n名前付きパイプはUnix系OSでおなじみのパイプの、拡張である。通常のパイプは「無名パイプ」で、使用しているプロセスが動作中のみ存在する。名前付きパイプはファイルとして存在するので永続する。\n\u003c/p\u003e\n\n \u003cp\u003e\nわざわざ名前付きパイプにして、どういうメリットがあるのだろうか。\n\u003c/p\u003e\n\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e \u003ca href=\"https://ja.wikipedia.org/wiki/%E5%90%8D%E5%89%8D%E4%BB%98%E3%81%8D%E3%83%91%E3%82%A4%E3%83%97\"\u003e名前付きパイプ - Wikipedia\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org8bbe2ce\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org8bbe2ce\"\u003e \u003ca href=\"#org8bbe2ce\"\u003e関連\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org8bbe2ce\"\u003e\n \u003cp\u003e\nなし。\n\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-orgc578e1b\" class=\"outline-2\"\u003e\n \u003ch2 id=\"orgc578e1b\"\u003e \u003ca href=\"#orgc578e1b\"\u003eBacklinks\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-orgc578e1b\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e \u003ca href=\"./20250504T004903--kdoc-368-名前付きパイプはファイル書き込みが発生しないため早い__permanent.html\"\u003eKDOC 368: 名前付きパイプはファイル書き込みが発生しないため早い\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003c/body\u003e",
    "source": "Insomnia"
  },
  {
    "title": "KDOC 366: Goのbytes, strings packageは類似している",
    "link": "https://kijimad.github.io/roam/20250503T101421--kdoc-366-go%E3%81%AEbytes-strings-package%E3%81%AF%E9%A1%9E%E4%BC%BC%E3%81%97%E3%81%A6%E3%81%84%E3%82%8B__permanent.html",
    "published": "2025-06-14T15:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"content\" class=\"content\"\u003e\n\n \u003cdiv id=\"outline-container-orgae385f3\" class=\"outline-2\"\u003e\n \u003ch2 id=\"orgae385f3\"\u003e \u003ca href=\"#orgae385f3\"\u003eこの文書のステータス\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-orgae385f3\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e作成\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-05 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n \u003cli\u003eレビュー\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-07 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org60fd4cd\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org60fd4cd\"\u003e \u003ca href=\"#org60fd4cd\"\u003e概要\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org60fd4cd\"\u003e\n \u003cp\u003e\n文字列は結局のところバイト列なのでbytes, strings packageは類似している。類似はしているが、文字列は専用の席が用意されている。\n\u003c/p\u003e\n\n \u003cdiv class=\"org-src-container\"\u003e\n \u003cpre class=\"src src-git-permalink\"\u003ehttps://github.com/kd-collective/go/blob/bc5f4a555e933e6861d12edba4c2d87ef6caf8e6/src/bytes/bytes.go#L5-L6\n\u003c/pre\u003e\n\u003c/div\u003e\n\n \u003cdiv class=\"org-src-container\"\u003e\n \u003cpre class=\"src src-nil\"\u003e// Package bytes implements functions for the manipulation of byte slices.\n// It is analogous to the facilities of the [strings] package.\n\u003c/pre\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org847e663\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org847e663\"\u003e \u003ca href=\"#org847e663\"\u003e関連\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org847e663\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e \u003ca href=\"20241129T002602--kdoc-319-文字列は特別な扱いをされている__essay.html#ID-20241129T002602\"\u003eKDOC 319: 文字列は特別な扱いをされている\u003c/a\u003e。の補足\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003c/body\u003e",
    "source": "Insomnia"
  },
  {
    "title": "KDOC 365: toolchainを実際に試す",
    "link": "https://kijimad.github.io/roam/20250503T091848--kdoc-365-toolchain%E3%82%92%E5%AE%9F%E9%9A%9B%E3%81%AB%E8%A9%A6%E3%81%99__wiki.html",
    "published": "2025-06-14T15:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"content\" class=\"content\"\u003e\n\n \u003cdiv id=\"outline-container-orga35a61e\" class=\"outline-2\"\u003e\n \u003ch2 id=\"orga35a61e\"\u003e \u003ca href=\"#orga35a61e\"\u003eこの文書のステータス\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-orga35a61e\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e作成\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-05 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n \u003cli\u003eレビュー\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-07 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-orge859ac5\" class=\"outline-2\"\u003e\n \u003ch2 id=\"orge859ac5\"\u003e \u003ca href=\"#orge859ac5\"\u003e概要\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-orge859ac5\"\u003e\n \u003cp\u003e\nGo言語のtoolchainで指定バージョンがダウンロードされるのを試す。\n\u003c/p\u003e\n\n \u003cdiv class=\"org-src-container\"\u003e\n \u003clabel class=\"org-src-name\"\u003e \u003cspan class=\"listing-number\"\u003eListing 1: \u003c/span\u003ego.mod\u003c/label\u003e \u003cpre class=\"src src-code\"\u003emodule playground/at-2025-05-03-083600\n\ngo 1.21.1\n\ntoolchain go1.23.1\n\u003c/pre\u003e\n\u003c/div\u003e\n\n \u003cdiv class=\"org-src-container\"\u003e\n \u003clabel class=\"org-src-name\"\u003e \u003cspan class=\"listing-number\"\u003eListing 2: \u003c/span\u003e実行に使うGoのバージョンが古くないと試せないので、少し古めのGoバージョンの環境を用意する(現時点の最新はgo1.24.2)。\u003c/label\u003e \u003cpre class=\"src src-shell\"\u003edocker run --rm -it -v $ \u003cspan class=\"org-variable-name\"\u003ePWD\u003c/span\u003e:/work -w /work golang:1.21 /bin/sh\n \u003cspan class=\"org-comment-delimiter\"\u003e# \u003c/span\u003e \u003cspan class=\"org-comment\"\u003eこのイメージでは、デフォルトでGOTOOLCHAINがlocalになっている\u003c/span\u003e\n$ go env GOTOOLCHAIN\nlocal\n\u003c/pre\u003e\n\u003c/div\u003e\n\n \u003cdiv class=\"org-src-container\"\u003e\n \u003clabel class=\"org-src-name\"\u003e \u003cspan class=\"listing-number\"\u003eListing 3: \u003c/span\u003eGOTOOLCHAINがlocalだと、go.modに書いてあるバージョンは無視され、ローカルのGoのバージョンが使われる\u003c/label\u003e \u003cpre class=\"src src-shell\"\u003e$ go version\ngo version go1.21.13 linux/amd64\n\u003c/pre\u003e\n\u003c/div\u003e\n\n \u003cdiv class=\"org-src-container\"\u003e\n \u003clabel class=\"org-src-name\"\u003e \u003cspan class=\"listing-number\"\u003eListing 4: \u003c/span\u003eGOTOOLCHAINをautoにすると、toolchainで指定したバージョンがインストールされた\u003c/label\u003e \u003cpre class=\"src src-shell\"\u003e$  \u003cspan class=\"org-variable-name\"\u003e\u003c/span\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/body\u003e",
    "source": "Insomnia"
  },
  {
    "title": "KDOC 364: Goコマンドやmoduleについて知らないことが多い",
    "link": "https://kijimad.github.io/roam/20250503T075714--kdoc-364-go%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%82%84module%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6%E7%9F%A5%E3%82%89%E3%81%AA%E3%81%84%E3%81%93%E3%81%A8%E3%81%8C%E5%A4%9A%E3%81%84__essay.html",
    "published": "2025-06-14T15:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"content\" class=\"content\"\u003e\n\n \u003cdiv id=\"outline-container-orgb3e3f23\" class=\"outline-2\"\u003e\n \u003ch2 id=\"orgb3e3f23\"\u003e \u003ca href=\"#orgb3e3f23\"\u003eこの文書のステータス\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-orgb3e3f23\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e作成\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-05 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n \u003cli\u003eレビュー\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-07 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org95e27f1\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org95e27f1\"\u003e \u003ca href=\"#org95e27f1\"\u003e概要\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org95e27f1\"\u003e\n \u003cp\u003e\nGo言語の公式ドキュメントを読んだとき、Go言語の周辺ツールについて知らないことが多くあることに気づいた。\n\u003c/p\u003e\n\n \u003cul class=\"org-ul\"\u003e \u003cli\u003ego コマンド\u003c/li\u003e\n \u003cli\u003ego module\u003c/li\u003e\n \u003cli\u003ego バージョン\u003c/li\u003e\n\u003c/ul\u003e \u003cp\u003e\n網羅的な文書を見ると、知らないことに気づける。\n\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-orgf5b02cb\" class=\"outline-2\"\u003e\n \u003ch2 id=\"orgf5b02cb\"\u003e \u003ca href=\"#orgf5b02cb\"\u003e関連\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-orgf5b02cb\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e \u003ca href=\"20250502T001229--kdoc-360-goとtoolchainの違いは何か__permanent.html#ID-20250502T001229\"\u003eKDOC 360: goとtoolchainの違いは何か?\u003c/a\u003e。で調べているときに考えた\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003c/body\u003e",
    "source": "Insomnia"
  },
  {
    "title": "KDOC 363: 1.21rc2はリリース候補を示す",
    "link": "https://kijimad.github.io/roam/20250503T075205--kdoc-363-121rc2%E3%81%AF%E3%83%AA%E3%83%AA%E3%83%BC%E3%82%B9%E5%80%99%E8%A3%9C%E3%82%92%E7%A4%BA%E3%81%99__permanent.html",
    "published": "2025-06-14T15:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"content\" class=\"content\"\u003e\n\n \u003cdiv id=\"outline-container-org16a9e7c\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org16a9e7c\"\u003e \u003ca href=\"#org16a9e7c\"\u003eこの文書のステータス\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org16a9e7c\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e作成\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-07 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n \u003cli\u003eレビュー\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-07 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-orgf866362\" class=\"outline-2\"\u003e\n \u003ch2 id=\"orgf866362\"\u003e \u003ca href=\"#orgf866362\"\u003e概要\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-orgf866362\"\u003e\n \u003cp\u003e\n \u003ca href=\"https://go.dev/doc/toolchain#version\"\u003eGo Versions\u003c/a\u003eによると、  \u003ccode\u003e1.21rc2\u003c/code\u003e のようなGoのバージョンは、Release Candidateであり、リリース候補を示す。リリースされたら  \u003ccode\u003e1.21.4\u003c/code\u003e のようになる。ほかのアプリケーションでも見かける表記だが、あまり考えてこなかった。\n\u003c/p\u003e\n\n \u003cdiv class=\"org-src-container\"\u003e\n \u003clabel class=\"org-src-name\"\u003e \u003cspan class=\"listing-number\"\u003eListing 1: \u003c/span\u003eGo version(1.21より後)\u003c/label\u003e \u003cpre class=\"src src-code\"\u003e1.21 \u0026lt; 1.21rc1 \u0026lt; 1.21rc2 \u0026lt; 1.21.0 \u0026lt; 1.21.1 \u0026lt; 1.21.2\n\u003c/pre\u003e\n\u003c/div\u003e\n\n \u003cp\u003e\n1.21がリリース候補より前、という意味になるのは落とし穴に見える。\n\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-orga687f3f\" class=\"outline-2\"\u003e\n \u003ch2 id=\"orga687f3f\"\u003e \u003ca href=\"#orga687f3f\"\u003e関連\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-orga687f3f\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e \u003ca href=\"20250502T001229--kdoc-360-goとtoolchainの違いは何か__permanent.html#ID-20250502T001229\"\u003eKDOC 360: goとtoolchainの違いは何か?\u003c/a\u003e。を調べる途中で見つけた\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003c/body\u003e",
    "source": "Insomnia"
  },
  {
    "title": "KDOC 362: コンパイル可能な最低バージョンと、ビルドに使うバージョン",
    "link": "https://kijimad.github.io/roam/20250503T072340--kdoc-362-%E3%82%B3%E3%83%B3%E3%83%91%E3%82%A4%E3%83%AB%E5%8F%AF%E8%83%BD%E3%81%AA%E6%9C%80%E4%BD%8E%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3%E3%81%A8%E3%80%81%E3%83%93%E3%83%AB%E3%83%89%E3%81%AB%E4%BD%BF%E3%81%86%E3%83%90%E3%83%BC%E3%82%B8%E3%83%A7%E3%83%B3__permanent.html",
    "published": "2025-06-14T15:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"content\" class=\"content\"\u003e\n\n \u003cdiv id=\"outline-container-org113c21f\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org113c21f\"\u003e \u003ca href=\"#org113c21f\"\u003eこの文書のステータス\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org113c21f\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e作成\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-05 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n \u003cli\u003eレビュー\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-05 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org28f493b\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org28f493b\"\u003e \u003ca href=\"#org28f493b\"\u003e概要\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org28f493b\"\u003e\n \u003cp\u003e\n \u003ca href=\"20250502T001229--kdoc-360-goとtoolchainの違いは何か__permanent.html#ID-20250502T001229\"\u003eKDOC 360: goとtoolchainの違いは何か?\u003c/a\u003eを調べた。\n\u003c/p\u003e\n\n \u003cp\u003e\ngo.modの仕様書 \u003ca href=\"https://go.dev/doc/modules/gomod-ref\"\u003ego.mod file reference - The Go Programming Language\u003c/a\u003eを見る。\n\u003c/p\u003e\n\n \u003cp\u003e\n↓go directive。\n\u003c/p\u003e\n\n \u003cblockquote\u003e\n \u003cp\u003e\nIndicates that the module was written assuming the semantics of the Go version specified by the directive.\n\u003c/p\u003e\n\n \u003cp\u003e\nThe minimum version of Go required to compile packages in this module.\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n \u003cp\u003e\nmoduleが想定するセマンティクス、コンパイルできる最低バージョンを示す。\n\u003c/p\u003e\n\n \u003cp\u003e\n↓toolchain directive。\n\u003c/p\u003e\n\n \u003cblockquote\u003e\n \u003cp\u003e\nDeclares a suggested Go toolchain to use with this module. Only takes effect when the module is the main module and the default toolchain is older than the suggested toolchain.\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n \u003cp\u003e\n推奨するGo toolchainの名前を指定する。main moduleかつ、default(ローカルのGo)が指定バージョンより古いときだけ動作する。\n\u003c/p\u003e\n\n \u003cp\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/body\u003e",
    "source": "Insomnia"
  },
  {
    "title": "KDOC 361: 労働時間は商品の1つ",
    "link": "https://kijimad.github.io/roam/20250502T004632--kdoc-361-%E5%8A%B4%E5%83%8D%E6%99%82%E9%96%93%E3%81%AF%E5%95%86%E5%93%81%E3%81%AE1%E3%81%A4__essay.html",
    "published": "2025-06-14T15:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"content\" class=\"content\"\u003e\n\n \u003cdiv id=\"outline-container-orgc9276d3\" class=\"outline-2\"\u003e\n \u003ch2 id=\"orgc9276d3\"\u003e \u003ca href=\"#orgc9276d3\"\u003eこの文書のステータス\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-orgc9276d3\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e作成\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-02 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n \u003cli\u003eレビュー\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-05 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org5b93273\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org5b93273\"\u003e \u003ca href=\"#org5b93273\"\u003e概要\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org5b93273\"\u003e\n \u003cp\u003e\nマイホームと同様に、年収や給与は自分自身と一体化していて、自身の価値を断定されているように感じる。アイデンティティに関わり、客観的な判断が難しい。単に自分が売っている商品の成約価格にすぎないということを認識できると、建設的な行動ができるように見える。物を売る方法はたくさんある。\n\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-orgb143b44\" class=\"outline-2\"\u003e\n \u003ch2 id=\"orgb143b44\"\u003e \u003ca href=\"#orgb143b44\"\u003e関連\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-orgb143b44\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e \u003ca href=\"20250427T175852--kdoc-350-『正直不動産』__book.html#ID-20250427T175852\"\u003eKDOC 350: 『正直不動産』\u003c/a\u003e。たくさんの思い出が詰まったマイホームと同様に、自身の経済状態も客観的に判断が難しいと考えた\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003c/body\u003e",
    "source": "Insomnia"
  },
  {
    "title": "KDOC 360: goとtoolchainの違いは何か?",
    "link": "https://kijimad.github.io/roam/20250502T001229--kdoc-360-go%E3%81%A8toolchain%E3%81%AE%E9%81%95%E3%81%84%E3%81%AF%E4%BD%95%E3%81%8B__permanent.html",
    "published": "2025-06-14T15:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"content\" class=\"content\"\u003e\n\n \u003cdiv id=\"outline-container-orgcb5f404\" class=\"outline-2\"\u003e\n \u003ch2 id=\"orgcb5f404\"\u003e \u003ca href=\"#orgcb5f404\"\u003eこの文書のステータス\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-orgcb5f404\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e作成\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-02 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n \u003cli\u003eレビュー\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-05 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org165a2b2\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org165a2b2\"\u003e \u003ca href=\"#org165a2b2\"\u003e概要\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org165a2b2\"\u003e\n \u003cp\u003e\nGo言語の、go.modファイルでの、ディレクティブの違いは何だろうか。\n\u003c/p\u003e\n\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e \u003ccode\u003ego 1.21\u003c/code\u003e\u003c/li\u003e\n \u003cli\u003e \u003ccode\u003etoolchain 1.21\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e \u003cp\u003e\nは何が違うか。\n\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-orgde5d40f\" class=\"outline-2\"\u003e\n \u003ch2 id=\"orgde5d40f\"\u003e \u003ca href=\"#orgde5d40f\"\u003e関連\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-orgde5d40f\"\u003e\n \u003cp\u003e\nなし。\n\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-orgba6d2f2\" class=\"outline-2\"\u003e\n \u003ch2 id=\"orgba6d2f2\"\u003e \u003ca href=\"#orgba6d2f2\"\u003eBacklinks\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-orgba6d2f2\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e \u003ca href=\"./20250503T072340--kdoc-362-コンパイル可能な最低バージョンと、ビルドに使うバージョン__permanent.html\"\u003eKDOC 362: コンパイル可能な最低バージョンと、ビルドに使うバージョン\u003c/a\u003e\u003c/li\u003e\n \u003cli\u003e \u003ca href=\"./20250503T075205--kdoc-363-121rc2はリリース候補を示す__permanent.html\"\u003eKDOC 363: 1.21rc2はリリース候補を示す\u003c/a\u003e\u003c/li\u003e\n \u003cli\u003e \u003ca href=\"./20250503T075714--kdoc-364-goコマンドやmoduleについて知らないことが多い__essay.html\"\u003eKDOC 364: Goコマンドやmoduleについて知らないことが多い\u003c/a\u003e\u003c/li\u003e\n \u003cli\u003e \u003ca href=\"./20250503T091848--kdoc-365-toolchainを実際に試す__wiki.html\"\u003eKDOC 365: toolchainを実際に試す\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003c/body\u003e",
    "source": "Insomnia"
  },
  {
    "title": "KDOC 359: 『超一流になるのは才能か努力か?』",
    "link": "https://kijimad.github.io/roam/20250501T235510--kdoc-359-%E3%80%8E%E8%B6%85%E4%B8%80%E6%B5%81%E3%81%AB%E3%81%AA%E3%82%8B%E3%81%AE%E3%81%AF%E6%89%8D%E8%83%BD%E3%81%8B%E5%8A%AA%E5%8A%9B%E3%81%8B%E3%80%8F__book.html",
    "published": "2025-06-14T15:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"content\" class=\"content\"\u003e\n\n \u003cdiv id=\"outline-container-orgf228038\" class=\"outline-2\"\u003e\n \u003ch2 id=\"orgf228038\"\u003e \u003ca href=\"#orgf228038\"\u003eこの文書のステータス\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-orgf228038\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e作成\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-02 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n \u003cli\u003eレビュー\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-05 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org6e49e12\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org6e49e12\"\u003e \u003ca href=\"#org6e49e12\"\u003e概要\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org6e49e12\"\u003e\n \u003cp\u003e\n \u003ccode\u003e『超一流になるのは才能か努力か?』\u003c/code\u003e は、トッププレーヤーたちのパフォーマンスについての本。才能よりも、正しい訓練が必要だという。\n\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-orga4c6041\" class=\"outline-2\"\u003e\n \u003ch2 id=\"orga4c6041\"\u003e \u003ca href=\"#orga4c6041\"\u003eメモ\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-orga4c6041\"\u003e\n \u003cp\u003e\nなし。\n\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org733405b\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org733405b\"\u003e \u003ca href=\"#org733405b\"\u003e関連\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org733405b\"\u003e\n \u003cp\u003e\nなし。\n\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org18c53bb\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org18c53bb\"\u003e \u003ca href=\"#org18c53bb\"\u003eBacklinks\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org18c53bb\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e \u003ca href=\"./20250501T235421--kdoc-358-楽しいからいつまでも没頭できる、は間違っている__book.html\"\u003eKDOC 358: 楽しいからいつまでも没頭できる、は間違っている\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003c/body\u003e",
    "source": "Insomnia"
  },
  {
    "title": "KDOC 358: 楽しいからいつまでも没頭できる、は間違っている",
    "link": "https://kijimad.github.io/roam/20250501T235421--kdoc-358-%E6%A5%BD%E3%81%97%E3%81%84%E3%81%8B%E3%82%89%E3%81%84%E3%81%A4%E3%81%BE%E3%81%A7%E3%82%82%E6%B2%A1%E9%A0%AD%E3%81%A7%E3%81%8D%E3%82%8B%E3%80%81%E3%81%AF%E9%96%93%E9%81%95%E3%81%A3%E3%81%A6%E3%81%84%E3%82%8B__book.html",
    "published": "2025-06-14T15:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"content\" class=\"content\"\u003e\n\n \u003cdiv id=\"outline-container-org5621cc3\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org5621cc3\"\u003e \u003ca href=\"#org5621cc3\"\u003eこの文書のステータス\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org5621cc3\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e作成\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-02 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n \u003cli\u003eレビュー\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-05 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org7ec335c\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org7ec335c\"\u003e \u003ca href=\"#org7ec335c\"\u003e概要\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org7ec335c\"\u003e\n \u003cp\u003e\n「楽しいことだから、いつまでも没頭して練習を続けられる」というのは誤りである。どんなトップパフォーマンスを弾き出す人でも、限界的練習は苦しい。\n\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org5c284e7\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org5c284e7\"\u003e \u003ca href=\"#org5c284e7\"\u003e関連\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org5c284e7\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e \u003ca href=\"20250501T235510--kdoc-359-『超一流になるのは才能か努力か』__book.html#ID-20250501T235510\"\u003eKDOC 359: 『超一流になるのは才能か努力か?』\u003c/a\u003eから。\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003c/body\u003e",
    "source": "Insomnia"
  },
  {
    "title": "KDOC 357: 方法のことばかり考えがちなのは足踏み",
    "link": "https://kijimad.github.io/roam/20250501T201739--kdoc-357-%E6%96%B9%E6%B3%95%E3%81%AE%E3%81%93%E3%81%A8%E3%81%B0%E3%81%8B%E3%82%8A%E8%80%83%E3%81%88%E3%81%8C%E3%81%A1%E3%81%AA%E3%81%AE%E3%81%AF%E8%B6%B3%E8%B8%8F%E3%81%BF__essay.html",
    "published": "2025-06-14T15:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"content\" class=\"content\"\u003e\n\n \u003cdiv id=\"outline-container-org7610f50\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org7610f50\"\u003e \u003ca href=\"#org7610f50\"\u003eこの文書のステータス\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org7610f50\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e作成\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-02 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n \u003cli\u003eレビュー\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-05 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org7f2699e\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org7f2699e\"\u003e \u003ca href=\"#org7f2699e\"\u003e概要\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org7f2699e\"\u003e\n \u003cp\u003e\n方法のことばかり書いている。\n\u003c/p\u003e\n\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e \u003ca href=\"20250211T222421--kdoc-337-多読は難しいことを認識しなければならない__essay.html#ID-20250211T222421\"\u003eKDOC 337: 多読は難しいことを認識しなければならない\u003c/a\u003e\u003c/li\u003e\n \u003cli\u003e \u003ca href=\"20250212T001954--kdoc-339-親しみのレシピ__essay.html#ID-20250212T001954\"\u003eKDOC 339: 親しみのレシピ\u003c/a\u003e\u003c/li\u003e\n \u003cli\u003e \u003ca href=\"20250501T193312--kdoc-356-脳を思い通りにさせるためできること__book.html#ID-20250501T193312\"\u003eKDOC 356: 脳を思い通りにさせるためできること\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e \u003cp\u003e\nこれは \u003ca href=\"20250315T093511--kdoc-344-失敗の対価を認識する__essay.html#ID-20250315T093511\"\u003eKDOC 344: 失敗の対価を認識する\u003c/a\u003eで言うような、足踏みに見える。取り組んでいることに対して具体的なことを考えて、メモしなければしょうがない。\n\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org8b7e871\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org8b7e871\"\u003e \u003ca href=\"#org8b7e871\"\u003e関連\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org8b7e871\"\u003e\n \u003cp\u003e\nなし。\n\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org1a74d30\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org1a74d30\"\u003e \u003ca href=\"#org1a74d30\"\u003eBacklinks\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org1a74d30\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e \u003ca href=\"./20240504T224810--kdoc-165-メモの課題と対応策__structure.html\"\u003eKDOC 165: メモの課題と対応策\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003c/body\u003e",
    "source": "Insomnia"
  },
  {
    "title": "KDOC 356: 脳を思い通りにさせるためできること",
    "link": "https://kijimad.github.io/roam/20250501T193312--kdoc-356-%E8%84%B3%E3%82%92%E6%80%9D%E3%81%84%E9%80%9A%E3%82%8A%E3%81%AB%E3%81%95%E3%81%9B%E3%82%8B%E3%81%9F%E3%82%81%E3%81%A7%E3%81%8D%E3%82%8B%E3%81%93%E3%81%A8__book.html",
    "published": "2025-06-14T15:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"content\" class=\"content\"\u003e\n\n \u003cdiv id=\"outline-container-org9eaf99f\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org9eaf99f\"\u003e \u003ca href=\"#org9eaf99f\"\u003eこの文書のステータス\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org9eaf99f\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e作成\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-02 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n \u003cli\u003eレビュー\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-05 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org8abf6a1\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org8abf6a1\"\u003e \u003ca href=\"#org8abf6a1\"\u003e概要\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org8abf6a1\"\u003e\n \u003cp\u003e\nHead Firstシリーズの序文で、示唆に富むことが書かれていた。\n\u003c/p\u003e\n\n \u003cp\u003e\n脳を思い通りにさせるためできること。\n\u003c/p\u003e\n\n \u003cul class=\"org-ul\"\u003e \u003cli\u003eじっくり読みましょう。理解すればするほど、記憶すべきことは少なくなります\u003c/li\u003e\n \u003cli\u003e問題を解きましょう。自分のノートに書き込んでください\u003c/li\u003e\n \u003cli\u003e「素朴な疑問に答えます」を読みましょう\u003c/li\u003e\n \u003cli\u003eこの本を読んだ後は寝るまで他の本を読まないようにしましょう。少なくとも、難しいものは読まないようにしましょう\u003c/li\u003e\n \u003cli\u003e内容をはっきりと声に出してみましょう\u003c/li\u003e\n \u003cli\u003e水をたくさん飲みましょう\u003c/li\u003e\n \u003cli\u003e脳に耳を傾けましょう\u003c/li\u003e\n \u003cli\u003e感情を持ちましょう\u003c/li\u003e\n \u003cli\u003eたくさんのコードを書きましょう\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org04c3a01\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org04c3a01\"\u003e \u003ca href=\"#org04c3a01\"\u003e関連\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org04c3a01\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e \u003ca href=\"20250430T183206--kdoc-352-使う状況をイメージできるほど頭に入りやすい__essay.html#ID-20250430T183206\"\u003eKDOC 352: 使う状況をイメージできるほど頭に入りやすい\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/body\u003e",
    "source": "Insomnia"
  },
  {
    "title": "KDOC 355: プログラミングを仕事の梃子として使うとよい",
    "link": "https://kijimad.github.io/roam/20250501T192423--kdoc-355-%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E3%82%92%E4%BB%95%E4%BA%8B%E3%81%AE%E6%A2%83%E5%AD%90%E3%81%A8%E3%81%97%E3%81%A6%E4%BD%BF%E3%81%86%E3%81%A8%E3%82%88%E3%81%84__essay.html",
    "published": "2025-06-14T15:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"content\" class=\"content\"\u003e\n\n \u003cdiv id=\"outline-container-org0f36df3\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org0f36df3\"\u003e \u003ca href=\"#org0f36df3\"\u003eこの文書のステータス\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org0f36df3\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e作成\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-01 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n \u003cli\u003eレビュー\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-02 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org1adb1d1\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org1adb1d1\"\u003e \u003ca href=\"#org1adb1d1\"\u003e概要\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org1adb1d1\"\u003e\n \u003cp\u003e\n卓越したプログラマーは仕事の梃子としてコードを使う率が高いように見える。\n並の人は、たとえば \u003ca href=\"20210509095946-rails.html#ID-e04aa1a3-509c-45b2-ac64-53d69c961214\"\u003eRails\u003c/a\u003e開発なら、 \u003ca href=\"20210509095946-rails.html#ID-e04aa1a3-509c-45b2-ac64-53d69c961214\"\u003eRails\u003c/a\u003eの機能開発以外でコードを使うことはあまりない。\n\u003c/p\u003e\n\n \u003cp\u003e\n並の人の例。\n\u003c/p\u003e\n\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e不整合データを調査する →  \u003ca href=\"20210725100835-sql.html#ID-8b69b8d4-1612-4dc5-8412-96b431fdd101\"\u003eSQL\u003c/a\u003eを使って各条件を調べる。合っているか手動で確かめる\u003c/li\u003e\n \u003cli\u003e不整合データを削除する → 調査する、各環境のコンソールで逐次実行を繰り返す\u003c/li\u003e\n \u003cli\u003e使われてないファイルを削除する → 逐一grepして削除していく\u003c/li\u003e\n \u003cli\u003eリレーションの不整合を調査する → 1つ1つ地道に見ていくか、grepで頑張る\u003c/li\u003e\n \u003cli\u003eバージョンを上げる → バージョン番号をgrepして置換\u003c/li\u003e\n\u003c/ul\u003e \u003cp\u003e\n卓越した人の例。\n\u003c/p\u003e\n\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/body\u003e",
    "source": "Insomnia"
  },
  {
    "title": "KDOC 354: ワード移動を可視化するパッケージを作る",
    "link": "https://kijimad.github.io/roam/20250501T191528--kdoc-354-%E3%83%AF%E3%83%BC%E3%83%89%E7%A7%BB%E5%8B%95%E3%82%92%E5%8F%AF%E8%A6%96%E5%8C%96%E3%81%99%E3%82%8B%E3%83%91%E3%83%83%E3%82%B1%E3%83%BC%E3%82%B8%E3%82%92%E4%BD%9C%E3%82%8B__project.html",
    "published": "2025-06-14T15:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"content\" class=\"content\"\u003e\n\n \u003cdiv id=\"outline-container-org15d2073\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org15d2073\"\u003e \u003ca href=\"#org15d2073\"\u003eこの文書のステータス\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org15d2073\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e作成\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-01 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n \u003cli\u003eレビュー\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-02 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org8de6ff0\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org8de6ff0\"\u003e \u003ca href=\"#org8de6ff0\"\u003e \u003cspan class=\"done DONE\"\u003eDONE\u003c/span\u003e プロジェクトのステータス\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org8de6ff0\"\u003e\n \u003cp\u003e\nプロジェクトは完了した。\n\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org0a80be3\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org0a80be3\"\u003e \u003ca href=\"#org0a80be3\"\u003e概要\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org0a80be3\"\u003e\n \u003cp\u003e\n \u003ca href=\"https://github.com/kijimaD/current-word-highlight\"\u003ecurrent-word-highlight\u003c/a\u003eは自作の \u003ca href=\"20210508234743-emacs.html#ID-1ad8c3d5-97ba-4905-be11-e6f2626127ad\"\u003eEmacs\u003c/a\u003eライブラリ。ワードごとの移動をしたいとき、日本語やコードだと区切りがわかりにくいため作成した。現在+前+次のword(単位は設定可能)をハイライト表示して移動しやすくする。\n\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-orgaecc0a2\" class=\"outline-2\"\u003e\n \u003ch2 id=\"orgaecc0a2\"\u003e \u003ca href=\"#orgaecc0a2\"\u003eTasks\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-orgaecc0a2\"\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org77e3954\" class=\"outline-3\"\u003e\n \u003ch3 id=\"org77e3954\"\u003e \u003ca href=\"#org77e3954\"\u003e \u003cspan class=\"todo TODO\"\u003eTODO\u003c/span\u003e ハイライトのカラーリング調整\u003c/a\u003e\u003c/h3\u003e\n \u003cdiv class=\"outline-text-3\" id=\"text-org77e3954\"\u003e\n \u003cp\u003e\n背景色で目が痛いので、コントラストを抑える。薄くする。\n\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org45b0890\" class=\"outline-3\"\u003e\n \u003ch3 id=\"org45b0890\"\u003e \u003ca href=\"#org45b0890\"\u003e \u003cspan class=\"todo TODO\"\u003eTODO\u003c/span\u003e アニメーション\u003c/a\u003e\u003c/h3\u003e\n \u003cdiv class=\"outline-text-3\" id=\"text-org45b0890\"\u003e\n \u003cp\u003e\n今の問題点: 表示がしつこい。元の文字が見えにくい。\nカーソルが移動したときにチラっと表示されるだけでいい。\nbeaconを参考にハイライトする。\n\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org192f258\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org192f258\"\u003e \u003ca href=\"#org192f258\"\u003e関連\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org192f258\"\u003e\n \u003cp\u003e\nなし。\n\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org447f619\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org447f619\"\u003e \u003ca href=\"#org447f619\"\u003eBacklinks\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org447f619\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e \u003ca href=\"./20210817003906-history.html\"\u003eHistory\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003c/body\u003e",
    "source": "Insomnia"
  },
  {
    "title": "KDOC 353: メモを小さくして組み合わせやすくする",
    "link": "https://kijimad.github.io/roam/20250430T184653--kdoc-353-%E3%83%A1%E3%83%A2%E3%82%92%E5%B0%8F%E3%81%95%E3%81%8F%E3%81%97%E3%81%A6%E7%B5%84%E3%81%BF%E5%90%88%E3%82%8F%E3%81%9B%E3%82%84%E3%81%99%E3%81%8F%E3%81%99%E3%82%8B__essay.html",
    "published": "2025-06-14T15:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"content\" class=\"content\"\u003e\n\n \u003cdiv id=\"outline-container-org1e1837c\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org1e1837c\"\u003e \u003ca href=\"#org1e1837c\"\u003eこの文書のステータス\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org1e1837c\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e作成\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-02 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n \u003cli\u003eレビュー\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-05 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-orga0ae887\" class=\"outline-2\"\u003e\n \u003ch2 id=\"orga0ae887\"\u003e \u003ca href=\"#orga0ae887\"\u003e概要\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-orga0ae887\"\u003e\n \u003cp\u003e\n \u003ca href=\"20240502T172812--kdoc-153-すでにあるメモから、関連させられないか考える__essay.html#ID-20240502T172812\"\u003eKDOC 153: すでにあるメモから、関連させられないか考える\u003c/a\u003eから1年が経ったが、状況はあまり変わっていない。1つのメモの文章が長すぎるので、組み合わせにくいように見える。元ネタの本( \u003ca href=\"20231008T203658--kdoc-36-『take-notes』__book.html#ID-20231008T203658\"\u003eKDOC 36: 『TAKE NOTES!』\u003c/a\u003e)を読み直して、メモを最小限で書くようにする。\n\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org9d46de0\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org9d46de0\"\u003e \u003ca href=\"#org9d46de0\"\u003e関連\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org9d46de0\"\u003e\n \u003cp\u003e\nなし。\n\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-orga9980c0\" class=\"outline-2\"\u003e\n \u003ch2 id=\"orga9980c0\"\u003e \u003ca href=\"#orga9980c0\"\u003eBacklinks\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-orga9980c0\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e \u003ca href=\"./20240504T224810--kdoc-165-メモの課題と対応策__structure.html\"\u003eKDOC 165: メモの課題と対応策\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003c/body\u003e",
    "source": "Insomnia"
  },
  {
    "title": "KDOC 352: 使う状況をイメージできるほど頭に入りやすい",
    "link": "https://kijimad.github.io/roam/20250430T183206--kdoc-352-%E4%BD%BF%E3%81%86%E7%8A%B6%E6%B3%81%E3%82%92%E3%82%A4%E3%83%A1%E3%83%BC%E3%82%B8%E3%81%A7%E3%81%8D%E3%82%8B%E3%81%BB%E3%81%A9%E9%A0%AD%E3%81%AB%E5%85%A5%E3%82%8A%E3%82%84%E3%81%99%E3%81%84__essay.html",
    "published": "2025-06-14T15:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"content\" class=\"content\"\u003e\n\n \u003cdiv id=\"outline-container-org5127f09\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org5127f09\"\u003e \u003ca href=\"#org5127f09\"\u003eこの文書のステータス\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org5127f09\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e作成\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-02 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n \u003cli\u003eレビュー\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-05 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org88b9be5\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org88b9be5\"\u003e \u003ca href=\"#org88b9be5\"\u003e概要\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org88b9be5\"\u003e\n \u003cp\u003e\nなにか上達したいとき、ヘマをしている場面を明確にイメージできれば頭に入りやすい。\n\u003c/p\u003e\n\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e英語: 知らない人と相席で夕食を食べるとき、聞き取って喋れないととても気まずい(実体験)\u003c/li\u003e\n \u003cli\u003e不動産売買: 調査の確認、質問して少しでも安くしたり高くする。うまくやらないと人生が詰む(漫画で見た。 \u003ca href=\"20250427T175852--kdoc-350-『正直不動産』__book.html#ID-20250427T175852\"\u003eKDOC 350: 『正直不動産』\u003c/a\u003e)\u003c/li\u003e\n \u003cli\u003eプログラム: プログラマーの偉人と会話する機会に、なにかクリティカルな技術的質問や議論を持ち合わせていないと、話す機会を活かせない\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-orgebf4935\" class=\"outline-2\"\u003e\n \u003ch2 id=\"orgebf4935\"\u003e \u003ca href=\"#orgebf4935\"\u003e関連\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-orgebf4935\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e \u003ca href=\"20240718T002818--kdoc-203-必要性のある状況が学ばせる__essay.html#ID-20240718T002818\"\u003eKDOC 203: 必要性のある状況が学ばせる\u003c/a\u003e。似たような主張\u003c/li\u003e\n \u003cli\u003e \u003ca href=\"20250212T001954--kdoc-339-親しみのレシピ__essay.html#ID-20250212T001954\"\u003eKDOC 339: 親しみのレシピ\u003c/a\u003e。学びを進めるつながり\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-orgfc008c6\" class=\"outline-2\"\u003e\n \u003ch2 id=\"orgfc008c6\"\u003e \u003ca href=\"#orgfc008c6\"\u003eBacklinks\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-orgfc008c6\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e \u003ca href=\"./20250501T193312--kdoc-356-脳を思い通りにさせるためできること__book.html\"\u003eKDOC 356: 脳を思い通りにさせるためできること\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003c/body\u003e",
    "source": "Insomnia"
  },
  {
    "title": "KDOC 351: 対価に大きな影響があるのはどこで働いているか",
    "link": "https://kijimad.github.io/roam/20250428T145701--kdoc-351-%E5%AF%BE%E4%BE%A1%E3%81%AB%E5%A4%A7%E3%81%8D%E3%81%AA%E5%BD%B1%E9%9F%BF%E3%81%8C%E3%81%82%E3%82%8B%E3%81%AE%E3%81%AF%E3%81%A9%E3%81%93%E3%81%A7%E5%83%8D%E3%81%84%E3%81%A6%E3%81%84%E3%82%8B%E3%81%8B__essay.html",
    "published": "2025-06-14T15:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"content\" class=\"content\"\u003e\n\n \u003cdiv id=\"outline-container-org323f9c0\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org323f9c0\"\u003e \u003ca href=\"#org323f9c0\"\u003eこの文書のステータス\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org323f9c0\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e作成\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-04-28 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n \u003cli\u003eレビュー\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-02 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org51dfdd4\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org51dfdd4\"\u003e \u003ca href=\"#org51dfdd4\"\u003e概要\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org51dfdd4\"\u003e\n \u003cp\u003e\n大学のとき、「統計的に、仕事の対価でもっとも大きな影響を持つのはその実力や仕事内容ではなく、所属組織である」みたいな話を聞いた。全く驚くに値しないが、あらためて言葉にすると残酷な真実だと感じた。\n\u003c/p\u003e\n\n \u003cp\u003e\n国レベルでも同じことを実感することになった。アメリカだ。アメリカに1ヶ月いたが、本当に何もかも高いのに驚いた。高いからといって、別にモノの品質がいいわけでもないし、サービスが行き届いているわけでもない。むしろ日本より悪い。物価については知識として知ってはいたが、実際に体験するとすぐ受け入れるのは難しい。\n\u003c/p\u003e\n\n \u003cp\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/body\u003e",
    "source": "Insomnia"
  },
  {
    "title": "KDOC 350: 『正直不動産』",
    "link": "https://kijimad.github.io/roam/20250427T175852--kdoc-350-%E3%80%8E%E6%AD%A3%E7%9B%B4%E4%B8%8D%E5%8B%95%E7%94%A3%E3%80%8F__book.html",
    "published": "2025-06-14T15:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"content\" class=\"content\"\u003e\n\n \u003cdiv id=\"outline-container-org161f18c\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org161f18c\"\u003e \u003ca href=\"#org161f18c\"\u003eこの文書のステータス\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org161f18c\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e作成\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-05 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n \u003cli\u003eレビュー\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-07 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-orgae23734\" class=\"outline-2\"\u003e\n \u003ch2 id=\"orgae23734\"\u003e \u003ca href=\"#orgae23734\"\u003e概要\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-orgae23734\"\u003e\n \u003cp\u003e\n『正直不動産』は嘘をつけない営業マン永瀬が、不動産業界を生き抜いていく不動産漫画。業界の落とし穴や不動産会社の詐欺的なやり口をストーリーでわかりやすく解説する。\n\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org5b5f2e3\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org5b5f2e3\"\u003e \u003ca href=\"#org5b5f2e3\"\u003eメモ\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org5b5f2e3\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e騙されないためには、個人の側でも勉強して財務や法律、業界に詳しくなければならない、というメッセージを理解できた\u003c/li\u003e\n \u003cli\u003e知識がなければ必ずカモられる。どんな不利益を被るかを知れば、不動産について勉強するモチベーションになる\u003c/li\u003e\n \u003cli\u003e単に法律的なことだけじゃ足りなくて、慣例とかやり口とかグレーな方法まで知ってリスクをコントロールする必要がある。教科書に書いてあることだけではない\u003c/li\u003e\n \u003cli\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/body\u003e",
    "source": "Insomnia"
  },
  {
    "title": "KDOC 349: 『角栄に花束を』",
    "link": "https://kijimad.github.io/roam/20250427T175830--kdoc-349-%E3%80%8E%E8%A7%92%E6%A0%84%E3%81%AB%E8%8A%B1%E6%9D%9F%E3%82%92%E3%80%8F__book.html",
    "published": "2025-06-14T15:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"content\" class=\"content\"\u003e\n\n \u003cdiv id=\"outline-container-org5775410\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org5775410\"\u003e \u003ca href=\"#org5775410\"\u003eこの文書のステータス\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org5775410\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e作成\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-05 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n \u003cli\u003eレビュー\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-07 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org5f68ed9\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org5f68ed9\"\u003e \u003ca href=\"#org5f68ed9\"\u003e概要\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org5f68ed9\"\u003e\n \u003cp\u003e\n『角栄に花束を』は、政治家である田中角栄の伝記漫画。伝記が商業漫画になるだけあって、多くの業績、エピソードを持っている。\n\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-orgc4c08f9\" class=\"outline-2\"\u003e\n \u003ch2 id=\"orgc4c08f9\"\u003e \u003ca href=\"#orgc4c08f9\"\u003eメモ\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-orgc4c08f9\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e有名な人物はバトル漫画のようにデフォルメされていて(過剰に)、個性的である。登場人物の多い伝記でありがちな、「これ誰だっけ」がなくて読みやすい。笑える\u003c/li\u003e\n \u003cli\u003e職を転々とした時期があった。さまざまな人に使われることで、人の使い方を学んだ説がある\u003c/li\u003e\n \u003cli\u003eフラフープや三種の神器など、当時何が流行っていたのか、庶民のくらしの説明があるのが面白い。昭和の世相がどうだったかは知る機会が少ない\u003c/li\u003e\n \u003cli\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/body\u003e",
    "source": "Insomnia"
  },
  {
    "title": "KDOC 348: インデックスとスライス式は違う",
    "link": "https://kijimad.github.io/roam/20250320T110200--kdoc-348-%E3%82%A4%E3%83%B3%E3%83%87%E3%83%83%E3%82%AF%E3%82%B9%E3%81%A8%E3%82%B9%E3%83%A9%E3%82%A4%E3%82%B9%E5%BC%8F%E3%81%AF%E9%81%95%E3%81%86__wiki.html",
    "published": "2025-06-14T15:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"content\" class=\"content\"\u003e\n\n \u003cdiv id=\"outline-container-orgb08a679\" class=\"outline-2\"\u003e\n \u003ch2 id=\"orgb08a679\"\u003e \u003ca href=\"#orgb08a679\"\u003eこの文書のステータス\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-orgb08a679\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e作成\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-04-28 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n \u003cli\u003eレビュー\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-02 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-orgb7e22e0\" class=\"outline-2\"\u003e\n \u003ch2 id=\"orgb7e22e0\"\u003e \u003ca href=\"#orgb7e22e0\"\u003e概要\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-orgb7e22e0\"\u003e\n \u003cp\u003e\nGo言語のスライス式。インデックスの表記と外見は似ているのだが、数字が意味するものは違う。\n\u003c/p\u003e\n\n \u003cdiv class=\"org-src-container\"\u003e\n \u003clabel class=\"org-src-name\"\u003e \u003cspan class=\"listing-number\"\u003eListing 1: \u003c/span\u003eインデックス。順番を指定する(-\u0026gt;元ポインタからのオフセット)\u003c/label\u003e \u003cpre class=\"src src-code\"\u003e0 1 2\na b c\n^\n    ^\n\u003c/pre\u003e\n\u003c/div\u003e\n\n \u003cdiv class=\"org-src-container\"\u003e\n \u003clabel class=\"org-src-name\"\u003e \u003cspan class=\"listing-number\"\u003eListing 2: \u003c/span\u003eスライス式。両端がある分、インデックスの意味とはずれがある\u003c/label\u003e \u003cpre class=\"src src-code\"\u003e0 1 2 3\n a b c\n^-----^\n  ^---^\n      ^\n\u003c/pre\u003e\n\u003c/div\u003e\n\n\n \u003cdiv class=\"org-src-container\"\u003e\n \u003cpre class=\"src src-go\"\u003eimport \u0026#34;fmt\u0026#34;\nfunc main() {\n        arr := []string{\u0026#34;a\u0026#34;, \u0026#34;b\u0026#34;, \u0026#34;c\u0026#34;}\n        fmt.Println(arr[0:])\n        fmt.Println(arr[1:])\n        fmt.Println(arr[2:])\n        fmt.Println(arr[3:])\n\n        fmt.Println(arr[:0])\n        fmt.Println(arr[:1])\n        fmt.Println(arr[:2])\n        fmt.Println(arr[:3])\n}\n\u003c/pre\u003e\n\u003c/div\u003e\n\n \u003cdiv class=\"org-src-container\"\u003e\n \u003cpre class=\"src src-nil\"\u003e[a b c]\n[b c]\n[c]\n[]\n[]\n[a]\n[a b]\n[a b c]\n\u003c/pre\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org4e785b9\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org4e785b9\"\u003e \u003ca href=\"#org4e785b9\"\u003e関連\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org4e785b9\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e \u003ca href=\"20241217T221749--kdoc-326-スライス式の後ろは含まない__wiki.html#ID-20241217T221749\"\u003eKDOC 326: スライス式の後ろは含まない\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/body\u003e",
    "source": "Insomnia"
  },
  {
    "title": "KDOC 347: 大文字小文字の変換をそらで書く",
    "link": "https://kijimad.github.io/roam/20250320T102813--kdoc-347-%E5%A4%A7%E6%96%87%E5%AD%97%E5%B0%8F%E6%96%87%E5%AD%97%E3%81%AE%E5%A4%89%E6%8F%9B%E3%82%92%E3%81%9D%E3%82%89%E3%81%A7%E6%9B%B8%E3%81%8F__wiki.html",
    "published": "2025-06-14T15:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"content\" class=\"content\"\u003e\n\n \u003cdiv id=\"outline-container-org326a43e\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org326a43e\"\u003e \u003ca href=\"#org326a43e\"\u003eこの文書のステータス\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org326a43e\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e作成\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-04-28 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n \u003cli\u003eレビュー\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-02 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-orgbad2e87\" class=\"outline-2\"\u003e\n \u003ch2 id=\"orgbad2e87\"\u003e \u003ca href=\"#orgbad2e87\"\u003e概要\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-orgbad2e87\"\u003e\n \u003cp\u003e\n大文字–小文字のASCIIコードオフセットを覚えておかなくても、runeの値だけで計算できる。\n\u003c/p\u003e\n\n \u003cdiv class=\"org-src-container\"\u003e\n \u003cpre class=\"src src-go\"\u003eimport \u0026#34;fmt\u0026#34;\n\nfunc main() {\n        fmt.Println(conv(\u0026#39;a\u0026#39;))\n        fmt.Println(conv(\u0026#39;b\u0026#39;))\n        fmt.Println(conv(\u0026#39;z\u0026#39;))\n}\n\nfunc conv(c rune) string {\n        return string(c+(\u0026#39;A\u0026#39;-\u0026#39;a\u0026#39;))\n}\n\u003c/pre\u003e\n\u003c/div\u003e\n\n \u003cdiv class=\"org-src-container\"\u003e\n \u003cpre class=\"src src-nil\"\u003eA\nB\nZ\n\u003c/pre\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org9d89646\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org9d89646\"\u003e \u003ca href=\"#org9d89646\"\u003e関連\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org9d89646\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e \u003ca href=\"20250315T132844--kdoc-345-中間要素の作成に便利なstringsjoin__wiki.html#ID-20250315T132844\"\u003eKDOC 345: 中間要素の作成に便利なstrings.Join\u003c/a\u003e。同じくスマートな書き方のメモ\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003c/body\u003e",
    "source": "Insomnia"
  },
  {
    "title": "KDOC 346: appendで先頭に追加する",
    "link": "https://kijimad.github.io/roam/20250315T133728--kdoc-346-append%E3%81%A7%E5%85%88%E9%A0%AD%E3%81%AB%E8%BF%BD%E5%8A%A0%E3%81%99%E3%82%8B__wiki.html",
    "published": "2025-06-14T15:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"content\" class=\"content\"\u003e\n\n \u003cdiv id=\"outline-container-orgd33cbf0\" class=\"outline-2\"\u003e\n \u003ch2 id=\"orgd33cbf0\"\u003e \u003ca href=\"#orgd33cbf0\"\u003eこの文書のステータス\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-orgd33cbf0\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e作成\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-04-28 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n \u003cli\u003eレビュー\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-02 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org93954ae\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org93954ae\"\u003e \u003ca href=\"#org93954ae\"\u003e概要\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org93954ae\"\u003e\n \u003cp\u003e\nGo言語の組み込み関数  \u003ccode\u003eappend\u003c/code\u003e にはさまざまな利用法がある。スライスの末尾でなく前に追加するにはこうする。\n\u003c/p\u003e\n\n \u003cdiv class=\"org-src-container\"\u003e\n \u003cpre class=\"src src-go\"\u003eimport \u0026#34;fmt\u0026#34;\n  func main() {\n        origin := []string{\u0026#34;world\u0026#34;}\n        origin = append([]string{\u0026#34;hello\u0026#34;}, origin...)\n        fmt.Print(origin)\n}\n\u003c/pre\u003e\n\u003c/div\u003e\n\n \u003cdiv class=\"org-src-container\"\u003e\n \u003cpre class=\"src src-nil\"\u003e[hello world]\n\u003c/pre\u003e\n\u003c/div\u003e\n\n \u003cdiv class=\"org-src-container\"\u003e\n \u003cpre class=\"src src-git-permalink\"\u003ehttps://github.com/golang/go/blob/3c3b8dd4f0590881f7010014985d05cce1c9e943/src/builtin/builtin.go#L149\n\u003c/pre\u003e\n\u003c/div\u003e\n\n \u003cdiv class=\"org-src-container\"\u003e\n \u003cpre class=\"src src-nil\"\u003efunc append(slice []Type, elems ...Type) []Type\n\u003c/pre\u003e\n\u003c/div\u003e\n\n \u003cp\u003e\nappendは最初にスライス、次に要素を指定する。最初に追加するには最初のスライスを新しく作り、その後ろに既存のスライスの要素を指定する、というようにする。\n\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-orgb79681e\" class=\"outline-2\"\u003e\n \u003ch2 id=\"orgb79681e\"\u003e \u003ca href=\"#orgb79681e\"\u003e関連\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-orgb79681e\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e \u003ca href=\"20241010T004623--kdoc-253-goでn段階に可変長引数を渡す__wiki.html#ID-20241010T004623\"\u003eKDOC 253: GoでN段階に可変長引数を渡す\u003c/a\u003e。appendの利用法つながり\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003c/body\u003e",
    "source": "Insomnia"
  },
  {
    "title": "KDOC 345: 中間要素の作成に便利なstrings.Join",
    "link": "https://kijimad.github.io/roam/20250315T132844--kdoc-345-%E4%B8%AD%E9%96%93%E8%A6%81%E7%B4%A0%E3%81%AE%E4%BD%9C%E6%88%90%E3%81%AB%E4%BE%BF%E5%88%A9%E3%81%AAstringsjoin__wiki.html",
    "published": "2025-06-14T15:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"content\" class=\"content\"\u003e\n\n \u003cdiv id=\"outline-container-org57ce17d\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org57ce17d\"\u003e \u003ca href=\"#org57ce17d\"\u003eこの文書のステータス\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org57ce17d\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e作成\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-04-28 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n \u003cli\u003eレビュー\n \u003cul class=\"org-ul\"\u003e \u003cli class=\"on\"\u003e \u003cinput type=\"checkbox\" checked=\"checked\"\u003e\u003c/input\u003e 2025-05-02 貴島\u003c/li\u003e\n\u003c/ul\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-orgae375b0\" class=\"outline-2\"\u003e\n \u003ch2 id=\"orgae375b0\"\u003e \u003ca href=\"#orgae375b0\"\u003e概要\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-orgae375b0\"\u003e\n \u003cp\u003e\n「最初と最後を除いて、要素を足したい」というケースは多い。\n\u003c/p\u003e\n\n \u003cdiv class=\"org-src-container\"\u003e\n \u003cpre class=\"src src-nil\"\u003e\u0026#34;ABC\u0026#34; =\u0026gt; \u0026#34;A B C\u0026#34;\n\u003c/pre\u003e\n\u003c/div\u003e\n\n \u003cp\u003e\nみたいなとき。何も考えずにforループで書くと、先頭や末尾にも半角スペースを足してしまったりする。このように真ん中の要素だけ要素を足したい場合は、  \u003ccode\u003estrings.Joins\u003c/code\u003e を使うと便利である。\n\u003c/p\u003e\n\n \u003cdiv class=\"org-src-container\"\u003e\n \u003cpre class=\"src src-go\"\u003eimport (\n        \u0026#34;strings\u0026#34;\n        \u0026#34;fmt\u0026#34;\n)\nfunc main() {\n        alpha := []string{\u0026#34;this\u0026#34;, \u0026#34;is\u0026#34;, \u0026#34;hello\u0026#34;, \u0026#34;world\u0026#34;}\n        fmt.Print(strings.Join(alpha, \u0026#34;★\u0026#34;))\n}\n\u003c/pre\u003e\n\u003c/div\u003e\n\n \u003cdiv class=\"org-src-container\"\u003e\n \u003cpre class=\"src src-nil\"\u003ethis★is★hello★world\n\u003c/pre\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org0cb25ae\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org0cb25ae\"\u003e \u003ca href=\"#org0cb25ae\"\u003e関連\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org0cb25ae\"\u003e\n \u003cp\u003e\nなし。\n\u003c/p\u003e\n\u003c/div\u003e\n\u003c/div\u003e\n \u003cdiv id=\"outline-container-org1de7cec\" class=\"outline-2\"\u003e\n \u003ch2 id=\"org1de7cec\"\u003e \u003ca href=\"#org1de7cec\"\u003eBacklinks\u003c/a\u003e\u003c/h2\u003e\n \u003cdiv class=\"outline-text-2\" id=\"text-org1de7cec\"\u003e\n \u003cul class=\"org-ul\"\u003e \u003cli\u003e \u003ca href=\"./20250320T102813--kdoc-347-大文字小文字の変換をそらで書く__wiki.html\"\u003eKDOC 347: 大文字小文字の変換をそらで書く\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\u003c/div\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003c/body\u003e",
    "source": "Insomnia"
  },
  {
    "title": "Claude Code による技術的特異点を見届けろ",
    "link": "https://zenn.dev/mizchi/articles/claude-code-singularity-point",
    "published": "2025-06-13T09:31:07Z",
    "summary": "\u003cbody\u003e\u003cblockquote cite=\"https://zenn.dev/mizchi/articles/claude-code-singularity-point\" title=\"Claude Code による技術的特異点を見届けろ\"\u003e\u003ccite\u003e\u003cimg src=\"https://cdn-ak2.favicon.st-hatena.com/64?url=https%3A%2F%2Fzenn.dev%2Fmizchi%2Farticles%2Fclaude-code-singularity-point\" alt=\"\"\u003e\u003c/img\u003e \u003ca href=\"https://zenn.dev/mizchi/articles/claude-code-singularity-point\"\u003eClaude Code による技術的特異点を見届けろ\u003c/a\u003e\u003c/cite\u003e\u003cp\u003e\u003ca href=\"https://zenn.dev/mizchi/articles/claude-code-singularity-point\"\u003e\u003cimg src=\"https://cdn-ak-scissors.b.st-hatena.com/image/square/6407a61085ee492a7e64e7c6b5b3645955aff965/height=90;version=1;width=120/https%3A%2F%2Fres.cloudinary.com%2Fzenn%2Fimage%2Fupload%2Fs--0gY0jgcX--%2Fc_fit%252Cg_north_west%252Cl_text%3Anotosansjp-medium.otf_55%3AClaude%252520Code%252520%2525E3%252581%2525AB%2525E3%252582%252588%2525E3%252582%25258B%2525E6%25258A%252580%2525E8%2525A1%252593%2525E7%25259A%252584%2525E7%252589%2525B9%2525E7%252595%2525B0%2525E7%252582%2525B9%2525E3%252582%252592%2525E8%2525A6%25258B%2525E5%2525B1%25258A%2525E3%252581%252591%2525E3%252582%25258D%252Cw_1010%252Cx_90%252Cy_100%2Fg_south_west%252Cl_text%3Anotosansjp-medium.otf_37%3Amizchi%252Cx_203%252Cy_121%2Fg_south_west%252Ch_90%252Cl_fetch%3AaHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2liclRHT052Z3d3ay1fNGxlcVk4TGNGSlNuX0FoWnpEWVlKaXJNcWc9czI1MC1j%252Cr_max%252Cw_90%252Cx_87%252Cy_95%2Fv1627283836%2Fdefault%2Fog-base-w1200-v2.png\" alt=\"Claude Code による技術的特異点を見届けろ\" title=\"Claude Code による技術的特異点を見届けろ\" class=\"entry-image\"\u003e\u003c/img\u003e\u003c/a\u003e\u003c/p\u003e\u003cp\u003e最近もっぱら Roo から Claude Code をメインに移しているが、その界隈の進歩は今までの変化とは明らかに質が違うという感覚がある。それを今の時点で言語化しておきたい。 最初にいっておくと、自分はシンギュラリティ論自体には否定派というか、シンギュラリティが来たところで世の中の問題の大多数が解決されるとは思...\u003c/p\u003e\u003cp\u003e\u003ca href=\"https://b.hatena.ne.jp/entry/s/zenn.dev/mizchi/articles/claude-code-singularity-point\"\u003e\u003cimg src=\"https://b.hatena.ne.jp/entry/image/https://zenn.dev/mizchi/articles/claude-code-singularity-point\" alt=\"はてなブックマーク - Claude Code による技術的特異点を見届けろ\" title=\"はてなブックマーク - Claude Code による技術的特異点を見届けろ\" border=\"0\" style=\"border: none\"\u003e\u003c/img\u003e\u003c/a\u003e \u003ca href=\"https://b.hatena.ne.jp/entry/s/zenn.dev/mizchi/articles/claude-code-singularity-point\"\u003e\u003cimg src=\"https://b.st-hatena.com/images/append.gif\" border=\"0\" alt=\"はてなブックマークに追加\" title=\"はてなブックマークに追加\"\u003e\u003c/img\u003e\u003c/a\u003e\u003c/p\u003e\u003c/blockquote\u003e\u003c/body\u003e",
    "source": "t-wadaのはてなブックマーク"
  },
  {
    "title": "開発人生25年で学んだ7つのソフトウェア原則（翻訳）",
    "link": "https://techracho.bpsinc.jp/hachi8833/2025_06_13/151017",
    "published": "2025-06-13T08:30:29Z",
    "summary": "\u003cbody\u003e\u003cdiv style=\"margin: 5px 5% 10px 5%;\"\u003e\u003cimg src=\"https://techracho.bpsinc.jp/wp-content/uploads/2025/05/ruby_seven_things_that_I_know_after_25_dev_eyecatch-min-768x461.png\" width=\"768\" height=\"461\" title=\"\" alt=\"\"\u003e\u003c/img\u003e\u003c/div\u003e\u003cdiv\u003e\u003cdiv class=\"comment\"\u003e\n\u003cp\u003e\u003cspan class=\"comment-title\"\u003e概要\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e原著者の許諾を得て翻訳・公開いたします。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e英語記事: \u003ca href=\"https://zverok.space/blog/2025-01-27-7things-euruko.html\" data-wpel-link=\"external\" target=\"_blank\" rel=\"external noopener\" class=\"wpel-icon-right\"\u003eSeven things I know after 25 years of development\u003cspan class=\"wpel-icon wpel-image wpel-icon-19\"\u003e\u003c/span\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e原文公開日: 2025/01/27\u003c/li\u003e\n\u003cli\u003e原著者: \u003ca href=\"https://zverok.space/about/\" data-wpel-link=\"external\" target=\"_blank\" rel=\"external noopener\" class=\"wpel-icon-right\"\u003ezverok\u003cspan class=\"wpel-icon wpel-image wpel-icon-19\"\u003e\u003c/span\u003e\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e日本語タイトルは内容に即したものにしました。\u003c/p\u003e\n\u003c/div\u003e\n\u003ch2\u003e開発人生25年で学んだ7つのソフトウェア原則（翻訳）\u003c/h2\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://techracho.bpsinc.jp/wp-content/uploads/2025/05/01_slide1.png\" alt=\"\" width=\"960\" height=\"540\" class=\"aligncenter size-full wp-image-151022\" srcset=\"https://techracho.bpsinc.jp/wp-content/uploads/2025/05/01_slide1.png 960w, https://techracho.bpsinc.jp/wp-content/uploads/2025/05/01_slide1-300x169.png 300w, https://techracho.bpsinc.jp/wp-content/uploads/2025/05/01_slide1-768x432.png 768w\" sizes=\"(max-width: 960px) 100vw, 960px\"\u003e\u003c/img\u003e\u003c/p\u003e\n\u003cdiv class=\"comment\"\u003e\n\u003cp\u003e本記事は、私が2024年9月に\u003ca href=\"https://2024.euruko.org/\" data-wpel-link=\"external\" target=\"_blank\" rel=\"external noopener\" class=\"wpel-icon-right\"\u003eEuRuKoカンファレンス\u003cspan class=\"wpel-icon wpel-image wpel-icon-19\"\u003e\u003c/span\u003e\u003c/a\u003eで行ったキーノートスピーチを大まかに記事化したものです（スピーチの動画は\u003ca href=\"https://youtu.be/r9EQjBPU474?si=Yc-0ftOTqGu-DhVh\" data-wpel-link=\"external\" target=\"_blank\" rel=\"external noopener\" class=\"wpel-icon-right\"\u003eこちら\u003cspan class=\"wpel-icon wpel-image wpel-icon-19\"\u003e\u003c/span\u003e\u003c/a\u003eです）。残念ながら録画という形での登壇でしたが、それでも大変光栄なことでした。このテーマは私にとってとても重要なので、テキストで読みたい方のために、本記事で少々手を加えた形で公開することにいたしました。\u003c/p\u003e\n\u003c/div\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://techracho.bpsinc.jp/wp-content/uploads/2025/05/02_slide2.png\" alt=\"\" width=\"960\" height=\"540\" class=\"aligncenter size-full wp-image-151023\" srcset=\"https://techracho.bpsinc.jp/wp-content/uploads/2025/05/02_slide2.png 960w, https://techracho.bpsinc.jp/wp-content/uploads/2025/05/02_slide2-300x169.png 300w, https://techracho.bpsinc.jp/wp-content/uploads/2025/05/02_slide2-768x432.png 768w\" sizes=\"(max-width: 960px) 100vw, 960px\"\u003e\u003c/img\u003e\u003c/p\u003e\n\u003cp\u003e\u003ciframe loading=\"lazy\" title=\"Victor Shepelev, keynote, \"Seven things I know after 25 years of development\"\" width=\"500\" height=\"375\" src=\"https://www.youtube.com/embed/r9EQjBPU474?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen=\"\"\u003e\u003c/iframe\u003e\u003c/p\u003e\n\u003cp\u003e私はかれこれ25年にもわたってソフトウェア開発に携わってきました。\u003cbr\u003e\u003c/br\u003e\nそのうち20年間はメインの言語としてRubyを用いてきました。\u003cbr\u003e\u003c/br\u003e\u003c/p\u003e\u003c/div\u003e\u003c/body\u003e",
    "source": "TechRacho"
  },
  {
    "title": "Lorca: ノードで様々な値とアバターの髪色を連動させたい: 実践編",
    "link": "https://techracho.bpsinc.jp/ecn/2025_06_12/146878",
    "published": "2025-06-12T08:30:56Z",
    "summary": "\u003cbody\u003e\u003cdiv style=\"margin: 5px 5% 10px 5%;\"\u003e\u003cimg src=\"https://techracho.bpsinc.jp/wp-content/uploads/2025/06/react_lorca_flume2_eyecatch-min-768x461.png\" width=\"768\" height=\"461\" title=\"\" alt=\"\"\u003e\u003c/img\u003e\u003c/div\u003e\u003cdiv\u003e\u003cdiv class=\"comment\" style=\"background-color:#fdd\"\u003e\n\u003cspan class=\"comment-title\" style=\"background-color:#fdd\"\u003e注意！\u003c/span\u003e\u003cbr\u003e\u003c/br\u003e\nこの記事は前回の記事を読んでいることを前提に作られています。\u003cbr\u003e\u003c/br\u003e\nまだ読んでいない方は下のリンクからどうぞ。\n\u003c/div\u003e\n\u003cblockquote class=\"wp-embedded-content\" data-secret=\"O7Hpa8nO3o\"\u003e\u003cp\u003e\u003ca href=\"https://techracho.bpsinc.jp/ecn/2024_12_10/146761\" data-wpel-link=\"internal\" target=\"_self\"\u003eLorca:ノードで様々な値とアバターの髪色を連動させたい:前提知識編\u003c/a\u003e\u003c/p\u003e\u003c/blockquote\u003e\n\u003cp\u003e\u003ciframe class=\"wp-embedded-content\" sandbox=\"allow-scripts\" security=\"restricted\" title=\"“Lorca:ノードで様々な値とアバターの髪色を連動させたい:前提知識編” — TechRacho\" src=\"https://techracho.bpsinc.jp/ecn/2024_12_10/146761/embed#?secret=O7Hpa8nO3o\" data-secret=\"O7Hpa8nO3o\" width=\"500\" height=\"282\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" scrolling=\"no\"\u003e\u003c/iframe\u003e\u003c/p\u003e\n\u003ch2\u003e\u003ca id=\"mokuji\"\u003e\u003cimg src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/1f517.png\" alt=\"🔗\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\"\u003e\u003c/img\u003e\u003c/a\u003e目次\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e\u003ca href=\"#First\"\u003eまえがき\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#Result\"\u003e完成品\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#Unity\"\u003eUnity側での準備\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#Make\"\u003e実装\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"#Last\"\u003eあとがき\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2\u003e\u003ca id=\"First\"\u003e\u003cimg src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/1f517.png\" alt=\"🔗\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\"\u003e\u003c/img\u003e\u003c/a\u003e まえがき\u003c/h2\u003e\n\u003cp\u003e皆さんどうもお久しぶりです、株式会社ECN所属のFuseです。\u003cbr\u003e\u003c/br\u003e\n前回はノードベースエディタを作れるライブラリ \u003cstrong\u003eFlume\u003c/strong\u003e とGoでモダンなHTML5デスクトップアプリを作れるライブラリ \u003cstrong\u003eLorca\u003c/strong\u003e のキャッチアップを行いました。\u003cbr\u003e\u003c/br\u003e\n今回はそれらとOSCを使って様々な情報から色情報を計算しアバターに適用するシステムを作ります。\u003cbr\u003e\u003c/br\u003e\n\u003ca href=\"#mokuji\"\u003e\u003cspan style=\"display: block;text-align:right;\"\u003e↑目次に戻る\u003c/span\u003e\u003c/a\u003e\u003c/p\u003e\n\u003ch2\u003e\u003ca id=\"Result\"\u003e\u003cimg src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/1f517.png\" alt=\"🔗\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\"\u003e\u003c/img\u003e\u003c/a\u003e 完成品\u003c/h2\u003e\n\u003cp\u003eこのようなUIを使って、\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"https://techracho.bpsinc.jp/wp-content/uploads/2025/05/スクリーンショット-2025-03-24-095328-1024x772.png\" alt=\"\" width=\"1024\" height=\"772\" class=\"aligncenter size-large wp-image-151384\" srcset=\"https://techracho.bpsinc.jp/wp-content/uploads/2025/05/スクリーンショット-2025-03-24-095328-1024x772.png 1024w, https://techracho.bpsinc.jp/wp-content/uploads/2025/05/スクリーンショット-2025-03-24-095328-300x226.png 300w, https://techracho.bpsinc.jp/wp-content/uploads/2025/05/スクリーンショット-2025-03-24-095328-768x579.png 768w, https://techracho.bpsinc.jp/wp-content/uploads/2025/05/スクリーンショット-2025-03-24-095328.png 1185w\" sizes=\"(max-width: 1024px) 100vw, 1024px\"\u003e\u003c/img\u003e\u003c/p\u003e\n\u003cp\u003eこのように髪色を変えられます。\u003c/p\u003e\n\u003cp\u003e\u003c/p\u003e\u003cdiv style=\"width: 1920px;\" class=\"wp-video\"\u003e\n\u003cvideo class=\"wp-video-shortcode\" id=\"video-146878-1\" width=\"1920\" height=\"992\" preload=\"metadata\" controls=\"controls\"\u003e\u003csource type=\"video/mp4\" src=\"https://techracho.bpsinc.jp/wp-content/uploads/2025/05/VRChat-2025-03-24-09-52-17.mp4?_=1\"\u003e\u003c/source\u003e\u003ca href=\"https://techracho.bpsinc.jp/wp-content/uploads/2025/05/VRChat-2025-03-24-09-52-17.mp4\" data-wpel-link=\"internal\" target=\"_self\"\u003ehttps://techracho.bpsinc.jp/wp-content/uploads/2025/05/VRChat-2025-03-24-09-52-17.mp4\u003c/a\u003e\u003c/video\u003e\u003c/div\u003e\u003cbr\u003e\u003c/br\u003e\n\u003ca href=\"#mokuji\"\u003e\u003cspan style=\"display: block;text-align:right;\"\u003e↑目次に戻る\u003c/span\u003e\u003c/a\u003e\u003cp\u003e\u003c/p\u003e\n\u003ch2\u003e\u003ca id=\"Unity\"\u003e\u003cimg src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/1f517.png\" alt=\"🔗\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\"\u003e\u003c/img\u003e\u003c/a\u003e\u003c/h2\u003e\u003c/div\u003e\u003c/body\u003e",
    "source": "TechRacho"
  },
  {
    "title": "HOW TO READ Prompt Engineering for LLM (牛本)",
    "link": "https://speakerdeck.com/yuhattor/how-to-read-prompt-engineering-for-llm-niu-ben",
    "published": "2025-06-12T07:53:37Z",
    "summary": "\u003cbody\u003e\u003cblockquote cite=\"https://speakerdeck.com/yuhattor/how-to-read-prompt-engineering-for-llm-niu-ben\" title=\"HOW TO READ Prompt Engineering for LLM (牛本)\"\u003e\u003ccite\u003e\u003cimg src=\"https://cdn-ak2.favicon.st-hatena.com/64?url=https%3A%2F%2Fspeakerdeck.com%2Fyuhattor%2Fhow-to-read-prompt-engineering-for-llm-niu-ben\" alt=\"\"\u003e\u003c/img\u003e \u003ca href=\"https://speakerdeck.com/yuhattor/how-to-read-prompt-engineering-for-llm-niu-ben\"\u003eHOW TO READ Prompt Engineering for LLM (牛本)\u003c/a\u003e\u003c/cite\u003e\u003cp\u003e\u003ca href=\"https://speakerdeck.com/yuhattor/how-to-read-prompt-engineering-for-llm-niu-ben\"\u003e\u003cimg src=\"https://cdn-ak-scissors.b.st-hatena.com/image/square/75543fe6d38d38d850e646801b4a5fb83dc007c5/height=90;version=1;width=120/https%3A%2F%2Ffiles.speakerdeck.com%2Fpresentations%2F5a7d273cc04846fb80dda8911ce2205f%2Fslide_0.jpg%3F35423088\" alt=\"HOW TO READ Prompt Engineering for LLM (牛本)\" title=\"HOW TO READ Prompt Engineering for LLM (牛本)\" class=\"entry-image\"\u003e\u003c/img\u003e\u003c/a\u003e\u003c/p\u003e\u003cp\u003e「つぎの一歩が見つかる、気づきと学びの場」 Forkwell Library シリーズ 第98弾 これまで Forkwell のイベントで登壇されたエキスパートの方々は、先達が記した書籍から「気づき」を得て実践し、振り返り、再現性のある「学び」として身に付けていく中で、実績を築いてこられました。 …\u003c/p\u003e\u003cp\u003e\u003ca href=\"https://b.hatena.ne.jp/entry/s/speakerdeck.com/yuhattor/how-to-read-prompt-engineering-for-llm-niu-ben\"\u003e\u003cimg src=\"https://b.hatena.ne.jp/entry/image/https://speakerdeck.com/yuhattor/how-to-read-prompt-engineering-for-llm-niu-ben\" alt=\"はてなブックマーク - HOW TO READ Prompt Engineering for LLM (牛本)\" title=\"はてなブックマーク - HOW TO READ Prompt Engineering for LLM (牛本)\" border=\"0\" style=\"border: none\"\u003e\u003c/img\u003e\u003c/a\u003e \u003ca href=\"https://b.hatena.ne.jp/entry/s/speakerdeck.com/yuhattor/how-to-read-prompt-engineering-for-llm-niu-ben\"\u003e\u003cimg src=\"https://b.st-hatena.com/images/append.gif\" border=\"0\" alt=\"はてなブックマークに追加\" title=\"はてなブックマークに追加\"\u003e\u003c/img\u003e\u003c/a\u003e\u003c/p\u003e\u003c/blockquote\u003e\u003c/body\u003e",
    "source": "t-wadaのはてなブックマーク"
  },
  {
    "title": "LLMの制約を味方にする開発術",
    "link": "https://zenn.dev/hidenorigoto/articles/38b22a2ccbeac6",
    "published": "2025-06-12T02:09:40Z",
    "summary": "\u003cbody\u003e\u003cblockquote cite=\"https://zenn.dev/hidenorigoto/articles/38b22a2ccbeac6\" title=\"LLMの制約を味方にする開発術\"\u003e\u003ccite\u003e\u003cimg src=\"https://cdn-ak2.favicon.st-hatena.com/64?url=https%3A%2F%2Fzenn.dev%2Fhidenorigoto%2Farticles%2F38b22a2ccbeac6\" alt=\"\"\u003e\u003c/img\u003e \u003ca href=\"https://zenn.dev/hidenorigoto/articles/38b22a2ccbeac6\"\u003eLLMの制約を味方にする開発術\u003c/a\u003e\u003c/cite\u003e\u003cp\u003e\u003ca href=\"https://zenn.dev/hidenorigoto/articles/38b22a2ccbeac6\"\u003e\u003cimg src=\"https://cdn-ak-scissors.b.st-hatena.com/image/square/10f007a484228273ed232695db7e6505ee9970d2/height=90;version=1;width=120/https%3A%2F%2Fres.cloudinary.com%2Fzenn%2Fimage%2Fupload%2Fs--E6abUgia--%2Fc_fit%252Cg_north_west%252Cl_text%3Anotosansjp-medium.otf_55%3ALLM%2525E3%252581%2525AE%2525E5%252588%2525B6%2525E7%2525B4%252584%2525E3%252582%252592%2525E5%252591%2525B3%2525E6%252596%2525B9%2525E3%252581%2525AB%2525E3%252581%252599%2525E3%252582%25258B%2525E9%252596%25258B%2525E7%252599%2525BA%2525E8%2525A1%252593%252Cw_1010%252Cx_90%252Cy_100%2Fg_south_west%252Cl_text%3Anotosansjp-medium.otf_37%3Ahidenorigoto%252Cx_203%252Cy_121%2Fg_south_west%252Ch_90%252Cl_fetch%3AaHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUNnOG9jSWF0ZERINjF6ZDA4MUp5YkUzOTlqT1lLaG1GZXVIQ3JEZ0Jlckttdk5pVXRrR3NaRno9czk2LWM%3D%252Cr_max%252Cw_90%252Cx_87%252Cy_95%2Fv1627283836%2Fdefault%2Fog-base-w1200-v2.png\" alt=\"LLMの制約を味方にする開発術\" title=\"LLMの制約を味方にする開発術\" class=\"entry-image\"\u003e\u003c/img\u003e\u003c/a\u003e\u003c/p\u003e\u003cp\u003eAIコーディングツールを使っているのに、なぜ期待通りの結果が得られないのか 「AIにコード生成を頼んだら、動くは動くけど、プロジェクトの規約に全然従っていない…」 「複雑な機能を実装させようとすると、途中で迷走してしまう…」 「リファクタリングを頼んだら、余計に複雑になってしまった…」 こんな経験はありませ...\u003c/p\u003e\u003cp\u003e\u003ca href=\"https://b.hatena.ne.jp/entry/s/zenn.dev/hidenorigoto/articles/38b22a2ccbeac6\"\u003e\u003cimg src=\"https://b.hatena.ne.jp/entry/image/https://zenn.dev/hidenorigoto/articles/38b22a2ccbeac6\" alt=\"はてなブックマーク - LLMの制約を味方にする開発術\" title=\"はてなブックマーク - LLMの制約を味方にする開発術\" border=\"0\" style=\"border: none\"\u003e\u003c/img\u003e\u003c/a\u003e \u003ca href=\"https://b.hatena.ne.jp/entry/s/zenn.dev/hidenorigoto/articles/38b22a2ccbeac6\"\u003e\u003cimg src=\"https://b.st-hatena.com/images/append.gif\" border=\"0\" alt=\"はてなブックマークに追加\" title=\"はてなブックマークに追加\"\u003e\u003c/img\u003e\u003c/a\u003e\u003c/p\u003e\u003c/blockquote\u003e\u003c/body\u003e",
    "source": "t-wadaのはてなブックマーク"
  },
  {
    "title": "Debugging and parsing Ruby",
    "link": "https://rubyweekly.com/issues/754",
    "published": "2025-06-12T00:00:00Z",
    "summary": "\u003cbody\u003e\u003c/body\u003e",
    "source": "Ruby Weekly"
  },
  {
    "title": "Stimulusで複数のCSSクラスをオンオフする方法（翻訳）",
    "link": "https://techracho.bpsinc.jp/hachi8833/2025_06_11/150121",
    "published": "2025-06-11T08:30:35Z",
    "summary": "\u003cbody\u003e\u003cdiv style=\"margin: 5px 5% 10px 5%;\"\u003e\u003cimg src=\"https://techracho.bpsinc.jp/wp-content/uploads/2025/04/stimulus_toggle_css_classes_eyecatch-min-768x461.png\" width=\"768\" height=\"461\" title=\"\" alt=\"\"\u003e\u003c/img\u003e\u003c/div\u003e\u003cdiv\u003e\u003cdiv class=\"comment\"\u003e\n\u003cp\u003e\u003cspan class=\"comment-title\"\u003e概要\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e元サイトの許諾を得て翻訳・公開いたします。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e英語記事: \u003ca href=\"https://railsdesigner.com/multiple-classes-stimulus/\" data-wpel-link=\"external\" target=\"_blank\" rel=\"external noopener\" class=\"wpel-icon-right\"\u003eHow to Toggle Multiple CSS Classes with Stimulus | Rails Designer\u003cspan class=\"wpel-icon wpel-image wpel-icon-19\"\u003e\u003c/span\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e原文公開日: 2024/10/02\u003c/li\u003e\n\u003cli\u003e原著者: \u003ca href=\"https://railsdesigner.com/articles/\" data-wpel-link=\"external\" target=\"_blank\" rel=\"external noopener\" class=\"wpel-icon-right\"\u003eRails Designer\u003cspan class=\"wpel-icon wpel-image wpel-icon-19\"\u003e\u003c/span\u003e\u003c/a\u003e -- Railsフロントエンド関連記事に加えて、\u003ca href=\"https://railsdesigner.com/components/\" data-wpel-link=\"external\" target=\"_blank\" rel=\"external noopener\" class=\"wpel-icon-right\"\u003eViewComponentとTailwind CSSを用いた美しいUIコンポーネント\u003cspan class=\"wpel-icon wpel-image wpel-icon-19\"\u003e\u003c/span\u003e\u003c/a\u003eを販売しています\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/div\u003e\n\u003ch2\u003eStimulusで複数のCSSクラスをオンオフする方法（翻訳）\u003c/h2\u003e\n\u003cp\u003eCSSクラスの動的な追加や削除（切り替え）は、Webアプリでよく行われる操作です。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e例: \u003ccode\u003ehidden\u003c/code\u003e要素（\u003ccode\u003edisplay: none\u003c/code\u003e）を\u003ccode\u003eblock\u003c/code\u003e（\u003ccode\u003edisplay: block\u003c/code\u003e）に変更することで表示する\u003c/li\u003e\n\u003cli\u003e例: DOMの下の方にカスケードするクラスを追加する（つまりbody要素に\u003ccode\u003edark\u003c/code\u003eクラスを追加する）\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e1個の要素に複数のクラスを追加したい場合があります。私の\u003ca href=\"https://railsdesigner.com/\" data-wpel-link=\"external\" target=\"_blank\" rel=\"external noopener\" class=\"wpel-icon-right\"\u003eRails Designerサイト\u003cspan class=\"wpel-icon wpel-image wpel-icon-19\"\u003e\u003c/span\u003e\u003c/a\u003eの上部にあるナビゲーションバーがよい例で、下に一定以上スクロールすると、\u003ccode\u003e\u0026lt;nav\u0026gt;\u003c/code\u003e\u003c/p\u003e\u003c/div\u003e\u003c/body\u003e",
    "source": "TechRacho"
  },
  {
    "title": "マーケティングにデザインは不可欠！\"成果の出るデザイン\"についてマーケター視点で語ってみた",
    "link": "https://techracho.bpsinc.jp/iizuka/2025_06_10/151510",
    "published": "2025-06-10T04:00:53Z",
    "summary": "\u003cbody\u003e\u003cdiv style=\"margin: 5px 5% 10px 5%;\"\u003e\u003cimg src=\"https://techracho.bpsinc.jp/wp-content/uploads/2025/06/marketing-design-768x461.png\" width=\"768\" height=\"461\" title=\"\" alt=\"\"\u003e\u003c/img\u003e\u003c/div\u003e\u003cdiv\u003e\u003cp\u003e売上をあげるための活動である「マーケティング」と、モノなどの見た目を整える「デザイン」。\u003cbr\u003e\u003c/br\u003e\n一見まったく違うフィールドの話に感じますが、実はマーケティングにおいてデザインは不可欠なものなのです。\u003c/p\u003e\n\u003cp\u003eこの記事では、BPSでマーケティングを担当している私が、なぜ\u003cstrong\u003eマーケティングにデザインが不可欠なのか？マーケティングで成果を上げるデザインとはなんなのか？\u003c/strong\u003eを、マーケティング・デザインの初心者にも分かるように解説していきます。\u003c/p\u003e\n\u003ch2\u003eマーケティングで成果を上げるうえでなぜデザインが不可欠なのか？\u003c/h2\u003e\n\u003cp\u003eまずどのような場面でデザインが必要とされているか見てみると、いかにマーケティングにおいてデザインが重要であるかが分かります。\u003c/p\u003e\n\u003cp\u003e\u003c/p\u003e\u003c/div\u003e\u003c/body\u003e",
    "source": "TechRacho"
  },
  {
    "title": "GitHub - apple/container: A tool for creating and running Linux containers using lightweight virtual machines on a Mac. It's written in Swift, and optimized for Apple silicon.",
    "link": "https://github.com/apple/container",
    "published": "2025-06-10T00:28:35Z",
    "summary": "\u003cbody\u003e\u003cblockquote cite=\"https://github.com/apple/container\" title=\"GitHub - apple/container: A tool for creating and running Linux containers using lightweight virtual machines on a Mac. It's written in Swift, and optimized for Apple silicon.\"\u003e\u003ccite\u003e\u003cimg src=\"https://cdn-ak2.favicon.st-hatena.com/64?url=https%3A%2F%2Fgithub.com%2Fapple%2Fcontainer\" alt=\"\"\u003e\u003c/img\u003e \u003ca href=\"https://github.com/apple/container\"\u003eGitHub - apple/container: A tool for creating and running Linux containers using lightweight virtual machines on a Mac. It\u0026#39;s written in Swift, and optimized for Apple silicon.\u003c/a\u003e\u003c/cite\u003e\u003cp\u003e\u003ca href=\"https://github.com/apple/container\"\u003e\u003cimg src=\"https://cdn-ak-scissors.b.st-hatena.com/image/square/6443ca77c265aac6100f9479c20df8bfbb92a36b/height=90;version=1;width=120/https%3A%2F%2Frepository-images.githubusercontent.com%2F993475914%2F123bf50d-9ae2-48d9-94f7-7a345bf82c15\" alt=\"GitHub - apple/container: A tool for creating and running Linux containers using lightweight virtual machines on a Mac. It's written in Swift, and optimized for Apple silicon.\" title=\"GitHub - apple/container: A tool for creating and running Linux containers using lightweight virtual machines on a Mac. It's written in Swift, and optimized for Apple silicon.\" class=\"entry-image\"\u003e\u003c/img\u003e\u003c/a\u003e\u003c/p\u003e\u003cp\u003eYou signed in with another tab or window. Reload to refresh your session. You signed out in another tab or window. Reload to refresh your session. You switched accounts on another tab or window. Reload to refresh your session. Dismiss alert\u003c/p\u003e\u003cp\u003e\u003ca href=\"https://b.hatena.ne.jp/entry/s/github.com/apple/container\"\u003e\u003cimg src=\"https://b.hatena.ne.jp/entry/image/https://github.com/apple/container\" alt=\"はてなブックマーク - GitHub - apple/container: A tool for creating and running Linux containers using lightweight virtual machines on a Mac. It's written in Swift, and optimized for Apple silicon.\" title=\"はてなブックマーク - GitHub - apple/container: A tool for creating and running Linux containers using lightweight virtual machines on a Mac. It's written in Swift, and optimized for Apple silicon.\" border=\"0\" style=\"border: none\"\u003e\u003c/img\u003e\u003c/a\u003e \u003ca href=\"https://b.hatena.ne.jp/entry/s/github.com/apple/container\"\u003e\u003cimg src=\"https://b.st-hatena.com/images/append.gif\" border=\"0\" alt=\"はてなブックマークに追加\" title=\"はてなブックマークに追加\"\u003e\u003c/img\u003e\u003c/a\u003e\u003c/p\u003e\u003c/blockquote\u003e\u003c/body\u003e",
    "source": "t-wadaのはてなブックマーク"
  },
  {
    "title": "twadaさん講演「質とスピード」@Accenture Innovation Hub Tokyo",
    "link": "https://zenn.dev/acn_jp_sdet/articles/c2189c9fb65124",
    "published": "2025-06-09T09:21:30Z",
    "summary": "\u003cbody\u003e\u003cblockquote cite=\"https://zenn.dev/acn_jp_sdet/articles/c2189c9fb65124\" title=\"twadaさん講演「質とスピード」@Accenture Innovation Hub Tokyo\"\u003e\u003ccite\u003e\u003cimg src=\"https://cdn-ak2.favicon.st-hatena.com/64?url=https%3A%2F%2Fzenn.dev%2Facn_jp_sdet%2Farticles%2Fc2189c9fb65124\" alt=\"\"\u003e\u003c/img\u003e \u003ca href=\"https://zenn.dev/acn_jp_sdet/articles/c2189c9fb65124\"\u003etwadaさん講演「質とスピード」@Accenture Innovation Hub Tokyo\u003c/a\u003e\u003c/cite\u003e\u003cp\u003e\u003ca href=\"https://zenn.dev/acn_jp_sdet/articles/c2189c9fb65124\"\u003e\u003cimg src=\"https://cdn-ak-scissors.b.st-hatena.com/image/square/ba1b00737c9cf8889f64c1b1bf5f424eb60ed00f/height=90;version=1;width=120/https%3A%2F%2Fres.cloudinary.com%2Fzenn%2Fimage%2Fupload%2Fs--E8KxDG41--%2Fc_fit%252Cg_north_west%252Cl_text%3Anotosansjp-medium.otf_55%3Atwada%2525E3%252581%252595%2525E3%252582%252593%2525E8%2525AC%25259B%2525E6%2525BC%252594%2525E3%252580%25258C%2525E8%2525B3%2525AA%2525E3%252581%2525A8%2525E3%252582%2525B9%2525E3%252583%252594%2525E3%252583%2525BC%2525E3%252583%252589%2525E3%252580%25258D%252540Accenture%252520Innovation%252520Hub%252520Tokyo%252Cw_1010%252Cx_90%252Cy_100%2Fg_south_west%252Cl_text%3Anotosansjp-medium.otf_34%3AYoshiyama%252Cx_220%252Cy_108%2Fbo_3px_solid_rgb%3Ad6e3ed%252Cg_south_west%252Ch_90%252Cl_fetch%3AaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzk0NzI4MDc4ZDAuanBlZw%3D%3D%252Cr_20%252Cw_90%252Cx_92%252Cy_102%2Fco_rgb%3A6e7b85%252Cg_south_west%252Cl_text%3Anotosansjp-medium.otf_30%3AAccenture%252520Japan%252520SDET%252520...%252Cx_220%252Cy_160%2Fbo_4px_solid_white%252Cg_south_west%252Ch_50%252Cl_fetch%3AaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyLzViNDhjOTdlZWYuanBlZw%3D%3D%252Cr_max%252Cw_50%252Cx_139%252Cy_84%2Fv1627283836%2Fdefault%2Fog-base-w1200-v2.png\" alt=\"twadaさん講演「質とスピード」@Accenture Innovation Hub Tokyo\" title=\"twadaさん講演「質とスピード」@Accenture Innovation Hub Tokyo\" class=\"entry-image\"\u003e\u003c/img\u003e\u003c/a\u003e\u003c/p\u003e\u003cp\u003e先日、私が所属する品質コンサルティング組織「QE\u0026amp;A」の活動の一環として、初めて全社的なイベント「QualityConf」を開催しました。 今回は、TDD（テスト駆動開発）のエバンジェリストとして国内外で知られるtwadaさん（和田卓人さん）をゲストにお招きし、Accenture Innovation Hub Tokyoにて「質とスピード ～ソフトウ...\u003c/p\u003e\u003cp\u003e\u003ca href=\"https://b.hatena.ne.jp/entry/s/zenn.dev/acn_jp_sdet/articles/c2189c9fb65124\"\u003e\u003cimg src=\"https://b.hatena.ne.jp/entry/image/https://zenn.dev/acn_jp_sdet/articles/c2189c9fb65124\" alt=\"はてなブックマーク - twadaさん講演「質とスピード」@Accenture Innovation Hub Tokyo\" title=\"はてなブックマーク - twadaさん講演「質とスピード」@Accenture Innovation Hub Tokyo\" border=\"0\" style=\"border: none\"\u003e\u003c/img\u003e\u003c/a\u003e \u003ca href=\"https://b.hatena.ne.jp/entry/s/zenn.dev/acn_jp_sdet/articles/c2189c9fb65124\"\u003e\u003cimg src=\"https://b.st-hatena.com/images/append.gif\" border=\"0\" alt=\"はてなブックマークに追加\" title=\"はてなブックマークに追加\"\u003e\u003c/img\u003e\u003c/a\u003e\u003c/p\u003e\u003c/blockquote\u003e\u003c/body\u003e",
    "source": "t-wadaのはてなブックマーク"
  },
  {
    "title": "Railsスケーリング（1）Puma、コンカレンシー、GVLのパフォーマンスへの影響を理解する（翻訳）",
    "link": "https://techracho.bpsinc.jp/hachi8833/2025_06_09/151182",
    "published": "2025-06-09T08:30:58Z",
    "summary": "\u003cbody\u003e\u003cdiv style=\"margin: 5px 5% 10px 5%;\"\u003e\u003cimg src=\"https://techracho.bpsinc.jp/wp-content/uploads/2025/05/rails_scaling_puma_concurrency_gvl_on_performance_eyecatch-min-768x461.png\" width=\"768\" height=\"461\" title=\"\" alt=\"\"\u003e\u003c/img\u003e\u003c/div\u003e\u003cdiv\u003e\u003cdiv class=\"comment\"\u003e\n\u003cp\u003e\u003cspan class=\"comment-title\"\u003e概要\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e元サイトの許諾を得て翻訳・公開いたします。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e英語記事: \u003ca href=\"https://www.bigbinary.com/blog/understanding-puma-concurrency-and-the-effect-of-the-gvl-on-performance\" data-wpel-link=\"external\" target=\"_blank\" rel=\"external noopener\" class=\"wpel-icon-right\"\u003eUnderstanding Puma, Concurrency, and the Effect of the GVL on Performance - BigBinary Blog\u003cspan class=\"wpel-icon wpel-image wpel-icon-19\"\u003e\u003c/span\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e原文公開日: 2025/04/22\u003c/li\u003e\n\u003cli\u003e原著者: \u003ca href=\"https://www.bigbinary.com/blog/authors/vishnu-m\" data-wpel-link=\"external\" target=\"_blank\" rel=\"external noopener\" class=\"wpel-icon-right\"\u003eVishnu M\u003cspan class=\"wpel-icon wpel-image wpel-icon-19\"\u003e\u003c/span\u003e\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e日本語タイトルは内容に即したものにしました。\u003c/p\u003e\n\u003c/div\u003e\n\u003ch2\u003eRailsスケーリング（1）Puma、コンカレンシー、GVLのパフォーマンスへの影響を理解する（翻訳）\u003c/h2\u003e\n\u003cdiv class=\"comment\"\u003e\n\u003cp\u003e本記事は、「\u003ca href=\"https://www.bigbinary.com/blog/scaling-rails-series\" data-wpel-link=\"external\" target=\"_blank\" rel=\"external noopener\" class=\"wpel-icon-right\"\u003eRailsをスケーリングする\u003cspan class=\"wpel-icon wpel-image wpel-icon-19\"\u003e\u003c/span\u003e\u003c/a\u003e」シリーズのパート1です。\u003c/p\u003e\n\u003c/div\u003e\n\u003cp\u003e\u003ccode\u003erails new\u003c/code\u003eでRailsアプリケーションを作成したときのデフォルトWebサーバーは、\u003ca href=\"https://puma.io/\" data-wpel-link=\"external\" target=\"_blank\" rel=\"external noopener\" class=\"wpel-icon-right\"\u003ePuma\u003cspan class=\"wpel-icon wpel-image wpel-icon-19\"\u003e\u003c/span\u003e\u003c/a\u003eになります。PumaがHTTPリクエストをどのように処理するかを説明しましょう。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"https://github.com/puma/puma\" data-wpel-link=\"external\" target=\"_blank\" rel=\"external noopener\"\u003e\u003cimg src=\"https://gh-card.dev/repos/puma/puma.svg\" alt=\"puma/puma - GitHub\"\u003e\u003c/img\u003e\u003c/a\u003e\u003c/p\u003e\n\u003ch3\u003e\u003ca id=\"how-puma\" href=\"#how-puma\"\u003e\u003cimg src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/1f517.png\" alt=\"🔗\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\"\u003e\u003c/img\u003e\u003c/a\u003e Pumaがリクエストを処理するしくみ\u003c/h3\u003e\n\u003cp\u003ePumaは受信リクエストをTCPソケットでリッスンします。\u003cbr\u003e\u003c/br\u003e\u003c/p\u003e\u003c/div\u003e\u003c/body\u003e",
    "source": "TechRacho"
  },
  {
    "title": "AIエージェントとのペアプロがうまくいかない理由（翻訳）",
    "link": "https://techracho.bpsinc.jp/hachi8833/2025_06_06/151489",
    "published": "2025-06-06T08:30:44Z",
    "summary": "\u003cbody\u003e\u003cdiv style=\"margin: 5px 5% 10px 5%;\"\u003e\u003cimg src=\"https://techracho.bpsinc.jp/wp-content/uploads/2025/06/why_ai_agents_are_bad_pair_programmer_eyecatch-min-768x461.png\" width=\"768\" height=\"461\" title=\"\" alt=\"\"\u003e\u003c/img\u003e\u003c/div\u003e\u003cdiv\u003e\u003cdiv class=\"comment\"\u003e\n\u003cp\u003e\u003cspan class=\"comment-title\"\u003e概要\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e元サイトの許諾を得て翻訳・公開いたします。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e英語記事: \u003ca href=\"https://justin.searls.co/posts/why-agents-are-bad-pair-programmers/\" data-wpel-link=\"external\" target=\"_blank\" rel=\"external noopener\" class=\"wpel-icon-right\"\u003eWhy agents are bad pair programmers | justin․searls․co\u003cspan class=\"wpel-icon wpel-image wpel-icon-19\"\u003e\u003c/span\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e原文公開日: 2025/05/30\u003c/li\u003e\n\u003cli\u003e原著者: \u003ca href=\"https://justin.searls.co/about/\" data-wpel-link=\"external\" target=\"_blank\" rel=\"external noopener\" class=\"wpel-icon-right\"\u003eJustin Searls\u003cspan class=\"wpel-icon wpel-image wpel-icon-19\"\u003e\u003c/span\u003e\u003c/a\u003e -- \u003ca href=\"https://testdouble.com/\" data-wpel-link=\"external\" target=\"_blank\" rel=\"external noopener\" class=\"wpel-icon-right\"\u003eTest Double\u003cspan class=\"wpel-icon wpel-image wpel-icon-19\"\u003e\u003c/span\u003e\u003c/a\u003eの共同創業者です\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e日本語タイトルは内容に即したものにしました。\u003cbr\u003e\u003c/br\u003e\nagentは原則として「AIエージェント」としました。ペアプログラミングは「ペアプロ」と表記しています。\u003c/p\u003e\n\u003c/div\u003e\n\u003ch2\u003eAIエージェントとのペアプロがうまくいかない理由（翻訳）\u003c/h2\u003e\n\u003cp\u003eLLM（大規模言語モデル）エージェントを相手にペアプロを行ってもうまくいかないのは、\u003cstrong\u003eコードを書く速度が人間の考える速度よりも速すぎるから\u003c/strong\u003eです。\u003c/p\u003e\n\u003cp\u003eはい、今月は\u003ca href=\"https://justin.searls.co/tubes/2025-04-19-17h46m37s/\" data-wpel-link=\"external\" target=\"_blank\" rel=\"external noopener\" class=\"wpel-icon-right\"\u003eVS CodeのGitHub Copilotエージェントモード\u003cspan class=\"wpel-icon wpel-image wpel-icon-19\"\u003e\u003c/span\u003e\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/body\u003e",
    "source": "TechRacho"
  },
  {
    "title": "t-wadaさん「開発者生産性の観点から考える自動テスト」社内講演会 - SmartHR Tech Blog",
    "link": "https://tech.smarthr.jp/entry/2025/06/06/150000",
    "published": "2025-06-06T06:47:54Z",
    "summary": "\u003cbody\u003e\u003cblockquote cite=\"https://tech.smarthr.jp/entry/2025/06/06/150000\" title=\"t-wadaさん「開発者生産性の観点から考える自動テスト」社内講演会 - SmartHR Tech Blog\"\u003e\u003ccite\u003e\u003cimg src=\"https://cdn-ak2.favicon.st-hatena.com/64?url=https%3A%2F%2Ftech.smarthr.jp%2Fentry%2F2025%2F06%2F06%2F150000\" alt=\"\"\u003e\u003c/img\u003e \u003ca href=\"https://tech.smarthr.jp/entry/2025/06/06/150000\"\u003et-wadaさん「開発者生産性の観点から考える自動テスト」社内講演会 - SmartHR Tech Blog\u003c/a\u003e\u003c/cite\u003e\u003cp\u003e\u003ca href=\"https://tech.smarthr.jp/entry/2025/06/06/150000\"\u003e\u003cimg src=\"https://cdn-ak-scissors.b.st-hatena.com/image/square/2df3d3a98948bbd98718eec812ab29d442f9df13/height=90;version=1;width=120/https%3A%2F%2Fcdn.image.st-hatena.com%2Fimage%2Fscale%2F1b5421b1ac60cbbabed8bb8b7bb28b1b27d2c409%2Fbackend%3Dimagemagick%3Bversion%3D1%3Bwidth%3D1300%2Fhttps%253A%252F%252Fcdn-ak.f.st-hatena.com%252Fimages%252Ffotolife%252Fs%252Fsmarthr%252F20250606%252F20250606150008.jpg\" alt=\"t-wadaさん「開発者生産性の観点から考える自動テスト」社内講演会 - SmartHR Tech Blog\" title=\"t-wadaさん「開発者生産性の観点から考える自動テスト」社内講演会 - SmartHR Tech Blog\" class=\"entry-image\"\u003e\u003c/img\u003e\u003c/a\u003e\u003c/p\u003e\u003cp\u003e集合写真（t-wadaさんのポーズと言われ一部が腕を組んでいるシーン） こんにちは、品質保証部のtarappoです。 2025年5月26日（月）に和田卓人さん（以後、t-wadaさん）をお招きし、社内講演会を開催しました。 本記事では、その講演会に至った経緯や講演会の内容、そしてそこからのアクションについて紹介します。 t-wad...\u003c/p\u003e\u003cp\u003e\u003ca href=\"https://b.hatena.ne.jp/entry/s/tech.smarthr.jp/entry/2025/06/06/150000\"\u003e\u003cimg src=\"https://b.hatena.ne.jp/entry/image/https://tech.smarthr.jp/entry/2025/06/06/150000\" alt=\"はてなブックマーク - t-wadaさん「開発者生産性の観点から考える自動テスト」社内講演会 - SmartHR Tech Blog\" title=\"はてなブックマーク - t-wadaさん「開発者生産性の観点から考える自動テスト」社内講演会 - SmartHR Tech Blog\" border=\"0\" style=\"border: none\"\u003e\u003c/img\u003e\u003c/a\u003e \u003ca href=\"https://b.hatena.ne.jp/entry/s/tech.smarthr.jp/entry/2025/06/06/150000\"\u003e\u003cimg src=\"https://b.st-hatena.com/images/append.gif\" border=\"0\" alt=\"はてなブックマークに追加\" title=\"はてなブックマークに追加\"\u003e\u003c/img\u003e\u003c/a\u003e\u003c/p\u003e\u003c/blockquote\u003e\u003c/body\u003e",
    "source": "t-wadaのはてなブックマーク"
  },
  {
    "title": "Ruby 3.5でClass#newのアロケーションが6倍高速化される（翻訳）",
    "link": "https://techracho.bpsinc.jp/hachi8833/2025_06_05/151313",
    "published": "2025-06-05T08:30:34Z",
    "summary": "\u003cbody\u003e\u003cdiv style=\"margin: 5px 5% 10px 5%;\"\u003e\u003cimg src=\"https://techracho.bpsinc.jp/wp-content/uploads/2025/05/ruby_fast_allocation_ruby350_eyecatch-min-768x461.png\" width=\"768\" height=\"461\" title=\"\" alt=\"\"\u003e\u003c/img\u003e\u003c/div\u003e\u003cdiv\u003e\u003cdiv class=\"comment\"\u003e\n\u003cp\u003e\u003cspan class=\"comment-title\"\u003e概要\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003eCC BY-NC-SA 4.0 International Deedに基づいて翻訳・公開いたします。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e英語記事: \u003ca href=\"https://railsatscale.com/2025-05-21-fast-allocations-in-ruby-3-5/\" data-wpel-link=\"external\" target=\"_blank\" rel=\"external noopener\" class=\"wpel-icon-right\"\u003eFast Allocations in Ruby 3.5 | Rails at Scale\u003cspan class=\"wpel-icon wpel-image wpel-icon-19\"\u003e\u003c/span\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e原文公開日: 2025/05/21\u003c/li\u003e\n\u003cli\u003e原著者: \u003ca href=\"https://railsatscale.com/authors/aaron-patterson/\" data-wpel-link=\"external\" target=\"_blank\" rel=\"external noopener\" class=\"wpel-icon-right\"\u003eAaron Patterson\u003cspan class=\"wpel-icon wpel-image wpel-icon-19\"\u003e\u003c/span\u003e\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003ca href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/deed.ja\" data-wpel-link=\"external\" target=\"_blank\" rel=\"external noopener\"\u003e\u003cimg loading=\"lazy\" src=\"https://techracho.bpsinc.jp/wp-content/uploads/2024/04/by-nc-sa.webp\" alt=\"\" class=\"alignnone wp-image-141470\" width=\"103\" height=\"52\"\u003e\u003c/img\u003e\u003c/a\u003e \u003ca href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/deed.ja\" data-wpel-link=\"external\" target=\"_blank\" rel=\"external noopener\" class=\"wpel-icon-right\"\u003eCC BY-NC-SA 4.0 Deed | 表示 - 非営利 - 継承 4.0 国際 | Creative Commons\u003cspan class=\"wpel-icon wpel-image wpel-icon-19\"\u003e\u003c/span\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e日本語タイトルは内容に即したものにしました。\u003c/p\u003e\n\u003c/div\u003e\n\u003ch2\u003eRuby 3.5でClass#newのアロケーションが6倍高速化される（翻訳）\u003c/h2\u003e\n\u003cp\u003e多くのRubyアプリケーションはさまざまなオブジェクトをメモリにアロケーション（allocation: 割り当て）します。このオブジェクトアロケーションを6倍高速化できるとしたらどうでしょうか？ぜひ続きをお読みください！\u003c/p\u003e\n\u003ch3\u003e\u003ca id=\"speeding-up\" href=\"#speeding-up\"\u003e\u003cimg src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/1f517.png\" alt=\"🔗\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\"\u003e\u003c/img\u003e\u003c/a\u003e Rubyのアロケーションを高速化する\u003c/h3\u003e\n\u003cp\u003e\u003c/p\u003e\u003c/div\u003e\u003c/body\u003e",
    "source": "TechRacho"
  },
  {
    "title": "Benchmarking common Ruby and Rack servers",
    "link": "https://rubyweekly.com/issues/753",
    "published": "2025-06-05T00:00:00Z",
    "summary": "\u003cbody\u003e\u003c/body\u003e",
    "source": "Ruby Weekly"
  },
  {
    "title": "RubyのRactorを解き放つ（1）object_idの改修（翻訳）",
    "link": "https://techracho.bpsinc.jp/hachi8833/2025_06_04/151245",
    "published": "2025-06-04T08:30:55Z",
    "summary": "\u003cbody\u003e\u003cdiv style=\"margin: 5px 5% 10px 5%;\"\u003e\u003cimg src=\"https://techracho.bpsinc.jp/wp-content/uploads/2025/05/ruby_unlocking_ractor_object_id_eyecatch-min-1-768x461.png\" width=\"768\" height=\"461\" title=\"\" alt=\"\"\u003e\u003c/img\u003e\u003c/div\u003e\u003cdiv\u003e\u003cdiv class=\"comment\"\u003e\n\u003cp\u003e\u003cspan class=\"comment-title\"\u003e概要\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e元サイトの許諾を得て翻訳・公開いたします。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e英語記事: \u003ca href=\"https://byroot.github.io/ruby/performance/2025/04/26/unlocking-ractors-object-id.html\" data-wpel-link=\"external\" target=\"_blank\" rel=\"external noopener\" class=\"wpel-icon-right\"\u003eUnlocking Ractors: object_id | byroot’s blog\u003cspan class=\"wpel-icon wpel-image wpel-icon-19\"\u003e\u003c/span\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e原文公開日: 2025/04/26\u003c/li\u003e\n\u003cli\u003e原著者: \u003ca href=\"https://x.com/_byroot\" data-wpel-link=\"external\" target=\"_blank\" rel=\"external noopener\" class=\"wpel-icon-right\"\u003ebyroot\u003cspan class=\"wpel-icon wpel-image wpel-icon-19\"\u003e\u003c/span\u003e\u003c/a\u003e -- Railsコアコミッター、Rubyコミッターであり、ShopifyのRuby/Railsインフラチームのシニアスタッフエンジニアです\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e日本語タイトルは内容に即したものにしました。\u003c/p\u003e\n\u003c/div\u003e\n\u003ch2\u003eRubyのRactorを解き放つ（1）object_idの改修（翻訳）\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"/hachi8833/2025_04_01/149342\" data-wpel-link=\"internal\" target=\"_self\"\u003eRactorに関する過去記事\u003c/a\u003eでは、アプリケーション全体を1つのRactor内で実行できる可能性は低いと私が考えている理由と、それでもRactorは、状況によっては、CPUバウンドの処理をメインスレッドから追い出して一部のパラレルアルゴリズムを有効にするうえで非常に有効であると思われる理由について説明しました。\u003c/p\u003e\n\u003cp\u003e\u003c/p\u003e\u003c/div\u003e\u003c/body\u003e",
    "source": "TechRacho"
  },
  {
    "title": "やさしいClaude Code入門",
    "link": "https://speakerdeck.com/minorun365/yasasiiclaude-coderu-men",
    "published": "2025-06-04T03:24:57Z",
    "summary": "\u003cbody\u003e\u003cblockquote cite=\"https://speakerdeck.com/minorun365/yasasiiclaude-coderu-men\" title=\"やさしいClaude Code入門\"\u003e\u003ccite\u003e\u003cimg src=\"https://cdn-ak2.favicon.st-hatena.com/64?url=https%3A%2F%2Fspeakerdeck.com%2Fminorun365%2Fyasasiiclaude-coderu-men\" alt=\"\"\u003e\u003c/img\u003e \u003ca href=\"https://speakerdeck.com/minorun365/yasasiiclaude-coderu-men\"\u003eやさしいClaude Code入門\u003c/a\u003e\u003c/cite\u003e\u003cp\u003e\u003ca href=\"https://speakerdeck.com/minorun365/yasasiiclaude-coderu-men\"\u003e\u003cimg src=\"https://cdn-ak-scissors.b.st-hatena.com/image/square/754f5be181bb28aff784c2c19f0c4a7bf585d9fa/height=90;version=1;width=120/https%3A%2F%2Ffiles.speakerdeck.com%2Fpresentations%2F6d2bd40c011342bfb974c58c5c4d54fd%2Fslide_0.jpg%3F35329547\" alt=\"やさしいClaude Code入門\" title=\"やさしいClaude Code入門\" class=\"entry-image\"\u003e\u003c/img\u003e\u003c/a\u003e\u003c/p\u003e\u003cp\u003e話題のClaude 4とClaude Codeに入門！（KAGと学ぼう！勉強会） https://www.youtube.com/live/8BPfZKIa51k\u003c/p\u003e\u003cp\u003e\u003ca href=\"https://b.hatena.ne.jp/entry/s/speakerdeck.com/minorun365/yasasiiclaude-coderu-men\"\u003e\u003cimg src=\"https://b.hatena.ne.jp/entry/image/https://speakerdeck.com/minorun365/yasasiiclaude-coderu-men\" alt=\"はてなブックマーク - やさしいClaude Code入門\" title=\"はてなブックマーク - やさしいClaude Code入門\" border=\"0\" style=\"border: none\"\u003e\u003c/img\u003e\u003c/a\u003e \u003ca href=\"https://b.hatena.ne.jp/entry/s/speakerdeck.com/minorun365/yasasiiclaude-coderu-men\"\u003e\u003cimg src=\"https://b.st-hatena.com/images/append.gif\" border=\"0\" alt=\"はてなブックマークに追加\" title=\"はてなブックマークに追加\"\u003e\u003c/img\u003e\u003c/a\u003e\u003c/p\u003e\u003c/blockquote\u003e\u003c/body\u003e",
    "source": "t-wadaのはてなブックマーク"
  },
  {
    "title": "SQLite on Railsシリーズ（11）RailsのSQLiteをさらに強化する（翻訳）",
    "link": "https://techracho.bpsinc.jp/hachi8833/2025_06_03/149679",
    "published": "2025-06-03T08:30:56Z",
    "summary": "\u003cbody\u003e\u003cdiv style=\"margin: 5px 5% 10px 5%;\"\u003e\u003cimg src=\"https://techracho.bpsinc.jp/wp-content/uploads/2025/03/rails_sqlite11_eyecatch-min-768x461.png\" width=\"768\" height=\"461\" title=\"\" alt=\"\"\u003e\u003c/img\u003e\u003c/div\u003e\u003cdiv\u003e\u003cdiv class=\"comment\"\u003e\n\u003cp\u003e\u003cspan class=\"comment-title\"\u003e概要\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003e原著者の許諾を得て翻訳・公開いたします。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e英語記事: \u003ca href=\"https://fractaledmind.github.io/2023/09/26/enhancing-rails-sqlite-more-activerecord-adapter-improvements/\" data-wpel-link=\"external\" target=\"_blank\" rel=\"external noopener\" class=\"wpel-icon-right\"\u003eMore ActiveRecord adapter improvements | Fractaled Mind\u003cspan class=\"wpel-icon wpel-image wpel-icon-19\"\u003e\u003c/span\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e原文公開日: 2023/09/26\u003c/li\u003e\n\u003cli\u003e原著者: \u003ca href=\"https://fractaledmind.github.io/\" data-wpel-link=\"external\" target=\"_blank\" rel=\"external noopener\" class=\"wpel-icon-right\"\u003eStephen Margheim\u003cspan class=\"wpel-icon wpel-image wpel-icon-19\"\u003e\u003c/span\u003e\u003c/a\u003e -- フルスタックRails開発者であり、RailsのSQLite強化作業の中心人物です。Rails 8+SQLiteによる学習動画サイト\u003ca href=\"https://highleveragerails.com/\" data-wpel-link=\"external\" target=\"_blank\" rel=\"external noopener\" class=\"wpel-icon-right\"\u003eHigh Leverage Rails\u003cspan class=\"wpel-icon wpel-image wpel-icon-19\"\u003e\u003c/span\u003e\u003c/a\u003eを主催しています。\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e参考: \u003ca href=\"https://note.com/yasslab/n/n89d6850e296d\" data-wpel-link=\"external\" target=\"_blank\" rel=\"external noopener\" class=\"wpel-icon-right\"\u003eRails 8はSQLiteで大幅に強化された「個人が扱えるフレームワーク」（翻訳）｜YassLab 株式会社\u003cspan class=\"wpel-icon wpel-image wpel-icon-19\"\u003e\u003c/span\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e日本語タイトルは内容に即したものにしました。\u003c/p\u003e\n\u003c/div\u003e\n\u003ch2\u003eSQLite on Railsシリーズ（11）RailsのSQLiteをさらに強化する（翻訳）\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"/hachi8833/2025_05_13/149434\" data-wpel-link=\"internal\" target=\"_self\"\u003e先週の記事\u003c/a\u003eで最初のActive Recordプルリクをいくつかオープンしましたが、その後さらに\u003ca href=\"https://www.sqlite.org/index.html\" data-wpel-link=\"external\" target=\"_blank\" rel=\"external noopener\" class=\"wpel-icon-right\"\u003eSQLite\u003cspan class=\"wpel-icon wpel-image wpel-icon-19\"\u003e\u003c/span\u003e\u003c/a\u003e アダプタにさらに重要な改善を加える4つのプルリクをオープンしました。\u003c/p\u003e\n\u003chr\u003e\u003c/hr\u003e\n\u003cp\u003eまとめると、Active Recordの既存の大きな機能を\u003ccode\u003eSQLite3Adapter\u003c/code\u003e\u003c/p\u003e\u003c/div\u003e\u003c/body\u003e",
    "source": "TechRacho"
  },
  {
    "title": "[ On | No ] syntactic support for error handling",
    "link": "https://go.dev/blog/error-syntax",
    "published": "2025-06-03T00:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"blog\"\u003e\u003cdiv id=\"content\"\u003e\n  \u003cdiv id=\"content\"\u003e\n\n    \u003cdiv class=\"Article\" data-slug=\"/blog/error-syntax\"\u003e\n    \n    \u003ch1 class=\"small\"\u003e\u003ca href=\"/blog/\"\u003eThe Go Blog\u003c/a\u003e\u003c/h1\u003e\n    \n\n    \u003ch1\u003e[ On | No ] syntactic support for error handling\u003c/h1\u003e\n      \n      \u003cp class=\"author\"\u003e\n      Robert Griesemer\u003cbr\u003e\u003c/br\u003e\n      3 June 2025\n      \u003c/p\u003e\n      \n      \u003cp\u003eOne of the oldest and most persistent complaints about Go concerns the verbosity of error handling.\nWe are all intimately (some may say painfully) familiar with this code pattern:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-Go\"\u003ex, err := call()\nif err != nil {\n        // handle err\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eThe test \u003ccode\u003eif err != nil\u003c/code\u003e can be so pervasive that it drowns out the rest of the code.\nThis typically happens in programs that do a lot of API calls, and where handling errors\nis rudimentary and they are simply returned.\nSome programs end up with code that looks like this:\u003c/p\u003e\n\u003cpre\u003e\u003ccode class=\"language-Go\"\u003efunc printSum(a, b string) error {\n    x, err := strconv.Atoi(a)\n    if err != nil {\n        return err\n    }\n    y, err := strconv.Atoi(b)\n    if err != nil {\n        return err\n    }\n    fmt.Println(\u0026#34;result:\u0026#34;, x + y)\n    return nil\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/body\u003e",
    "source": "The Go Blog"
  },
  {
    "title": "Andrej Karpathy on X: \"There's a new kind of coding I call \"vibe coding\", where you fully give in to the vibes, embrace exponentials, and forget that the code even exists. It's possible because the LLMs (e.g. Cursor Composer w Sonnet) are getting too good",
    "link": "https://x.com/karpathy/status/1886192184808149383",
    "published": "2025-06-02T16:18:44Z",
    "summary": "\u003cbody\u003e\u003cblockquote cite=\"https://x.com/karpathy/status/1886192184808149383\" title=\"Andrej Karpathy on X: \"There's a new kind of coding I call \"vibe coding\", where you fully give in to the vibes, embrace exponentials, and forget that the code even exists. It's possible because the LLMs (e.g. Cursor Composer w Sonnet) are getting too good\"\u003e\u003ccite\u003e\u003cimg src=\"https://cdn-ak2.favicon.st-hatena.com/64?url=https%3A%2F%2Fx.com%2Fkarpathy%2Fstatus%2F1886192184808149383\" alt=\"\"\u003e\u003c/img\u003e \u003ca href=\"https://x.com/karpathy/status/1886192184808149383\"\u003eAndrej Karpathy on X: \u0026#34;There\u0026#39;s a new kind of coding I call \u0026#34;vibe coding\u0026#34;, where you fully give in to the vibes, embrace exponentials, and forget that the code even exists. It\u0026#39;s possible because the LLMs (e.g. Cursor Composer w Sonnet) are getting too good\u003c/a\u003e\u003c/cite\u003e\u003cp\u003e\u003ca href=\"https://x.com/karpathy/status/1886192184808149383\"\u003e\u003cimg src=\"\" alt=\"Andrej Karpathy on X: \"There's a new kind of coding I call \"vibe coding\", where you fully give in to the vibes, embrace exponentials, and forget that the code even exists. It's possible because the LLMs (e.g. Cursor Composer w Sonnet) are getting too good\" title=\"Andrej Karpathy on X: \"There's a new kind of coding I call \"vibe coding\", where you fully give in to the vibes, embrace exponentials, and forget that the code even exists. It's possible because the LLMs (e.g. Cursor Composer w Sonnet) are getting too good\" class=\"entry-image\"\u003e\u003c/img\u003e\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003c/p\u003e\u003cp\u003e\u003ca href=\"https://b.hatena.ne.jp/entry/s/x.com/karpathy/status/1886192184808149383\"\u003e\u003cimg src=\"https://b.hatena.ne.jp/entry/image/https://x.com/karpathy/status/1886192184808149383\" alt=\"はてなブックマーク - Andrej Karpathy on X: \"There's a new kind of coding I call \"vibe coding\", where you fully give in to the vibes, embrace exponentials, and forget that the code even exists. It's possible because the LLMs (e.g. Cursor Composer w Sonnet) are getting too good\" title=\"はてなブックマーク - Andrej Karpathy on X: \"There's a new kind of coding I call \"vibe coding\", where you fully give in to the vibes, embrace exponentials, and forget that the code even exists. It's possible because the LLMs (e.g. Cursor Composer w Sonnet) are getting too good\" border=\"0\" style=\"border: none\"\u003e\u003c/img\u003e\u003c/a\u003e \u003ca href=\"https://b.hatena.ne.jp/entry/s/x.com/karpathy/status/1886192184808149383\"\u003e\u003cimg src=\"https://b.st-hatena.com/images/append.gif\" border=\"0\" alt=\"はてなブックマークに追加\" title=\"はてなブックマークに追加\"\u003e\u003c/img\u003e\u003c/a\u003e\u003c/p\u003e\u003c/blockquote\u003e\u003c/body\u003e",
    "source": "t-wadaのはてなブックマーク"
  },
  {
    "title": "RubyにマージされたZJITの概要を理解する（翻訳）",
    "link": "https://techracho.bpsinc.jp/hachi8833/2025_06_02/151378",
    "published": "2025-06-02T08:30:46Z",
    "summary": "\u003cbody\u003e\u003cdiv style=\"margin: 5px 5% 10px 5%;\"\u003e\u003cimg src=\"https://techracho.bpsinc.jp/wp-content/uploads/2025/05/ruby_zjit_has_been_merged_eyecatch-min-768x461.png\" width=\"768\" height=\"461\" title=\"\" alt=\"\"\u003e\u003c/img\u003e\u003c/div\u003e\u003cdiv\u003e\u003cdiv class=\"comment\"\u003e\n\u003cp\u003e\u003cspan class=\"comment-title\"\u003e概要\u003c/span\u003e\u003c/p\u003e\n\u003cp\u003eCC BY-NC-SA 4.0 International Deedに基づいて翻訳・公開いたします。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e英語記事: \u003ca href=\"https://railsatscale.com/2025-05-14-merge-zjit/\" data-wpel-link=\"external\" target=\"_blank\" rel=\"external noopener\" class=\"wpel-icon-right\"\u003eZJIT has been merged into Ruby | Rails at Scale\u003cspan class=\"wpel-icon wpel-image wpel-icon-19\"\u003e\u003c/span\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e原文公開日: 2025/05/14\u003c/li\u003e\n\u003cli\u003e原著者: \u003ca href=\"https://railsatscale.com/authors/max-bernstein/\" data-wpel-link=\"external\" target=\"_blank\" rel=\"external noopener\" class=\"wpel-icon-right\"\u003eMax Bernstein\u003cspan class=\"wpel-icon wpel-image wpel-icon-19\"\u003e\u003c/span\u003e\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003ca href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/deed.ja\" data-wpel-link=\"external\" target=\"_blank\" rel=\"external noopener\"\u003e\u003cimg loading=\"lazy\" src=\"https://techracho.bpsinc.jp/wp-content/uploads/2024/04/by-nc-sa.webp\" alt=\"\" class=\"alignnone wp-image-141470\" width=\"103\" height=\"52\"\u003e\u003c/img\u003e\u003c/a\u003e \u003ca href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/deed.ja\" data-wpel-link=\"external\" target=\"_blank\" rel=\"external noopener\" class=\"wpel-icon-right\"\u003eCC BY-NC-SA 4.0 Deed | 表示 - 非営利 - 継承 4.0 国際 | Creative Commons\u003cspan class=\"wpel-icon wpel-image wpel-icon-19\"\u003e\u003c/span\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e日本語タイトルは内容に即したものにしました。\u003c/p\u003e\n\u003c/div\u003e\n\u003ch2\u003eRubyにマージされたZJITの概要を理解する（翻訳）\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://www.slideshare.net/slideshow/zjit-building-a-next-generation-ruby-jit/278807093\" data-wpel-link=\"external\" target=\"_blank\" rel=\"external noopener\" class=\"wpel-icon-right\"\u003eRubyKaigi 2025におけるMaximeのプレゼンテーション\u003cspan class=\"wpel-icon wpel-image wpel-icon-19\"\u003e\u003c/span\u003e\u003c/a\u003eと、Matzさんによる承認（\u003ca href=\"https://bugs.ruby-lang.org/issues/21221\" data-wpel-link=\"external\" target=\"_blank\" rel=\"external noopener\" class=\"wpel-icon-right\"\u003e#21221\u003cspan class=\"wpel-icon wpel-image wpel-icon-19\"\u003e\u003c/span\u003e\u003c/a\u003e）を経て、とうとうZJITがRubyにマージされました。バンザイ！\u003cbr\u003e\u003c/br\u003e\n本記事では、開発のきわめて初期段階にあるこのプロジェクトの高レベルな概要をお伝えいたします。\u003c/p\u003e\n\u003cp\u003eZJITは、Rubyのリファレンス実装である\u003ca href=\"https://ja.wikipedia.org/wiki/YARV\" data-wpel-link=\"external\" target=\"_blank\" rel=\"external noopener\" class=\"wpel-icon-right\"\u003eYARV\u003cspan class=\"wpel-icon wpel-image wpel-icon-19\"\u003e\u003c/span\u003e\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/body\u003e",
    "source": "TechRacho"
  },
  {
    "title": "『エンジニアリング統括責任者の手引き―組織を成功に導く技術リーダーシップ』 - snoozer05's blog",
    "link": "https://snoozer05.hatenablog.jp/entry/2025/06/01/091625",
    "published": "2025-06-02T03:32:02Z",
    "summary": "\u003cbody\u003e\u003cblockquote cite=\"https://snoozer05.hatenablog.jp/entry/2025/06/01/091625\" title=\"『エンジニアリング統括責任者の手引き―組織を成功に導く技術リーダーシップ』 - snoozer05's blog\"\u003e\u003ccite\u003e\u003cimg src=\"https://cdn-ak2.favicon.st-hatena.com/64?url=https%3A%2F%2Fsnoozer05.hatenablog.jp%2Fentry%2F2025%2F06%2F01%2F091625\" alt=\"\"\u003e\u003c/img\u003e \u003ca href=\"https://snoozer05.hatenablog.jp/entry/2025/06/01/091625\"\u003e『エンジニアリング統括責任者の手引き―組織を成功に導く技術リーダーシップ』 - snoozer05\u0026#39;s blog\u003c/a\u003e\u003c/cite\u003e\u003cp\u003e\u003ca href=\"https://snoozer05.hatenablog.jp/entry/2025/06/01/091625\"\u003e\u003cimg src=\"https://cdn-ak-scissors.b.st-hatena.com/image/square/8ff7cb3b95545249e4e29186da6fd4bb9f2a913f/height=90;version=1;width=120/https%3A%2F%2Fcdn.image.st-hatena.com%2Fimage%2Fscale%2F04f808d47f0257dae0963a9308351c4322838c7c%2Fbackend%3Dimagemagick%3Bversion%3D1%3Bwidth%3D1300%2Fhttps%253A%252F%252Fm.media-amazon.com%252Fimages%252FI%252F41eUKpvOp3L._SL500_.jpg\" alt=\"『エンジニアリング統括責任者の手引き―組織を成功に導く技術リーダーシップ』 - snoozer05's blog\" title=\"『エンジニアリング統括責任者の手引き―組織を成功に導く技術リーダーシップ』 - snoozer05's blog\" class=\"entry-image\"\u003e\u003c/img\u003e\u003c/a\u003e\u003c/p\u003e\u003cp\u003e翻訳を担当した書籍『エンジニアリング統括責任者の手引き ―組織を成功に導く技術リーダーシップ』（オライリー・ジャパン）が2025年6月3日に発売となります。 本書は、2024年3月に出版されたWill Larson著『The Engineering Executive\u0026#39;s Primer: Impactful Technical Leadership (English Edition)』（O\u0026#39;Reilly Media）...\u003c/p\u003e\u003cp\u003e\u003ca href=\"https://b.hatena.ne.jp/entry/s/snoozer05.hatenablog.jp/entry/2025/06/01/091625\"\u003e\u003cimg src=\"https://b.hatena.ne.jp/entry/image/https://snoozer05.hatenablog.jp/entry/2025/06/01/091625\" alt=\"はてなブックマーク - 『エンジニアリング統括責任者の手引き―組織を成功に導く技術リーダーシップ』 - snoozer05's blog\" title=\"はてなブックマーク - 『エンジニアリング統括責任者の手引き―組織を成功に導く技術リーダーシップ』 - snoozer05's blog\" border=\"0\" style=\"border: none\"\u003e\u003c/img\u003e\u003c/a\u003e \u003ca href=\"https://b.hatena.ne.jp/entry/s/snoozer05.hatenablog.jp/entry/2025/06/01/091625\"\u003e\u003cimg src=\"https://b.st-hatena.com/images/append.gif\" border=\"0\" alt=\"はてなブックマークに追加\" title=\"はてなブックマークに追加\"\u003e\u003c/img\u003e\u003c/a\u003e\u003c/p\u003e\u003c/blockquote\u003e\u003c/body\u003e",
    "source": "t-wadaのはてなブックマーク"
  },
  {
    "title": "Claude Code + Opus 4でmysql-schema-explorer-mcpの機能改善をしてみた - $shibayu36-\u003eblog;",
    "link": "https://blog.shibayu36.org/entry/2025/06/02/103000",
    "published": "2025-06-02T01:55:27Z",
    "summary": "\u003cbody\u003e\u003cblockquote cite=\"https://blog.shibayu36.org/entry/2025/06/02/103000\" title=\"Claude Code + Opus 4でmysql-schema-explorer-mcpの機能改善をしてみた - $shibayu36-\u003eblog;\"\u003e\u003ccite\u003e\u003cimg src=\"https://cdn-ak2.favicon.st-hatena.com/64?url=https%3A%2F%2Fblog.shibayu36.org%2Fentry%2F2025%2F06%2F02%2F103000\" alt=\"\"\u003e\u003c/img\u003e \u003ca href=\"https://blog.shibayu36.org/entry/2025/06/02/103000\"\u003eClaude Code + Opus 4でmysql-schema-explorer-mcpの機能改善をしてみた - $shibayu36-\u0026gt;blog;\u003c/a\u003e\u003c/cite\u003e\u003cp\u003e\u003ca href=\"https://blog.shibayu36.org/entry/2025/06/02/103000\"\u003e\u003cimg src=\"https://cdn-ak-scissors.b.st-hatena.com/image/square/a1e9ad7e55539cee1b8c932058bfd4f3d458fa68/height=90;version=1;width=120/https%3A%2F%2Fogimage.blog.st-hatena.com%2F13208692334729907814%2F6802418398454031565%2F1748827801\" alt=\"Claude Code + Opus 4でmysql-schema-explorer-mcpの機能改善をしてみた - $shibayu36-\u003eblog;\" title=\"Claude Code + Opus 4でmysql-schema-explorer-mcpの機能改善をしてみた - $shibayu36-\u003eblog;\" class=\"entry-image\"\u003e\u003c/img\u003e\u003c/a\u003e\u003c/p\u003e\u003cp\u003e一度ClaudeのMax Planで定額課金状態で、Claude Code + Opus 4を体験してみようと思い、https://github.com/shibayu36/mysql-schema-explorer-mcp で以下の2つをVibe codingしてみた。 e2eテスト作成 データベース固定モード機能開発 結論としては、この規模での開発の場合、ほぼほぼ自分がエディター上で開発をしなくて...\u003c/p\u003e\u003cp\u003e\u003ca href=\"https://b.hatena.ne.jp/entry/s/blog.shibayu36.org/entry/2025/06/02/103000\"\u003e\u003cimg src=\"https://b.hatena.ne.jp/entry/image/https://blog.shibayu36.org/entry/2025/06/02/103000\" alt=\"はてなブックマーク - Claude Code + Opus 4でmysql-schema-explorer-mcpの機能改善をしてみた - $shibayu36-\u003eblog;\" title=\"はてなブックマーク - Claude Code + Opus 4でmysql-schema-explorer-mcpの機能改善をしてみた - $shibayu36-\u003eblog;\" border=\"0\" style=\"border: none\"\u003e\u003c/img\u003e\u003c/a\u003e \u003ca href=\"https://b.hatena.ne.jp/entry/s/blog.shibayu36.org/entry/2025/06/02/103000\"\u003e\u003cimg src=\"https://b.st-hatena.com/images/append.gif\" border=\"0\" alt=\"はてなブックマークに追加\" title=\"はてなブックマークに追加\"\u003e\u003c/img\u003e\u003c/a\u003e\u003c/p\u003e\u003c/blockquote\u003e\u003c/body\u003e",
    "source": "t-wadaのはてなブックマーク"
  },
  {
    "title": "これから伸びるエンジニア職とは？ - AI時代に市場価値を高めるキャリア戦略 @エンジニア業界セミナー in 会津大学 - じゃあ、おうちで学べる",
    "link": "https://syu-m-5151.hatenablog.com/entry/2025/05/21/122752",
    "published": "2025-06-02T01:16:39Z",
    "summary": "\u003cbody\u003e\u003cblockquote cite=\"https://syu-m-5151.hatenablog.com/entry/2025/05/21/122752\" title=\"これから伸びるエンジニア職とは？ - AI時代に市場価値を高めるキャリア戦略 @エンジニア業界セミナー in 会津大学 - じゃあ、おうちで学べる\"\u003e\u003ccite\u003e\u003cimg src=\"https://cdn-ak2.favicon.st-hatena.com/64?url=https%3A%2F%2Fsyu-m-5151.hatenablog.com%2Fentry%2F2025%2F05%2F21%2F122752\" alt=\"\"\u003e\u003c/img\u003e \u003ca href=\"https://syu-m-5151.hatenablog.com/entry/2025/05/21/122752\"\u003eこれから伸びるエンジニア職とは？ - AI時代に市場価値を高めるキャリア戦略 @エンジニア業界セミナー in 会津大学 - じゃあ、おうちで学べる\u003c/a\u003e\u003c/cite\u003e\u003cp\u003e\u003ca href=\"https://syu-m-5151.hatenablog.com/entry/2025/05/21/122752\"\u003e\u003cimg src=\"https://cdn-ak-scissors.b.st-hatena.com/image/square/21e2b072f3e470b42c297143457015bcb3572387/height=90;version=1;width=120/https%3A%2F%2Fogimage.blog.st-hatena.com%2F8454420450094081900%2F6802418398432561553%2F1749000014\" alt=\"これから伸びるエンジニア職とは？ - AI時代に市場価値を高めるキャリア戦略 @エンジニア業界セミナー in 会津大学 - じゃあ、おうちで学べる\" title=\"これから伸びるエンジニア職とは？ - AI時代に市場価値を高めるキャリア戦略 @エンジニア業界セミナー in 会津大学 - じゃあ、おうちで学べる\" class=\"entry-image\"\u003e\u003c/img\u003e\u003c/a\u003e\u003c/p\u003e\u003cp\u003eこの記事で得られる3つのポイント 「つぶしが効く」エンジニアになる: 表面的な技術習得ではなく、根本原理の深い理解と問題解決能力が長期的な市場価値を創出する AI時代の新たな役割: テクノロジーと人間の強みを組み合わせ、AIとの効果的な協働を設計・実現できる「アーキテクト」としての視点 計画的偶発性の活用: ...\u003c/p\u003e\u003cp\u003e\u003ca href=\"https://b.hatena.ne.jp/entry/s/syu-m-5151.hatenablog.com/entry/2025/05/21/122752\"\u003e\u003cimg src=\"https://b.hatena.ne.jp/entry/image/https://syu-m-5151.hatenablog.com/entry/2025/05/21/122752\" alt=\"はてなブックマーク - これから伸びるエンジニア職とは？ - AI時代に市場価値を高めるキャリア戦略 @エンジニア業界セミナー in 会津大学 - じゃあ、おうちで学べる\" title=\"はてなブックマーク - これから伸びるエンジニア職とは？ - AI時代に市場価値を高めるキャリア戦略 @エンジニア業界セミナー in 会津大学 - じゃあ、おうちで学べる\" border=\"0\" style=\"border: none\"\u003e\u003c/img\u003e\u003c/a\u003e \u003ca href=\"https://b.hatena.ne.jp/entry/s/syu-m-5151.hatenablog.com/entry/2025/05/21/122752\"\u003e\u003cimg src=\"https://b.st-hatena.com/images/append.gif\" border=\"0\" alt=\"はてなブックマークに追加\" title=\"はてなブックマークに追加\"\u003e\u003c/img\u003e\u003c/a\u003e\u003c/p\u003e\u003c/blockquote\u003e\u003c/body\u003e",
    "source": "t-wadaのはてなブックマーク"
  },
  {
    "title": "コーディングエージェントの現状の整理とエンジニアの仕事の変化について",
    "link": "https://azukiazusa.dev/blog/coding-agents-and-developers-work/",
    "published": "2025-06-02T00:51:36Z",
    "summary": "\u003cbody\u003e\u003cblockquote cite=\"https://azukiazusa.dev/blog/coding-agents-and-developers-work/\" title=\"コーディングエージェントの現状の整理とエンジニアの仕事の変化について\"\u003e\u003ccite\u003e\u003cimg src=\"https://cdn-ak2.favicon.st-hatena.com/64?url=https%3A%2F%2Fazukiazusa.dev%2Fblog%2Fcoding-agents-and-developers-work%2F\" alt=\"\"\u003e\u003c/img\u003e \u003ca href=\"https://azukiazusa.dev/blog/coding-agents-and-developers-work/\"\u003eコーディングエージェントの現状の整理とエンジニアの仕事の変化について\u003c/a\u003e\u003c/cite\u003e\u003cp\u003e\u003ca href=\"https://azukiazusa.dev/blog/coding-agents-and-developers-work/\"\u003e\u003cimg src=\"https://cdn-ak-scissors.b.st-hatena.com/image/square/79a817d8d73a894093fb21bd5af7fba04c1364e7/height=90;version=1;width=120/https%3A%2F%2Fazukiazusa.dev%2Fblog%2Fogp%2Fcoding-agents-and-developers-work.png\" alt=\"コーディングエージェントの現状の整理とエンジニアの仕事の変化について\" title=\"コーディングエージェントの現状の整理とエンジニアの仕事の変化について\" class=\"entry-image\"\u003e\u003c/img\u003e\u003c/a\u003e\u003c/p\u003e\u003cp\u003eコーディングエージェントの現状の整理とエンジニアの仕事の変化について AI によるコーディングの支援はコード補完型からチャット型、そして自律型へと進化しています。この記事では現時点で主流となっているコーディングエージェントの種類とその特徴を整理したうえで、エンジニアの仕事の変化について考察します。 コ...\u003c/p\u003e\u003cp\u003e\u003ca href=\"https://b.hatena.ne.jp/entry/s/azukiazusa.dev/blog/coding-agents-and-developers-work/\"\u003e\u003cimg src=\"https://b.hatena.ne.jp/entry/image/https://azukiazusa.dev/blog/coding-agents-and-developers-work/\" alt=\"はてなブックマーク - コーディングエージェントの現状の整理とエンジニアの仕事の変化について\" title=\"はてなブックマーク - コーディングエージェントの現状の整理とエンジニアの仕事の変化について\" border=\"0\" style=\"border: none\"\u003e\u003c/img\u003e\u003c/a\u003e \u003ca href=\"https://b.hatena.ne.jp/entry/s/azukiazusa.dev/blog/coding-agents-and-developers-work/\"\u003e\u003cimg src=\"https://b.st-hatena.com/images/append.gif\" border=\"0\" alt=\"はてなブックマークに追加\" title=\"はてなブックマークに追加\"\u003e\u003c/img\u003e\u003c/a\u003e\u003c/p\u003e\u003c/blockquote\u003e\u003c/body\u003e",
    "source": "t-wadaのはてなブックマーク"
  },
  {
    "title": "On Enumerable's loveliness (and performance)",
    "link": "https://rubyweekly.com/issues/752",
    "published": "2025-05-29T00:00:00Z",
    "summary": "\u003cbody\u003e\u003c/body\u003e",
    "source": "Ruby Weekly"
  },
  {
    "title": "ソフトウェアテスト徹底指南書 | 技術評論社",
    "link": "https://gihyo.jp/book/2025/978-4-297-14909-3",
    "published": "2025-05-28T23:50:42Z",
    "summary": "\u003cbody\u003e\u003cblockquote cite=\"https://gihyo.jp/book/2025/978-4-297-14909-3\" title=\"ソフトウェアテスト徹底指南書 | 技術評論社\"\u003e\u003ccite\u003e\u003cimg src=\"https://cdn-ak2.favicon.st-hatena.com/64?url=https%3A%2F%2Fgihyo.jp%2Fbook%2F2025%2F978-4-297-14909-3\" alt=\"\"\u003e\u003c/img\u003e \u003ca href=\"https://gihyo.jp/book/2025/978-4-297-14909-3\"\u003eソフトウェアテスト徹底指南書 | 技術評論社\u003c/a\u003e\u003c/cite\u003e\u003cp\u003e\u003ca href=\"https://gihyo.jp/book/2025/978-4-297-14909-3\"\u003e\u003cimg src=\"https://cdn-ak-scissors.b.st-hatena.com/image/square/4815c62e1dddddd64c0000dd032dab5df8bb685d/height=90;version=1;width=120/https%3A%2F%2Fgihyo.jp%2Fassets%2Fimages%2Fogp%2F2025%2F9784297149093.jpg\" alt=\"ソフトウェアテスト徹底指南書 | 技術評論社\" title=\"ソフトウェアテスト徹底指南書 | 技術評論社\" class=\"entry-image\"\u003e\u003c/img\u003e\u003c/a\u003e\u003c/p\u003e\u003cp\u003e概要 本書を通して、ソフトウェアテストの知識・技術を体系的に学びます。そしてその中でテストによって次の課題にどのように対応していくか学び、現代的なソフトウェア開発に対応するため総合力・基礎力を強化します。 開発成功や顧客満足実現をどう支えるか 開発の高品質と高スピードの両立を支えるアプローチとは ア...\u003c/p\u003e\u003cp\u003e\u003ca href=\"https://b.hatena.ne.jp/entry/s/gihyo.jp/book/2025/978-4-297-14909-3\"\u003e\u003cimg src=\"https://b.hatena.ne.jp/entry/image/https://gihyo.jp/book/2025/978-4-297-14909-3\" alt=\"はてなブックマーク - ソフトウェアテスト徹底指南書 | 技術評論社\" title=\"はてなブックマーク - ソフトウェアテスト徹底指南書 | 技術評論社\" border=\"0\" style=\"border: none\"\u003e\u003c/img\u003e\u003c/a\u003e \u003ca href=\"https://b.hatena.ne.jp/entry/s/gihyo.jp/book/2025/978-4-297-14909-3\"\u003e\u003cimg src=\"https://b.st-hatena.com/images/append.gif\" border=\"0\" alt=\"はてなブックマークに追加\" title=\"はてなブックマークに追加\"\u003e\u003c/img\u003e\u003c/a\u003e\u003c/p\u003e\u003c/blockquote\u003e\u003c/body\u003e",
    "source": "t-wadaのはてなブックマーク"
  },
  {
    "title": "Why Cline Doesn't Index Your Codebase (And Why That's a Good Thing) - Cline Blog",
    "link": "https://cline.bot/blog/why-cline-doesnt-index-your-codebase-and-why-thats-a-good-thing",
    "published": "2025-05-28T05:43:38Z",
    "summary": "\u003cbody\u003e\u003cblockquote cite=\"https://cline.bot/blog/why-cline-doesnt-index-your-codebase-and-why-thats-a-good-thing\" title=\"Why Cline Doesn't Index Your Codebase (And Why That's a Good Thing) - Cline Blog\"\u003e\u003ccite\u003e\u003cimg src=\"https://cdn-ak2.favicon.st-hatena.com/64?url=https%3A%2F%2Fcline.bot%2Fblog%2Fwhy-cline-doesnt-index-your-codebase-and-why-thats-a-good-thing\" alt=\"\"\u003e\u003c/img\u003e \u003ca href=\"https://cline.bot/blog/why-cline-doesnt-index-your-codebase-and-why-thats-a-good-thing\"\u003eWhy Cline Doesn\u0026#39;t Index Your Codebase (And Why That\u0026#39;s a Good Thing) - Cline Blog\u003c/a\u003e\u003c/cite\u003e\u003cp\u003e\u003ca href=\"https://cline.bot/blog/why-cline-doesnt-index-your-codebase-and-why-thats-a-good-thing\"\u003e\u003cimg src=\"https://cdn-ak-scissors.b.st-hatena.com/image/square/46c52fe0b584c459f00fa1daf4291a39850c0645/height=90;version=1;width=120/https%3A%2F%2Fcline.ghost.io%2Fcontent%2Fimages%2F2025%2F05%2Fu9318423161_agentic_exploration_interpreted_in_nature_in_the__f9e6d262-0bd4-4b4e-902b-dafb91aed3cd_2.png\" alt=\"Why Cline Doesn't Index Your Codebase (And Why That's a Good Thing) - Cline Blog\" title=\"Why Cline Doesn't Index Your Codebase (And Why That's a Good Thing) - Cline Blog\" class=\"entry-image\"\u003e\u003c/img\u003e\u003c/a\u003e\u003c/p\u003e\u003cp\u003eWhy Cline Doesn\u0026#39;t Index Your Codebase (And Why That\u0026#39;s a Good Thing) Here\u0026#39;s a common question we get from prospective Cline users: \u0026#34;How does Cline handle large codebases? Do you use RAG to index everything?\u0026#34; It\u0026#39;s a reasonable question. Retrieval Augmented Generation (RAG) has become the go-to solu...\u003c/p\u003e\u003cp\u003e\u003ca href=\"https://b.hatena.ne.jp/entry/s/cline.bot/blog/why-cline-doesnt-index-your-codebase-and-why-thats-a-good-thing\"\u003e\u003cimg src=\"https://b.hatena.ne.jp/entry/image/https://cline.bot/blog/why-cline-doesnt-index-your-codebase-and-why-thats-a-good-thing\" alt=\"はてなブックマーク - Why Cline Doesn't Index Your Codebase (And Why That's a Good Thing) - Cline Blog\" title=\"はてなブックマーク - Why Cline Doesn't Index Your Codebase (And Why That's a Good Thing) - Cline Blog\" border=\"0\" style=\"border: none\"\u003e\u003c/img\u003e\u003c/a\u003e \u003ca href=\"https://b.hatena.ne.jp/entry/s/cline.bot/blog/why-cline-doesnt-index-your-codebase-and-why-thats-a-good-thing\"\u003e\u003cimg src=\"https://b.st-hatena.com/images/append.gif\" border=\"0\" alt=\"はてなブックマークに追加\" title=\"はてなブックマークに追加\"\u003e\u003c/img\u003e\u003c/a\u003e\u003c/p\u003e\u003c/blockquote\u003e\u003c/body\u003e",
    "source": "t-wadaのはてなブックマーク"
  },
  {
    "title": "Beyond Vibe Coding",
    "link": "https://learning.oreilly.com/library/view/beyond-vibe-coding/9798341634749/",
    "published": "2025-05-28T05:11:00Z",
    "summary": "\u003cbody\u003e\u003cblockquote cite=\"https://learning.oreilly.com/library/view/beyond-vibe-coding/9798341634749/\" title=\"Beyond Vibe Coding\"\u003e\u003ccite\u003e\u003cimg src=\"https://cdn-ak2.favicon.st-hatena.com/64?url=https%3A%2F%2Flearning.oreilly.com%2Flibrary%2Fview%2Fbeyond-vibe-coding%2F9798341634749%2F\" alt=\"\"\u003e\u003c/img\u003e \u003ca href=\"https://learning.oreilly.com/library/view/beyond-vibe-coding/9798341634749/\"\u003eBeyond Vibe Coding\u003c/a\u003e\u003c/cite\u003e\u003cp\u003e\u003ca href=\"https://learning.oreilly.com/library/view/beyond-vibe-coding/9798341634749/\"\u003e\u003cimg src=\"\" alt=\"Beyond Vibe Coding\" title=\"Beyond Vibe Coding\" class=\"entry-image\"\u003e\u003c/img\u003e\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003c/p\u003e\u003cp\u003e\u003ca href=\"https://b.hatena.ne.jp/entry/s/learning.oreilly.com/library/view/beyond-vibe-coding/9798341634749/\"\u003e\u003cimg src=\"https://b.hatena.ne.jp/entry/image/https://learning.oreilly.com/library/view/beyond-vibe-coding/9798341634749/\" alt=\"はてなブックマーク - Beyond Vibe Coding\" title=\"はてなブックマーク - Beyond Vibe Coding\" border=\"0\" style=\"border: none\"\u003e\u003c/img\u003e\u003c/a\u003e \u003ca href=\"https://b.hatena.ne.jp/entry/s/learning.oreilly.com/library/view/beyond-vibe-coding/9798341634749/\"\u003e\u003cimg src=\"https://b.st-hatena.com/images/append.gif\" border=\"0\" alt=\"はてなブックマークに追加\" title=\"はてなブックマークに追加\"\u003e\u003c/img\u003e\u003c/a\u003e\u003c/p\u003e\u003c/blockquote\u003e\u003c/body\u003e",
    "source": "t-wadaのはてなブックマーク"
  },
  {
    "title": "The Prompt Engineering Playbook for Programmers",
    "link": "https://addyo.substack.com/p/the-prompt-engineering-playbook-for",
    "published": "2025-05-27T23:55:35Z",
    "summary": "\u003cbody\u003e\u003cblockquote cite=\"https://addyo.substack.com/p/the-prompt-engineering-playbook-for\" title=\"The Prompt Engineering Playbook for Programmers\"\u003e\u003ccite\u003e\u003cimg src=\"https://cdn-ak2.favicon.st-hatena.com/64?url=https%3A%2F%2Faddyo.substack.com%2Fp%2Fthe-prompt-engineering-playbook-for\" alt=\"\"\u003e\u003c/img\u003e \u003ca href=\"https://addyo.substack.com/p/the-prompt-engineering-playbook-for\"\u003eThe Prompt Engineering Playbook for Programmers\u003c/a\u003e\u003c/cite\u003e\u003cp\u003e\u003ca href=\"https://addyo.substack.com/p/the-prompt-engineering-playbook-for\"\u003e\u003cimg src=\"https://cdn-ak-scissors.b.st-hatena.com/image/square/a7a51f1cdfc14b718b4a852fd8b12081024fa6ad/height=90;version=1;width=120/https%3A%2F%2Fsubstackcdn.com%2Fimage%2Ffetch%2Fw_1200%2Ch_600%2Cc_fill%2Cf_jpg%2Cq_auto%3Agood%2Cfl_progressive%3Asteep%2Cg_auto%2Fhttps%253A%252F%252Fsubstack-post-media.s3.amazonaws.com%252Fpublic%252Fimages%252F04b4358b-8b38-4e5b-8d99-22463ecb879e_5246x5246.png\" alt=\"The Prompt Engineering Playbook for Programmers\" title=\"The Prompt Engineering Playbook for Programmers\" class=\"entry-image\"\u003e\u003c/img\u003e\u003c/a\u003e\u003c/p\u003e\u003cp\u003eDevelopers are increasingly relying on AI coding assistants to accelerate our daily workflows. These tools can autocomplete functions, suggest bug fixes, and even generate entire modules or MVPs. Yet, as many of us have learned, the quality of the AI’s output depends largely on the quality of the...\u003c/p\u003e\u003cp\u003e\u003ca href=\"https://b.hatena.ne.jp/entry/s/addyo.substack.com/p/the-prompt-engineering-playbook-for\"\u003e\u003cimg src=\"https://b.hatena.ne.jp/entry/image/https://addyo.substack.com/p/the-prompt-engineering-playbook-for\" alt=\"はてなブックマーク - The Prompt Engineering Playbook for Programmers\" title=\"はてなブックマーク - The Prompt Engineering Playbook for Programmers\" border=\"0\" style=\"border: none\"\u003e\u003c/img\u003e\u003c/a\u003e \u003ca href=\"https://b.hatena.ne.jp/entry/s/addyo.substack.com/p/the-prompt-engineering-playbook-for\"\u003e\u003cimg src=\"https://b.st-hatena.com/images/append.gif\" border=\"0\" alt=\"はてなブックマークに追加\" title=\"はてなブックマークに追加\"\u003e\u003c/img\u003e\u003c/a\u003e\u003c/p\u003e\u003c/blockquote\u003e\u003c/body\u003e",
    "source": "t-wadaのはてなブックマーク"
  },
  {
    "title": "TypeScriptで実践するクリーンアーキテクチャ ― WebからもCLIからも使えるアプリ設計 / CClean Architecture with Typescript Application",
    "link": "https://speakerdeck.com/panda_program/clean-architecture-with-typescript-application",
    "published": "2025-05-23T09:27:13Z",
    "summary": "\u003cbody\u003e\u003cblockquote cite=\"https://speakerdeck.com/panda_program/clean-architecture-with-typescript-application\" title=\"TypeScriptで実践するクリーンアーキテクチャ ― WebからもCLIからも使えるアプリ設計 / CClean Architecture with Typescript Application\"\u003e\u003ccite\u003e\u003cimg src=\"https://cdn-ak2.favicon.st-hatena.com/64?url=https%3A%2F%2Fspeakerdeck.com%2Fpanda_program%2Fclean-architecture-with-typescript-application\" alt=\"\"\u003e\u003c/img\u003e \u003ca href=\"https://speakerdeck.com/panda_program/clean-architecture-with-typescript-application\"\u003eTypeScriptで実践するクリーンアーキテクチャ ― WebからもCLIからも使えるアプリ設計 / CClean Architecture with Typescript Application\u003c/a\u003e\u003c/cite\u003e\u003cp\u003e\u003ca href=\"https://speakerdeck.com/panda_program/clean-architecture-with-typescript-application\"\u003e\u003cimg src=\"https://cdn-ak-scissors.b.st-hatena.com/image/square/2b5d01b4564e884eda551d65d9f3bf7a1da2c0b1/height=90;version=1;width=120/https%3A%2F%2Ffiles.speakerdeck.com%2Fpresentations%2Fdf59fb7d99c8423192e1eb51026ab7bc%2Fslide_0.jpg%3F35185223\" alt=\"TypeScriptで実践するクリーンアーキテクチャ ― WebからもCLIからも使えるアプリ設計 / CClean Architecture with Typescript Application\" title=\"TypeScriptで実践するクリーンアーキテクチャ ― WebからもCLIからも使えるアプリ設計 / CClean Architecture with Typescript Application\" class=\"entry-image\"\u003e\u003c/img\u003e\u003c/a\u003e\u003c/p\u003e\u003cp\u003e本セッションでは、TypeScriptの型安全性と柔軟なモジュール設計を活かし、Web（Next.js）とCLI（inquirer.js）の両方から操作できるスクラム管理アプリをサンプルとした実践例を紹介します。 TypeScriptを選んだ理由は、強力な型システムとバックエンドとフロントエンドの…\u003c/p\u003e\u003cp\u003e\u003ca href=\"https://b.hatena.ne.jp/entry/s/speakerdeck.com/panda_program/clean-architecture-with-typescript-application\"\u003e\u003cimg src=\"https://b.hatena.ne.jp/entry/image/https://speakerdeck.com/panda_program/clean-architecture-with-typescript-application\" alt=\"はてなブックマーク - TypeScriptで実践するクリーンアーキテクチャ ― WebからもCLIからも使えるアプリ設計 / CClean Architecture with Typescript Application\" title=\"はてなブックマーク - TypeScriptで実践するクリーンアーキテクチャ ― WebからもCLIからも使えるアプリ設計 / CClean Architecture with Typescript Application\" border=\"0\" style=\"border: none\"\u003e\u003c/img\u003e\u003c/a\u003e \u003ca href=\"https://b.hatena.ne.jp/entry/s/speakerdeck.com/panda_program/clean-architecture-with-typescript-application\"\u003e\u003cimg src=\"https://b.st-hatena.com/images/append.gif\" border=\"0\" alt=\"はてなブックマークに追加\" title=\"はてなブックマークに追加\"\u003e\u003c/img\u003e\u003c/a\u003e\u003c/p\u003e\u003c/blockquote\u003e\u003c/body\u003e",
    "source": "t-wadaのはてなブックマーク"
  },
  {
    "title": "品質管理の歴史学 / Quality Management History",
    "link": "https://speakerdeck.com/nihonbuson/quality-management-history",
    "published": "2025-05-23T05:25:54Z",
    "summary": "\u003cbody\u003e\u003cblockquote cite=\"https://speakerdeck.com/nihonbuson/quality-management-history\" title=\"品質管理の歴史学 / Quality Management History\"\u003e\u003ccite\u003e\u003cimg src=\"https://cdn-ak2.favicon.st-hatena.com/64?url=https%3A%2F%2Fspeakerdeck.com%2Fnihonbuson%2Fquality-management-history\" alt=\"\"\u003e\u003c/img\u003e \u003ca href=\"https://speakerdeck.com/nihonbuson/quality-management-history\"\u003e品質管理の歴史学 / Quality Management History\u003c/a\u003e\u003c/cite\u003e\u003cp\u003e\u003ca href=\"https://speakerdeck.com/nihonbuson/quality-management-history\"\u003e\u003cimg src=\"https://cdn-ak-scissors.b.st-hatena.com/image/square/ba0e8eddbf1070b53582a3924571666c553c0437/height=90;version=1;width=120/https%3A%2F%2Ffiles.speakerdeck.com%2Fpresentations%2F2dc6ec0d5ba644ce86d36d4379fc6fbd%2Fslide_0.jpg%3F32881164\" alt=\"品質管理の歴史学 / Quality Management History\" title=\"品質管理の歴史学 / Quality Management History\" class=\"entry-image\"\u003e\u003c/img\u003e\u003c/a\u003e\u003c/p\u003e\u003cp\u003eWACATE 2024 冬での発表資料です。\u003c/p\u003e\u003cp\u003e\u003ca href=\"https://b.hatena.ne.jp/entry/s/speakerdeck.com/nihonbuson/quality-management-history\"\u003e\u003cimg src=\"https://b.hatena.ne.jp/entry/image/https://speakerdeck.com/nihonbuson/quality-management-history\" alt=\"はてなブックマーク - 品質管理の歴史学 / Quality Management History\" title=\"はてなブックマーク - 品質管理の歴史学 / Quality Management History\" border=\"0\" style=\"border: none\"\u003e\u003c/img\u003e\u003c/a\u003e \u003ca href=\"https://b.hatena.ne.jp/entry/s/speakerdeck.com/nihonbuson/quality-management-history\"\u003e\u003cimg src=\"https://b.st-hatena.com/images/append.gif\" border=\"0\" alt=\"はてなブックマークに追加\" title=\"はてなブックマークに追加\"\u003e\u003c/img\u003e\u003c/a\u003e\u003c/p\u003e\u003c/blockquote\u003e\u003c/body\u003e",
    "source": "t-wadaのはてなブックマーク"
  },
  {
    "title": "Announcing TypeScript Native Previews - TypeScript",
    "link": "https://devblogs.microsoft.com/typescript/announcing-typescript-native-previews/",
    "published": "2025-05-23T02:28:32Z",
    "summary": "\u003cbody\u003e\u003cblockquote cite=\"https://devblogs.microsoft.com/typescript/announcing-typescript-native-previews/\" title=\"Announcing TypeScript Native Previews - TypeScript\"\u003e\u003ccite\u003e\u003cimg src=\"https://cdn-ak2.favicon.st-hatena.com/64?url=https%3A%2F%2Fdevblogs.microsoft.com%2Ftypescript%2Fannouncing-typescript-native-previews%2F\" alt=\"\"\u003e\u003c/img\u003e \u003ca href=\"https://devblogs.microsoft.com/typescript/announcing-typescript-native-previews/\"\u003eAnnouncing TypeScript Native Previews - TypeScript\u003c/a\u003e\u003c/cite\u003e\u003cp\u003e\u003ca href=\"https://devblogs.microsoft.com/typescript/announcing-typescript-native-previews/\"\u003e\u003cimg src=\"https://cdn-ak-scissors.b.st-hatena.com/image/square/d2f407f17719f24497dee14a1c9a0432688c3a5a/height=90;version=1;width=120/https%3A%2F%2Fdevblogs.microsoft.com%2Ftypescript%2Fwp-content%2Fuploads%2Fsites%2F11%2F2018%2F08%2Ftypescriptfeature.png\" alt=\"Announcing TypeScript Native Previews - TypeScript\" title=\"Announcing TypeScript Native Previews - TypeScript\" class=\"entry-image\"\u003e\u003c/img\u003e\u003c/a\u003e\u003c/p\u003e\u003cp\u003eThis past March we unveiled our efforts to port the TypeScript compiler and toolset to native code. This port has achieved a 10x speed-up on most projects – not just by using a natively-compiled language (Go), but also through using shared memory parallelism and concurrency where we can benefit. ...\u003c/p\u003e\u003cp\u003e\u003ca href=\"https://b.hatena.ne.jp/entry/s/devblogs.microsoft.com/typescript/announcing-typescript-native-previews/\"\u003e\u003cimg src=\"https://b.hatena.ne.jp/entry/image/https://devblogs.microsoft.com/typescript/announcing-typescript-native-previews/\" alt=\"はてなブックマーク - Announcing TypeScript Native Previews - TypeScript\" title=\"はてなブックマーク - Announcing TypeScript Native Previews - TypeScript\" border=\"0\" style=\"border: none\"\u003e\u003c/img\u003e\u003c/a\u003e \u003ca href=\"https://b.hatena.ne.jp/entry/s/devblogs.microsoft.com/typescript/announcing-typescript-native-previews/\"\u003e\u003cimg src=\"https://b.st-hatena.com/images/append.gif\" border=\"0\" alt=\"はてなブックマークに追加\" title=\"はてなブックマークに追加\"\u003e\u003c/img\u003e\u003c/a\u003e\u003c/p\u003e\u003c/blockquote\u003e\u003c/body\u003e",
    "source": "t-wadaのはてなブックマーク"
  },
  {
    "title": "コードの寿命・データの寿命・互換性の寿命",
    "link": "https://zenn.dev/dmikurube/articles/life-of-code-life-of-data-life-of-compatibility",
    "published": "2025-05-23T02:14:16Z",
    "summary": "\u003cbody\u003e\u003cblockquote cite=\"https://zenn.dev/dmikurube/articles/life-of-code-life-of-data-life-of-compatibility\" title=\"コードの寿命・データの寿命・互換性の寿命\"\u003e\u003ccite\u003e\u003cimg src=\"https://cdn-ak2.favicon.st-hatena.com/64?url=https%3A%2F%2Fzenn.dev%2Fdmikurube%2Farticles%2Flife-of-code-life-of-data-life-of-compatibility\" alt=\"\"\u003e\u003c/img\u003e \u003ca href=\"https://zenn.dev/dmikurube/articles/life-of-code-life-of-data-life-of-compatibility\"\u003eコードの寿命・データの寿命・互換性の寿命\u003c/a\u003e\u003c/cite\u003e\u003cp\u003e\u003ca href=\"https://zenn.dev/dmikurube/articles/life-of-code-life-of-data-life-of-compatibility\"\u003e\u003cimg src=\"https://cdn-ak-scissors.b.st-hatena.com/image/square/0927819da89e830d6951fe08f2f6dfd3c9f36ae0/height=90;version=1;width=120/https%3A%2F%2Fres.cloudinary.com%2Fzenn%2Fimage%2Fupload%2Fs--EuH7NoXI--%2Fc_fit%252Cg_north_west%252Cl_text%3Anotosansjp-medium.otf_55%3A%2525E3%252582%2525B3%2525E3%252583%2525BC%2525E3%252583%252589%2525E3%252581%2525AE%2525E5%2525AF%2525BF%2525E5%252591%2525BD%2525E3%252583%2525BB%2525E3%252583%252587%2525E3%252583%2525BC%2525E3%252582%2525BF%2525E3%252581%2525AE%2525E5%2525AF%2525BF%2525E5%252591%2525BD%2525E3%252583%2525BB%2525E4%2525BA%252592%2525E6%25258F%25259B%2525E6%252580%2525A7%2525E3%252581%2525AE%2525E5%2525AF%2525BF%2525E5%252591%2525BD%252Cw_1010%252Cx_90%252Cy_100%2Fg_south_west%252Cl_text%3Anotosansjp-medium.otf_37%3ADai%252520MIKURUBE%252Cx_203%252Cy_121%2Fg_south_west%252Ch_90%252Cl_fetch%3AaHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2d2QnpTU015TnEwVExYTm1VVU5YcUc4b0hNaS1ScGdNZWUtSmptTVJvPXMyNTAtYw%3D%3D%252Cr_max%252Cw_90%252Cx_87%252Cy_95%2Fv1627283836%2Fdefault%2Fog-base-w1200-v2.png\" alt=\"コードの寿命・データの寿命・互換性の寿命\" title=\"コードの寿命・データの寿命・互換性の寿命\" class=\"entry-image\"\u003e\u003c/img\u003e\u003c/a\u003e\u003c/p\u003e\u003cp\u003eこれを記事にしている 2025 年 5 月の二年ほど前 (2023-06-02) に、縁あって明治大学 情報科学科での特別講義 [1] を担当させてもらいました。 身内の評判は悪くなかったのでスライドは公開していたんですが、単に Google Slides を公開状態にしただけだったんですね。 [2] これではあとから参照・引用するのも難しく、...\u003c/p\u003e\u003cp\u003e\u003ca href=\"https://b.hatena.ne.jp/entry/s/zenn.dev/dmikurube/articles/life-of-code-life-of-data-life-of-compatibility\"\u003e\u003cimg src=\"https://b.hatena.ne.jp/entry/image/https://zenn.dev/dmikurube/articles/life-of-code-life-of-data-life-of-compatibility\" alt=\"はてなブックマーク - コードの寿命・データの寿命・互換性の寿命\" title=\"はてなブックマーク - コードの寿命・データの寿命・互換性の寿命\" border=\"0\" style=\"border: none\"\u003e\u003c/img\u003e\u003c/a\u003e \u003ca href=\"https://b.hatena.ne.jp/entry/s/zenn.dev/dmikurube/articles/life-of-code-life-of-data-life-of-compatibility\"\u003e\u003cimg src=\"https://b.st-hatena.com/images/append.gif\" border=\"0\" alt=\"はてなブックマークに追加\" title=\"はてなブックマークに追加\"\u003e\u003c/img\u003e\u003c/a\u003e\u003c/p\u003e\u003c/blockquote\u003e\u003c/body\u003e",
    "source": "t-wadaのはてなブックマーク"
  },
  {
    "title": "More performance improvements coming to Ruby 3.5",
    "link": "https://rubyweekly.com/issues/751",
    "published": "2025-05-22T00:00:00Z",
    "summary": "\u003cbody\u003e\u003c/body\u003e",
    "source": "Ruby Weekly"
  },
  {
    "title": "Go Cryptography Security Audit",
    "link": "https://go.dev/blog/tob-crypto-audit",
    "published": "2025-05-19T00:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"blog\"\u003e\u003cdiv id=\"content\"\u003e\n  \u003cdiv id=\"content\"\u003e\n\n    \u003cdiv class=\"Article\" data-slug=\"/blog/tob-crypto-audit\"\u003e\n    \n    \u003ch1 class=\"small\"\u003e\u003ca href=\"/blog/\"\u003eThe Go Blog\u003c/a\u003e\u003c/h1\u003e\n    \n\n    \u003ch1\u003eGo Cryptography Security Audit\u003c/h1\u003e\n      \n      \u003cp class=\"author\"\u003e\n      Roland Shoemaker and Filippo Valsorda\u003cbr\u003e\u003c/br\u003e\n      19 May 2025\n      \u003c/p\u003e\n      \n      \u003cp\u003eGo ships with a full suite of cryptography packages in the standard library to help developers build secure applications. Google recently contracted the independent security firm \u003ca href=\"https://www.trailofbits.com/\" rel=\"noreferrer\" target=\"_blank\"\u003eTrail of Bits\u003c/a\u003e to complete an audit of the core set of packages that are also validated as part of the \u003ca href=\"/doc/go1.24#fips140\"\u003enew native FIPS 140-3 module\u003c/a\u003e. The audit produced a single low-severity finding, in the legacy and unsupported \u003ca href=\"/doc/security/fips140#goboringcrypto\"\u003eGo+BoringCrypto integration\u003c/a\u003e, and a handful of informational findings. The full text of the audit report can be found \u003ca href=\"https://github.com/trailofbits/publications/blob/d47e8fafa7e3323e5620d228f2f3f3bf58ed5978/reviews/2025-03-google-gocryptographiclibraries-securityreview.pdf\" rel=\"noreferrer\" target=\"_blank\"\u003ehere\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/body\u003e",
    "source": "The Go Blog"
  },
  {
    "title": "Differential Coverage for Debugging",
    "link": "http://research.swtch.com/diffcover",
    "published": "2025-04-25T15:40:00Z",
    "summary": "\u003cbody\u003e\u003cp\u003e\nI have been debugging some code I did not write and was reminded of this technique.\nI’m sure it’s a very old debugging technique (like \u003ca href=\"bisect\"\u003ebisection\u003c/a\u003e),\nbut it should be more widely known.\nSuppose you have one test case that’s failing.\nYou can get a sense of what code might be involved by comparing the code coverage\nof successful tests with the code coverage of the failing test.\n\n\u003c/p\u003e\u003cp\u003e\nFor example, I’ve inserted a bug into my development copy of \u003ccode\u003emath/big\u003c/code\u003e:\n\u003c/p\u003e\u003cpre\u003e$ \u003cb\u003ego test\u003c/b\u003e\n--- FAIL: TestAddSub (0.00s)\n    int_test.go:2020: addSub(-0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) = -0x0, -0x1fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe, want 0x0, -0x1fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe\nFAIL\nexit status 1\nFAIL\tmath/big\t7.528s\n$\n\u003c/pre\u003e\n\n\n\u003cp\u003e\nLet’s collect a passing and failing profile:\n\u003c/p\u003e\u003cpre\u003e$ \u003cb\u003ego test -coverprofile=c1.prof -skip=\u0026#39;TestAddSub$\u0026#39;\u003c/b\u003e\u003c/pre\u003e\u003c/body\u003e",
    "source": "research!rsc"
  },
  {
    "title": "More predictable benchmarking with testing.B.Loop",
    "link": "https://go.dev/blog/testing-b-loop",
    "published": "2025-04-02T00:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"blog\"\u003e\u003cdiv id=\"content\"\u003e\n  \u003cdiv id=\"content\"\u003e\n\n    \u003cdiv class=\"Article\" data-slug=\"/blog/testing-b-loop\"\u003e\n    \n    \u003ch1 class=\"small\"\u003e\u003ca href=\"/blog/\"\u003eThe Go Blog\u003c/a\u003e\u003c/h1\u003e\n    \n\n    \u003ch1\u003eMore predictable benchmarking with testing.B.Loop\u003c/h1\u003e\n      \n      \u003cp class=\"author\"\u003e\n      Junyang Shao\u003cbr\u003e\u003c/br\u003e\n      2 April 2025\n      \u003c/p\u003e\n      \n      \u003cp\u003eGo developers who have written benchmarks using the\n\u003ca href=\"https://pkg.go.dev/testing\" rel=\"noreferrer\" target=\"_blank\"\u003e\u003ccode\u003etesting\u003c/code\u003e\u003c/a\u003e package might have encountered some of\nits various pitfalls. Go 1.24 introduces a new way to write benchmarks that’s just\nas easy to use, but at the same time far more robust:\n\u003ca href=\"https://pkg.go.dev/testing#B.Loop\" rel=\"noreferrer\" target=\"_blank\"\u003e\u003ccode\u003etesting.B.Loop\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eTraditionally, Go benchmarks are written using a loop from 0 to \u003ccode\u003eb.N\u003c/code\u003e:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003efunc Benchmark(b *testing.B) {\n  for range b.N {\n    ... code to measure ...\n  }\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eUsing \u003ccode\u003eb.Loop\u003c/code\u003e instead is a trivial change:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003efunc Benchmark(b *testing.B) {\n  for b.Loop() {\n    ... code to measure ...\n  }\n}\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003e\u003ccode\u003etesting.B.Loop\u003c/code\u003e has many benefits:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eIt prevents unwanted compiler optimizations within the benchmark loop.\u003c/li\u003e\n\u003cli\u003eIt automatically excludes setup and cleanup code from benchmark timing.\u003c/li\u003e\n\u003cli\u003eCode can’t accidentally depend on the total number of iterations or the current\niteration.\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/body\u003e",
    "source": "The Go Blog"
  },
  {
    "title": "Goodbye core types - Hello Go as we know and love it!",
    "link": "https://go.dev/blog/coretypes",
    "published": "2025-03-26T00:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"blog\"\u003e\u003cdiv id=\"content\"\u003e\n  \u003cdiv id=\"content\"\u003e\n\n    \u003cdiv class=\"Article\" data-slug=\"/blog/coretypes\"\u003e\n    \n    \u003ch1 class=\"small\"\u003e\u003ca href=\"/blog/\"\u003eThe Go Blog\u003c/a\u003e\u003c/h1\u003e\n    \n\n    \u003ch1\u003eGoodbye core types - Hello Go as we know and love it!\u003c/h1\u003e\n      \n      \u003cp class=\"author\"\u003e\n      Robert Griesemer\u003cbr\u003e\u003c/br\u003e\n      26 March 2025\n      \u003c/p\u003e\n      \n      \u003cp\u003eThe Go 1.18 release introduced generics and with that a number of new features, including type parameters, type constraints, and new concepts such as type sets.\nIt also introduced the notion of a \u003cem\u003ecore type\u003c/em\u003e.\nWhile the former provide concrete new functionality, a core type is an abstract construct that was introduced\nfor expediency and to simplify dealing with generic operands (operands whose types are type parameters).\nIn the Go compiler, code that in the past relied on the \u003ca href=\"/ref/spec/#Underlying_types\"\u003eunderlying type\u003c/a\u003e of an operand,\nnow instead had to call a function computing the operand’s core type.\nIn the language spec, in many places we just needed to replace “underlying type” with “core type”.\nWhat’s not to like?\u003c/p\u003e\n\u003cp\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/body\u003e",
    "source": "The Go Blog"
  },
  {
    "title": "Traversal-resistant file APIs",
    "link": "https://go.dev/blog/osroot",
    "published": "2025-03-12T00:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"blog\"\u003e\u003cdiv id=\"content\"\u003e\n  \u003cdiv id=\"content\"\u003e\n\n    \u003cdiv class=\"Article\" data-slug=\"/blog/osroot\"\u003e\n    \n    \u003ch1 class=\"small\"\u003e\u003ca href=\"/blog/\"\u003eThe Go Blog\u003c/a\u003e\u003c/h1\u003e\n    \n\n    \u003ch1\u003eTraversal-resistant file APIs\u003c/h1\u003e\n      \n      \u003cp class=\"author\"\u003e\n      Damien Neil\u003cbr\u003e\u003c/br\u003e\n      12 March 2025\n      \u003c/p\u003e\n      \n      \u003cp\u003eA \u003cem\u003epath traversal vulnerability\u003c/em\u003e arises when an attacker can trick a program\ninto opening a file other than the one it intended.\nThis post explains this class of vulnerability,\nsome existing defenses against it, and describes how the new\n\u003ca href=\"/pkg/os#Root\"\u003e\u003ccode\u003eos.Root\u003c/code\u003e\u003c/a\u003e API added in Go 1.24 provides\na simple and robust defense against unintentional path traversal.\u003c/p\u003e\n\u003ch2 id=\"path-traversal-attacks\"\u003ePath traversal attacks\u003c/h2\u003e\n\u003cp\u003e“Path traversal” covers a number of related attacks following a common pattern:\nA program attempts to open a file in some known location, but an attacker causes\nit to open a file in a different location.\u003c/p\u003e\n\u003cp\u003eIf the attacker controls part of the filename, they may be able to use relative\ndirectory components (\u0026#34;..\u0026#34;) to escape the intended location:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003ef, err := os.Open(filepath.Join(trustedLocation, \u0026#34;../../../../etc/passwd\u0026#34;))\n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eOn Windows systems, some names have special meaning:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/body\u003e",
    "source": "The Go Blog"
  },
  {
    "title": "From unique to cleanups and weak: new low-level tools for efficiency",
    "link": "https://go.dev/blog/cleanups-and-weak",
    "published": "2025-03-06T00:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"blog\"\u003e\u003cdiv id=\"content\"\u003e\n  \u003cdiv id=\"content\"\u003e\n\n    \u003cdiv class=\"Article\" data-slug=\"/blog/cleanups-and-weak\"\u003e\n    \n    \u003ch1 class=\"small\"\u003e\u003ca href=\"/blog/\"\u003eThe Go Blog\u003c/a\u003e\u003c/h1\u003e\n    \n\n    \u003ch1\u003eFrom unique to cleanups and weak: new low-level tools for efficiency\u003c/h1\u003e\n      \n      \u003cp class=\"author\"\u003e\n      Michael Knyszek\u003cbr\u003e\u003c/br\u003e\n      6 March 2025\n      \u003c/p\u003e\n      \n      \u003cp\u003eIn \u003ca href=\"/blog/unique\"\u003elast year’s blog post\u003c/a\u003e about the \u003ccode\u003eunique\u003c/code\u003e package, we alluded\nto some new features then in proposal review, and we’re excited to share that as\nof Go 1.24 they are now available to all Go developers.\nThese new features are \u003ca href=\"https://pkg.go.dev/runtime#AddCleanup\" rel=\"noreferrer\" target=\"_blank\"\u003ethe \u003ccode\u003eruntime.AddCleanup\u003c/code\u003e\nfunction\u003c/a\u003e, which queues up a function to\nrun when an object is no longer reachable, and \u003ca href=\"https://pkg.go.dev/weak#Pointer\" rel=\"noreferrer\" target=\"_blank\"\u003ethe \u003ccode\u003eweak.Pointer\u003c/code\u003e\ntype\u003c/a\u003e, which safely points to an object without\npreventing it from being garbage collected.\nTogether, these two features are powerful enough to build your own \u003ccode\u003eunique\u003c/code\u003e\npackage!\nLet’s dig into what makes these features useful, and when to use them.\u003c/p\u003e\n\u003cp\u003eNote: these new features are advanced features of the garbage collector.\nIf you’re not already familiar with basic garbage collection concepts, we\nstrongly recommend reading the introduction of our \u003ca href=\"/doc/gc-guide#Introduction\"\u003e\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/body\u003e",
    "source": "The Go Blog"
  },
  {
    "title": "Faster Go maps with Swiss Tables",
    "link": "https://go.dev/blog/swisstable",
    "published": "2025-02-26T00:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"blog\"\u003e\u003cdiv id=\"content\"\u003e\n  \u003cdiv id=\"content\"\u003e\n\n    \u003cdiv class=\"Article\" data-slug=\"/blog/swisstable\"\u003e\n    \n    \u003ch1 class=\"small\"\u003e\u003ca href=\"/blog/\"\u003eThe Go Blog\u003c/a\u003e\u003c/h1\u003e\n    \n\n    \u003ch1\u003eFaster Go maps with Swiss Tables\u003c/h1\u003e\n      \n      \u003cp class=\"author\"\u003e\n      Michael Pratt\u003cbr\u003e\u003c/br\u003e\n      26 February 2025\n      \u003c/p\u003e\n      \n      \u003cp\u003eThe hash table is a central data structure in computer science, and it provides the implementation for the map type in many languages, including Go.\u003c/p\u003e\n\u003cp\u003eThe concept of a hash table was \u003ca href=\"https://spectrum.ieee.org/hans-peter-luhn-and-the-birth-of-the-hashing-algorithm\" rel=\"noreferrer\" target=\"_blank\"\u003efirst described\u003c/a\u003e by Hans Peter Luhn in 1953 in an internal IBM memo that suggested speeding up search by placing items into “buckets” and using a linked list for overflow when buckets already contain an item.\nToday we would call this a \u003ca href=\"https://en.wikipedia.org/wiki/Hash_table#Separate_chaining\" rel=\"noreferrer\" target=\"_blank\"\u003ehash table using chaining\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eIn 1954, Gene M. Amdahl, Elaine M. McGraw, and Arthur L. Samuel first used an “open addressing” scheme when programming the IBM 701.\nWhen a bucket already contains an item, the new item is placed in the next empty bucket.\nThis idea was formalized and published in 1957 by W. Wesley Peterson in \u003ca href=\"https://ieeexplore.ieee.org/document/5392733\" rel=\"noreferrer\" target=\"_blank\"\u003e“Addressing for Random-Access Storage”\u003c/a\u003e.\nToday we would call this a \u003ca href=\"https://en.wikipedia.org/wiki/Hash_table#Open_addressing\" rel=\"noreferrer\" target=\"_blank\"\u003e\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/body\u003e",
    "source": "The Go Blog"
  },
  {
    "title": "Testing concurrent code with testing/synctest",
    "link": "https://go.dev/blog/synctest",
    "published": "2025-02-19T00:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"blog\"\u003e\u003cdiv id=\"content\"\u003e\n  \u003cdiv id=\"content\"\u003e\n\n    \u003cdiv class=\"Article\" data-slug=\"/blog/synctest\"\u003e\n    \n    \u003ch1 class=\"small\"\u003e\u003ca href=\"/blog/\"\u003eThe Go Blog\u003c/a\u003e\u003c/h1\u003e\n    \n\n    \u003ch1\u003eTesting concurrent code with testing/synctest\u003c/h1\u003e\n      \n      \u003cp class=\"author\"\u003e\n      Damien Neil\u003cbr\u003e\u003c/br\u003e\n      19 February 2025\n      \u003c/p\u003e\n      \n      \u003cp\u003eOne of Go’s signature features is built-in support for concurrency.\nGoroutines and channels are simple and effective primitives for\nwriting concurrent programs.\u003c/p\u003e\n\u003cp\u003eHowever, testing concurrent programs can be difficult and error prone.\u003c/p\u003e\n\u003cp\u003eIn Go 1.24, we are introducing a new, experimental\n\u003ca href=\"/pkg/testing/synctest\"\u003e\u003ccode\u003etesting/synctest\u003c/code\u003e\u003c/a\u003e package\nto support testing concurrent code. This post will explain the motivation behind\nthis experiment, demonstrate how to use the synctest package, and discuss its potential future.\u003c/p\u003e\n\u003cp\u003eIn Go 1.24, the \u003ccode\u003etesting/synctest\u003c/code\u003e package is experimental and\nnot subject to the Go compatibility promise.\nIt is not visible by default.\nTo use it, compile your code with \u003ccode\u003eGOEXPERIMENT=synctest\u003c/code\u003e set in your environment.\u003c/p\u003e\n\u003ch2 id=\"testing-concurrent-programs-is-difficult\"\u003eTesting concurrent programs is difficult\u003c/h2\u003e\n\u003cp\u003eTo begin with, let us consider a simple example.\u003c/p\u003e\n\u003cp\u003eThe \u003ca href=\"/pkg/context#AfterFunc\"\u003e\u003ccode\u003econtext.AfterFunc\u003c/code\u003e\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/body\u003e",
    "source": "The Go Blog"
  },
  {
    "title": "Extensible Wasm Applications with Go",
    "link": "https://go.dev/blog/wasmexport",
    "published": "2025-02-13T00:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"blog\"\u003e\u003cdiv id=\"content\"\u003e\n  \u003cdiv id=\"content\"\u003e\n\n    \u003cdiv class=\"Article\" data-slug=\"/blog/wasmexport\"\u003e\n    \n    \u003ch1 class=\"small\"\u003e\u003ca href=\"/blog/\"\u003eThe Go Blog\u003c/a\u003e\u003c/h1\u003e\n    \n\n    \u003ch1\u003eExtensible Wasm Applications with Go\u003c/h1\u003e\n      \n      \u003cp class=\"author\"\u003e\n      Cherry Mui\u003cbr\u003e\u003c/br\u003e\n      13 February 2025\n      \u003c/p\u003e\n      \n      \u003cp\u003eGo 1.24 enhances its WebAssembly (Wasm) capabilities with the\naddition of the \u003ccode\u003ego:wasmexport\u003c/code\u003e directive and the ability to build a reactor\nfor WebAssembly System Interface (WASI).\nThese features enable Go developers to export Go functions to Wasm,\nfacilitating better integration with Wasm hosts and expanding the possibilities\nfor Go-based Wasm applications.\u003c/p\u003e\n\u003ch2 id=\"webassembly-and-the-webassembly-system-interface\"\u003eWebAssembly and the WebAssembly System Interface\u003c/h2\u003e\n\u003cp\u003e\u003ca href=\"https://webassembly.org/\" rel=\"noreferrer\" target=\"_blank\"\u003eWebAssembly (Wasm)\u003c/a\u003e is a binary instruction format\nthat was initially created for web browsers, providing the execution of\nhigh-performance, low-level code at speeds approaching native performance.\nSince then, Wasm’s utility has expanded, and it is now used in various\nenvironments beyond the browser.\nNotably, cloud providers offer services that directly execute Wasm\nexecutables, taking advantage of the\n\u003ca href=\"https://wasi.dev/\" rel=\"noreferrer\" target=\"_blank\"\u003e\u003c/a\u003e\u003c/p\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/body\u003e",
    "source": "The Go Blog"
  },
  {
    "title": "Go 1.24 is released!",
    "link": "https://go.dev/blog/go1.24",
    "published": "2025-02-11T00:00:00Z",
    "summary": "\u003cbody\u003e\u003cdiv id=\"blog\"\u003e\u003cdiv id=\"content\"\u003e\n  \u003cdiv id=\"content\"\u003e\n\n    \u003cdiv class=\"Article\" data-slug=\"/blog/go1.24\"\u003e\n    \n    \u003ch1 class=\"small\"\u003e\u003ca href=\"/blog/\"\u003eThe Go Blog\u003c/a\u003e\u003c/h1\u003e\n    \n\n    \u003ch1\u003eGo 1.24 is released!\u003c/h1\u003e\n      \n      \u003cp class=\"author\"\u003e\n      Junyang Shao, on behalf of the Go team\u003cbr\u003e\u003c/br\u003e\n      11 February 2025\n      \u003c/p\u003e\n      \n      \u003cp\u003eToday the Go team is excited to release Go 1.24,\nwhich you can get by visiting the \u003ca href=\"/dl/\"\u003edownload page\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eGo 1.24 comes with many improvements over Go 1.23. Here are some of the notable\nchanges; for the full list, refer to the \u003ca href=\"/doc/go1.24\"\u003erelease notes\u003c/a\u003e.\u003c/p\u003e\n\u003ch2 id=\"language-changes\"\u003eLanguage changes\u003c/h2\u003e\n\u003cp\u003eGo 1.24 now fully supports \u003ca href=\"/issue/46477\"\u003egeneric type aliases\u003c/a\u003e: a type alias\nmay be parameterized like a defined type.\nSee the \u003ca href=\"/ref/spec#Alias_declarations\"\u003elanguage spec\u003c/a\u003e for details.\u003c/p\u003e\n\u003ch2 id=\"performance-improvements\"\u003ePerformance improvements\u003c/h2\u003e\n\u003cp\u003eSeveral performance improvements in the runtime have decreased CPU overhead\nby 2–3% on average across a suite of representative benchmarks. These\nimprovements include a new builtin \u003ccode\u003emap\u003c/code\u003e implementation based on\n\u003ca href=\"https://abseil.io/about/design/swisstables\" rel=\"noreferrer\" target=\"_blank\"\u003eSwiss Tables\u003c/a\u003e, more efficient\nmemory allocation of small objects, and a new runtime-internal mutex\nimplementation.\u003c/p\u003e\n\u003ch2 id=\"tool-improvements\"\u003eTool improvements\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eThe \u003ccode\u003ego\u003c/code\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/body\u003e",
    "source": "The Go Blog"
  },
  {
    "title": "Hash-Based Bisect Debugging in Compilers and Runtimes",
    "link": "http://research.swtch.com/bisect",
    "published": "2024-07-18T14:18:53Z",
    "summary": "\u003cbody\u003e\u003ca class=\"anchor\" href=\"#setting_the_stage\"\u003e\u003ch2 id=\"setting_the_stage\"\u003eSetting the Stage\u003c/h2\u003e\u003c/a\u003e\n\n\n\u003cp\u003e\nDoes this sound familar?\nYou make a change to a library to optimize its performance\nor clean up technical debt\nor fix a bug,\nonly to get a bug report:\nsome very large, incomprehensibly opaque test\nis now failing.\nOr you add a new compiler optimization with a similar result.\nNow you have a major debugging job\nin an unfamiliar code base.\n\n\u003c/p\u003e\u003cp\u003e\nWhat if I told you that a magic wand exists\nthat can pinpoint the relevant line of code or call stack\nin that unfamiliar code base?\nIt exists.\nIt is a real tool, and I’m going to show it to you.\nThis description might seem a bit over the top,\nbut every time I use this tool, it really does feel like magic.\nNot just any magic either, but the best kind of magic:\ndelightful to watch even when you know exactly how it works.\n\u003ca class=\"anchor\" href=\"#binary_search_and_bisecting_data\"\u003e\u003c/a\u003e\u003c/p\u003e\u003ch2 id=\"binary_search_and_bisecting_data\"\u003e\u003ca class=\"anchor\" href=\"#binary_search_and_bisecting_data\"\u003eBinary Search and Bisecting Data\u003c/a\u003e\u003c/h2\u003e\n\n\n\u003cp\u003e\u003c/p\u003e\u003cpre\u003e\u003c/pre\u003e\u003c/body\u003e",
    "source": "research!rsc"
  },
  {
    "title": "The xz attack shell script",
    "link": "http://research.swtch.com/xz-script",
    "published": "2024-04-02T08:00:00Z",
    "summary": "\u003cbody\u003e\u003ca class=\"anchor\" href=\"#introduction\"\u003e\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\u003c/a\u003e\n\n\n\u003cp\u003e\nAndres Freund \u003ca href=\"https://www.openwall.com/lists/oss-security/2024/03/29/4\"\u003epublished the existence of the xz attack\u003c/a\u003e on 2024-03-29 to the public oss-security@openwall mailing list. The day before, he alerted Debian security and the (private) distros@openwall list. In his mail, he says that he dug into this after “observing a few odd symptoms around liblzma (part of the xz package) on Debian sid installations over the last weeks (logins with ssh taking a lot of CPU, valgrind errors).”\n\n\u003c/p\u003e\u003cp\u003e\nAt a high level, the attack is split in two pieces: a shell script and an object file. There is an injection of shell code during \u003ccode\u003econfigure\u003c/code\u003e, which injects the shell code into \u003ccode\u003emake\u003c/code\u003e. The shell code during \u003ccode\u003emake\u003c/code\u003e adds the object file to the build. This post examines the shell script. (See also \u003ca href=\"xz-timeline\"\u003emy timeline post\u003c/a\u003e.)\n\n\u003c/p\u003e\u003cp\u003e\nThe nefarious object file would have looked suspicious checked into the repository as \u003ccode\u003eevil.o\u003c/code\u003e\u003c/p\u003e\u003cp\u003e\u003c/p\u003e\u003cp\u003e\u003c/p\u003e\u003ch2 id=\"configure\"\u003e\u003ca class=\"anchor\" href=\"#configure\"\u003e\u003c/a\u003e\u003c/h2\u003e\u003c/body\u003e",
    "source": "research!rsc"
  },
  {
    "title": "Timeline of the xz open source attack",
    "link": "http://research.swtch.com/xz-timeline",
    "published": "2024-04-02T03:23:00Z",
    "summary": "\u003cbody\u003e\u003cp\u003e\nOver a period of over two years, an attacker using the name “Jia Tan”\nworked as a diligent, effective contributor to the xz compression library,\neventually being granted commit access and maintainership.\nUsing that access, they installed a very subtle, carefully hidden backdoor into liblzma,\na part of xz that also happens to be a dependency of OpenSSH sshd\non Debian, Ubuntu, and Fedora, and other systemd-based Linux systems that patched sshd to link libsystemd.\n(Note that this does not include systems like Arch Linux, Gentoo, and NixOS, which do not patch sshd.)\nThat backdoor watches for the attacker sending hidden commands at the start of an SSH session,\ngiving the attacker the ability to run an arbitrary command on the target system without logging in:\nunauthenticated, targeted remote code execution.\n\n\u003c/p\u003e\u003cp\u003e\nThe attack was \u003ca href=\"https://www.openwall.com/lists/oss-security/2024/03/29/4\"\u003epublicly disclosed on March 29, 2024\u003c/a\u003e\u003c/p\u003e\u003cp\u003e\u003c/p\u003e\u003cp\u003e\u003c/p\u003e\u003ch2 id=\"prologue\"\u003e\u003ca class=\"anchor\" href=\"#prologue\"\u003e\u003c/a\u003e\u003c/h2\u003e\u003c/body\u003e",
    "source": "research!rsc"
  },
  {
    "title": "Microblog: TestMain can cause one to question reality",
    "link": "https://dave.cheney.net/2024/02/22/microblog-testmain-can-cause-one-to-question-reality",
    "published": "2024-02-21T21:04:26Z",
    "summary": "\u003cbody\u003e\u003cp\u003eThis morning a one line change had several of us tearing up the fabric of reality trying to understand why a failing test wasn’t failing, or, in fact, being run at all. Increasingly frantic efforts to upgrade/downgrade Go, run the tests on another machine, run the tests in CI, all served to only unnerve us further.\u003c/p\u003e\n\n\n\n\u003cp\u003eCan you spot the bug?\u003c/p\u003e\n\n\n\n\u003cpre class=\"wp-block-code\"\u003e\u003ccode\u003epackage gosh_darn_important_test\n\nimport (\n    \u0026#34;testing\u0026#34;\n    \u0026#34;go.uber.org/goleak\u0026#34;\n)\n\nfunc TestMain(m *testing.M) {\n//\tgoleak.VerifyTestMain(m)\n}\n\n...\u003c/code\u003e\u003c/pre\u003e\n\n\n\n\u003cp\u003e\u003ccode\u003eTestMain\u003c/code\u003e is intended to be a middleware (so to speak) between the \u003ccode\u003ego test\u003c/code\u003e test runner and the \u003ccode\u003eTest\u003c/code\u003e functions in a package. The \u003ccode\u003egoleak\u003c/code\u003e check had recently been commented out (not surprisingly because of yet another logging library that spawns goroutines in the background) which meant that \u003ccode\u003eTestMain\u003c/code\u003e no longer called, indirectly, \u003ccode\u003em.Run\u003c/code\u003e to execute any tests.\u003c/p\u003e\n\u003c/body\u003e",
    "source": "Dave Cheney"
  },
  {
    "title": "Go Changes",
    "link": "http://research.swtch.com/gochanges",
    "published": "2023-12-08T17:00:00Z",
    "summary": "\u003cbody\u003e\u003cp\u003e\nI opened GopherCon (USA) in October with the talk “Go Changes”,\nwhich looked at how Go evolves, the importance of data in making shared decisions,\nand why opt-in telemetry in the Go toolchain\nis a useful, effective, and appropriate new source of data.\n\n\u003c/p\u003e\u003cp\u003e\nI re-recorded it at home and have posted it here:\n\u003c/p\u003e\u003cdiv style=\"border: 1px solid black; margin: auto; margin-top: 1em; margin-bottom: 1em; width:560px; height:315px;\"\u003e\n\u003ciframe width=\"560\" height=\"315\" src=\"https://www.youtube-nocookie.com/embed/BNmxtp26I5s?si=3ZpIWEA72ehzJrVO\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen=\"\"\u003e\u003c/iframe\u003e\n\u003c/div\u003e\n\n\n\u003cp\u003e\nLinks:\n\u003c/p\u003e\u003cul\u003e\n\u003cli\u003e\n\u003ca href=\"https://go.dev/s/proposal\"\u003eThe Go Proposal Process\u003c/a\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003ca href=\"sample\"\u003eThe Magic of Sampling\u003c/a\u003e\n\u003c/li\u003e\u003cli\u003e\n\u003ca href=\"telemetry\"\u003eGo Telemetry Blog Posts\u003c/a\u003e\u003c/li\u003e\u003c/ul\u003e\n\n\n\u003cp\u003e\nErrata:\n\u003c/p\u003e\u003cul\u003e\n\u003cli\u003e\nThere is a mistake in the probability discussion: (2/3)\u003csup\u003e100\u003c/sup\u003e is about 2.46×10\u003csup\u003e–18\u003c/sup\u003e, not 1.94×10\u003csup\u003e–48\u003c/sup\u003e. The latter is (1/3)\u003csup\u003e100\u003c/sup\u003e. The probability of pulling 100 gophers without getting the third color remains vanishingly small. Apologies for the mistake.\u003c/li\u003e\u003c/ul\u003e\n\n\u003c/body\u003e",
    "source": "research!rsc"
  },
  {
    "title": "Go Testing By Example",
    "link": "http://research.swtch.com/testing",
    "published": "2023-12-05T13:00:00Z",
    "summary": "\u003cbody\u003e\u003cp\u003e\nI opened GopherCon Australia in early November with the talk “Go Testing By Example”.\nBeing the first talk, there were some A/V issues, so I re-recorded it at home and have posted it here:\n\u003c/p\u003e\u003cdiv style=\"border: 1px solid black; margin: auto; margin-top: 1em; margin-bottom: 1em; width:560px; height:315px;\"\u003e\n\u003ciframe width=\"560\" height=\"315\" src=\"https://www.youtube-nocookie.com/embed/X4rxi9jStLo?si=DJiEGUPNxPlYnlWL\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen=\"\"\u003e\u003c/iframe\u003e\n\u003c/div\u003e\n\n\n\u003cp\u003e\nHere are the 20 tips from the talk:\n\u003c/p\u003e\u003col\u003e\n\u003cli\u003e\nMake it easy to add new test cases.\n\u003c/li\u003e\u003cli\u003e\nUse test coverage to find untested code.\n\u003c/li\u003e\u003cli\u003e\nCoverage is no substitute for thought.\n\u003c/li\u003e\u003cli\u003e\nWrite exhaustive tests.\n\u003c/li\u003e\u003cli\u003e\nSeparate test cases from test logic.\n\u003c/li\u003e\u003cli\u003e\nLook for special cases.\n\u003c/li\u003e\u003cli\u003e\nIf you didn’t add a test, you didn’t fix the bug.\n\u003c/li\u003e\u003cli\u003e\nNot everything fits in a table.\n\u003c/li\u003e\u003cli\u003e\nTest cases can be in testdata files.\n\u003c/li\u003e\u003cli\u003e\nCompare against other implementations.\n\u003c/li\u003e\u003cli\u003e\nMake test failures readable.\n\u003c/li\u003e\u003cli\u003e\nIf the answer can change, write code to update them.\n\u003c/li\u003e\u003cli\u003e\nUse \u003ca href=\"https://pkg.go.dev/golang.org/x/tools/txtar\"\u003etxtar\u003c/a\u003e for multi-file test cases.\n\u003c/li\u003e\u003cli\u003e\nAnnotate existing formats to create testing mini-languages.\n\u003c/li\u003e\u003cli\u003e\nWrite parsers and printers to simplify tests.\n\u003c/li\u003e\u003cli\u003e\nCode quality is limited by test quality.\n\u003c/li\u003e\u003cli\u003e\nScripts make good tests.\n\u003c/li\u003e\u003cli\u003e\nTry \u003ca href=\"https://pkg.go.dev/rsc.io/script\"\u003ersc.io/script\u003c/a\u003e for your own script-based test cases.\n\u003c/li\u003e\u003cli\u003e\nImprove your tests over time.\n\u003c/li\u003e\u003cli\u003e\u003c/li\u003e\u003c/ol\u003e\u003c/body\u003e",
    "source": "research!rsc"
  },
  {
    "title": "Open Source Supply Chain Security at Google",
    "link": "http://research.swtch.com/acmscored",
    "published": "2023-11-30T09:10:00Z",
    "summary": "\u003cbody\u003e\u003cp\u003e\nI was a remote opening keynote speaker at \u003ca href=\"https://scored.dev/\"\u003eACM SCORED 2023\u003c/a\u003e, which we decided meant that I sent a video to play and I was on Discord during the talk for attendees to text directly with question as the video played, and then we did some live but still remote Q\u0026amp;A after the talk.\n\n\u003c/p\u003e\u003cp\u003e\nMy talk was titled “Open Source Supply Chain Security at Google” and was 45 minutes long. I spent a while at the start defining open source supply chain security and a while at the end on comparisons with the 1970s. In between, I talked about various supply chain-related efforts at Google. All the Google efforts mentioned in the talk have been publicly discussed elsewhere and are linked below.\n\u003c/p\u003e\u003cdiv style=\"border: 1px solid black; margin: auto; margin-top: 1em; margin-bottom: 1em; width:560px; height:315px;\"\u003e\n\u003ciframe width=\"560\" height=\"315\" src=\"https://www.youtube-nocookie.com/embed/6H-V-0oQvCA?si=mprcItvmNMw5QnR0\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen=\"\"\u003e\u003c/iframe\u003e\n\u003c/div\u003e\n\n\n\u003cp\u003e\nHere are the \u003ca href=\"https://youtu.be/6H-V-0oQvCA\"\u003etalk video\u003c/a\u003e and \u003ca href=\"acmscored.pdf\"\u003etalk slides\u003c/a\u003e.  Opinions expressed in the talk about languages and the last half century of supply chain security are mine, not Google’s.\n\n\u003c/p\u003e\u003cp\u003e\nReferences or acknowledgements for the slides:\n\u003c/p\u003e\u003cul\u003e\n\u003cli\u003e\nCrypto AG: \u003ca href=\"https://www.theguardian.com/us-news/2020/feb/11/crypto-ag-cia-bnd-germany-intelligence-report\"\u003eGuardian\u003c/a\u003e and \u003ca href=\"https://www.washingtonpost.com/graphics/2020/world/national-security/cia-crypto-encryption-machines-espionage/\"\u003eWashington Post\u003c/a\u003e\n\u003c/li\u003e\u003cli\u003e\u003c/li\u003e\u003cli\u003e\u003c/li\u003e\u003cli\u003e\u003c/li\u003e\u003cli\u003e\u003c/li\u003e\u003cli\u003e\u003c/li\u003e\u003cli\u003e\u003c/li\u003e\u003cli\u003e\u003c/li\u003e\u003cli\u003e\u003c/li\u003e\u003cli\u003e\u003c/li\u003e\u003cli\u003e\u003c/li\u003e\u003cli\u003e\u003c/li\u003e\u003cli\u003e\u003c/li\u003e\u003cli\u003e\u003c/li\u003e\u003cli\u003e\u003c/li\u003e\u003cli\u003e\u003c/li\u003e\u003cli\u003e\u003c/li\u003e\u003cli\u003e\u003c/li\u003e\u003cli\u003e\u003c/li\u003e\u003cli\u003e\u003c/li\u003e\u003cli\u003e\u003c/li\u003e\u003cli\u003e\u003c/li\u003e\u003cli\u003e\u003c/li\u003e\u003cli\u003e\u003c/li\u003e\u003cli\u003e\u003c/li\u003e\u003cli\u003e\u003c/li\u003e\u003cli\u003e\u003c/li\u003e\u003cli\u003e\u003c/li\u003e\u003cli\u003e\u003c/li\u003e\u003cli\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/body\u003e",
    "source": "research!rsc"
  },
  {
    "title": "Running the “Reflections on Trusting Trust” Compiler",
    "link": "http://research.swtch.com/nih",
    "published": "2023-10-26T01:00:00Z",
    "summary": "\u003cbody\u003e\u003cp\u003e\nSupply chain security is a hot topic today, but it is a very old problem.\nIn October 1983, 40 years ago this week,\nKen Thompson chose supply chain security as the topic for his Turing award lecture,\nalthough the specific term wasn’t used back then.\n(The field of computer science was still young and small enough that the ACM conference where Ken spoke was\nthe “Annual Conference on Computers.”)\nKen’s lecture was later published in \u003ci\u003eCommunications of the ACM\u003c/i\u003e\nunder the title “\u003ca href=\"https://dl.acm.org/doi/pdf/10.1145/358198.358210\"\u003eReflections on Trusting Trust\u003c/a\u003e.”\nIt is a classic paper, and a short one (3 pages);\nif you haven’t read it yet, you should. This post will still be here when you get back.\n\u003c/p\u003e\n\n\u003cp\u003e\nIn the lecture, Ken explains in three steps how to modify a C compiler binary\nto insert a backdoor when compiling the “login” program,\nleaving no trace in the source code.\nIn this post, we will run the backdoored compiler using Ken’s actual code.\nBut first, a brief summary of the important parts of the lecture.\n\u003c/p\u003e\n\n\u003ca class=\"anchor\" href=\"#step1\"\u003e\u003ch2 id=\"step1\"\u003e\u003c/h2\u003e\u003c/a\u003e\u003c/body\u003e",
    "source": "research!rsc"
  },
  {
    "title": "C and C++ Prioritize Performance over Correctness",
    "link": "http://research.swtch.com/ub",
    "published": "2023-08-18T16:00:00Z",
    "summary": "\u003cbody\u003e\u003cp\u003e\nThe original ANSI C standard, C89, introduced the concept of “undefined behavior,”\nwhich was used both to describe the effect of outright bugs like\naccessing memory in a freed object\nand also to capture the fact that existing implementations differed about\nhandling certain aspects of the language,\nincluding use of uninitialized values,\nsigned integer overflow, and null pointer handling.\n\n\u003c/p\u003e\u003cp\u003e\nThe C89 spec defined undefined behavior (in section 1.6) as:\u003c/p\u003e\u003cblockquote\u003e\n\n\u003cp\u003e\u003c/p\u003e\u003c/blockquote\u003e\u003c/body\u003e",
    "source": "research!rsc"
  },
  {
    "title": "Coroutines for Go",
    "link": "http://research.swtch.com/coro",
    "published": "2023-07-17T18:00:00Z",
    "summary": "\u003cbody\u003e\u003cp\u003e\nThis post is about why we need a coroutine package for Go, and what it would look like.\nBut first, what are coroutines?\n\n\u003c/p\u003e\u003cp\u003e\nEvery programmer today is familiar with function calls (subroutines):\nF calls G, which stops F and runs G.\nG does its work, potentially calling and waiting for other functions, and eventually returns.\nWhen G returns, G is gone and F continues running.\nIn this pattern, only one function is running at a time,\nwhile its callers wait, all the way up the call stack.\n\n\u003c/p\u003e\u003cp\u003e\nIn contrast to subroutines, coroutines run concurrently on different stacks,\nbut it’s still true that only one is running at a time,\nwhile its caller waits.\nF starts G, but G does not run immediately.\nInstead, F must explicitly \u003ci\u003eresume\u003c/i\u003e G, which then starts running.\nAt any point, G may turn around and \u003ci\u003eyield\u003c/i\u003e\u003c/p\u003e\u003cp\u003e\u003c/p\u003e\u003ch2 id=\"lua\"\u003e\u003ca class=\"anchor\" href=\"#lua\"\u003e\u003c/a\u003e\u003c/h2\u003e\u003c/body\u003e",
    "source": "research!rsc"
  },
  {
    "title": "The Magic of Sampling, and its Limitations",
    "link": "http://research.swtch.com/sample",
    "published": "2023-02-04T17:00:00Z",
    "summary": "\u003cbody\u003e\u003cp\u003e\nSuppose I have a large number of M\u0026amp;Ms\nand want to estimate what fraction of them have \u003ca href=\"https://spinroot.com/pjw\"\u003ePeter’s face\u003c/a\u003e on them.\nAs one does.\n\n\u003c/p\u003e\u003cp\u003e\n\u003cimg name=\"sample-pjw1\" class=\"center pad resizable\" width=\"450\" height=\"276\" src=\"sample-pjw1.jpg\" srcset=\"sample-pjw1.jpg 1x, sample-pjw1@2x.jpg 2x, sample-pjw1@4x.jpg 4x\"\u003e\u003c/img\u003e\n\n\u003c/p\u003e\u003cp\u003e\nIf I am too lazy to count them all, I can estimate the true fraction using sampling:\npick N at random, count how many P have Peter’s face, and then estimate\nthe fraction to be P/N.\n\n\u003c/p\u003e\u003cp\u003e\nI can \u003ca href=\"https://go.dev/play/p/GQr6ShQ_ivG\"\u003ewrite a Go program\u003c/a\u003e to pick 10 of the 37 M\u0026amp;Ms for me: 27 30 1 13 36 5 33 7 10 19.\n(Yes, I am too lazy to count them, but I was not too lazy to number the M\u0026amp;Ms in order to use the Go program.)\n\n\u003c/p\u003e\u003cp\u003e\n\u003cimg name=\"sample-pjw2\" class=\"center pad resizable\" width=\"450\" height=\"73\" src=\"sample-pjw2.jpg\" srcset=\"sample-pjw2.jpg 1x, sample-pjw2@2x.jpg 2x, sample-pjw2@4x.jpg 4x\"\u003e\u003c/img\u003e\n\n\u003c/p\u003e\u003cp\u003e\nBased on this estimate, we can estimate that 3/10 = 30% of my M\u0026amp;Ms have Peter’s face.\nWe can do it a few more times:\n\n\u003c/p\u003e\u003cp\u003e\n\u003cimg name=\"sample-pjw3\" class=\"center pad resizable\" width=\"450\" height=\"64\" src=\"sample-pjw3.jpg\" srcset=\"sample-pjw3.jpg 1x, sample-pjw3@2x.jpg 2x, sample-pjw3@4x.jpg 4x\"\u003e\u003c/img\u003e\n\n\u003c/p\u003e\u003cp\u003e\n\u003cimg name=\"sample-pjw4\" class=\"center pad resizable\" width=\"450\" height=\"61\" src=\"sample-pjw4.jpg\" srcset=\"sample-pjw4.jpg 1x, sample-pjw4@2x.jpg 2x, sample-pjw4@4x.jpg 4x\"\u003e\u003c/img\u003e\n\n\u003c/p\u003e\u003cp\u003e\n\u003cimg name=\"sample-pjw5\" class=\"center pad resizable\" width=\"450\" height=\"73\" src=\"sample-pjw5.jpg\" srcset=\"sample-pjw5.jpg 1x, sample-pjw5@2x.jpg 2x, sample-pjw5@4x.jpg 4x\"\u003e\u003c/img\u003e\n\n\u003c/p\u003e\u003cp\u003e\u003c/p\u003e\u003cpre\u003e\u003c/pre\u003e\u003c/body\u003e",
    "source": "research!rsc"
  },
  {
    "title": "A few bytes here, a few there, pretty soon you’re talking real memory",
    "link": "https://dave.cheney.net/2021/01/05/a-few-bytes-here-a-few-there-pretty-soon-youre-talking-real-memory",
    "published": "2021-01-05T12:39:20Z",
    "summary": "\u003cbody\u003e\u003cp\u003eToday’s post comes from a recent Go pop quiz. Consider this benchmark fragment.\u003cspan id=\"easy-footnote-1-4231\" class=\"easy-footnote-margin-adjust\"\u003e\u003c/span\u003e\u003cspan class=\"easy-footnote\"\u003e\u003ca href=\"https://dave.cheney.net/2021/01/05/a-few-bytes-here-a-few-there-pretty-soon-youre-talking-real-memory#easy-footnote-bottom-1-4231\" title=\"This is not the correct way to benchmark a sort function because after the first iteration, the input is sorted. But I digress.\"\u003e\u003csup\u003e1\u003c/sup\u003e\u003c/a\u003e\u003c/span\u003e\u003c/p\u003e\n\n\n\n\u003cpre class=\"wp-block-code\"\u003e\u003ccode\u003efunc BenchmarkSortStrings(b *testing.B) {\n        s := []string{\u0026#34;heart\u0026#34;, \u0026#34;lungs\u0026#34;, \u0026#34;brain\u0026#34;, \u0026#34;kidneys\u0026#34;, \u0026#34;pancreas\u0026#34;}\n        b.ReportAllocs()\n        for i := 0; i \u0026lt; b.N; i++ {\n                sort.Strings(s)\n        }\n}\u003c/code\u003e\u003c/pre\u003e\n\n\n\n\u003cp\u003eA convenience wrapper around \u003ccode\u003esort.Sort(sort.StringSlice(s))\u003c/code\u003e, \u003ccode\u003esort.Strings\u003c/code\u003e sorts the input in place, so it isn’t expected to allocate (or at least that’s what 43% of the tweeps who responded thought). However it turns out that, at least in recent versions of Go, each iteration of the benchmark causes one heap allocation. Why does this happen?\u003c/p\u003e\n\n\n\n\u003cp\u003eInterfaces, as all Go programmers should know, are implemented as a\u003ca href=\"https://research.swtch.com/interfaces\"\u003e two word structure\u003c/a\u003e. Each interface value contains a field which holds the type of the interface’s contents, and a pointer to the interface’s contents.\u003cspan id=\"easy-footnote-2-4231\" class=\"easy-footnote-margin-adjust\"\u003e\u003c/span\u003e\u003cspan class=\"easy-footnote\"\u003e\u003ca href=\"https://dave.cheney.net/2021/01/05/a-few-bytes-here-a-few-there-pretty-soon-youre-talking-real-memory#easy-footnote-bottom-2-4231\" title=\"The accuracy of this statement depends on the version of Go in use. For example, Go 1.15 added the ability to \u003ca href=\"https://golang.org/doc/go1.15#runtime\"\u003estore some integers directly in the interface value,\u003c/a\u003e saving the allocation and indirection. However, for the majority of values, if it wasn\u0026#8217;t a pointer type already, its address is taken and stored in the interface value.\"\u003e\u003csup\u003e2\u003c/sup\u003e\u003c/a\u003e\u003c/span\u003e\u003c/p\u003e\n\n\n\n\u003cp\u003eIn pseudo Go code, an interface might look something like this:\u003c/p\u003e\n\n\n\n\u003cpre class=\"wp-block-code\"\u003e\u003ccode\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/body\u003e",
    "source": "Dave Cheney"
  },
  {
    "title": "The story of the one line fix",
    "link": "https://dave.cheney.net/2020/12/15/the-story-of-the-one-line-fix",
    "published": "2020-12-15T04:45:54Z",
    "summary": "\u003cbody\u003e\u003cp\u003ePicture yourself, an engineer working at the hottest distributed microservices de jour, assigned to fix a bug. You jump into an unfamiliar codebase and quickly locate the line where the problem occurred. The fix is simple, just return early or substitute a default value in the case that one cannot be determined from your input. Boom, problem solved. Code compiles, fix goes out to production, and the card’s in the done pile in time for Tuesday drinks at the pub.\u003c/p\u003e\n\n\n\n\u003cp\u003eNow consider this alternative scenario. You find the problematic line and, before you make the fix, you decide to add a test so you will \u003cem\u003eknow\u003c/em\u003e that your fix worked, and hopefully someone will not accidentally revert it in the future.\u003c/p\u003e\n\n\n\n\u003cp\u003eYou’ve figured out that some weird edge case causes that line to be called without being able to determine the right value for \u003ccode\u003ey\u003c/code\u003e. You can see it clearly, \u003ccode\u003ey\u003c/code\u003e ends up being zero so the program crashes. To write a test, you need to get the conditions that caused \u003ccode\u003ey\u003c/code\u003e\u003c/p\u003e\u003c/body\u003e",
    "source": "Dave Cheney"
  },
  {
    "title": "How to dump the GOSSAFUNC graph for a method",
    "link": "https://dave.cheney.net/2020/06/19/how-to-dump-the-gossafunc-graph-for-a-method",
    "published": "2020-06-19T03:36:57Z",
    "summary": "\u003cbody\u003e\u003cp\u003eThe Go compiler’s SSA backend contains a facility to produce HTML debugging output of the compilation phases. This post covers how to print the SSA output for function \u003cem\u003eand\u003c/em\u003e methods.\u003c/p\u003e\n\n\n\n\u003cp\u003eLet’s start with a sample program which contains a function, a value method, and a pointer method:\u003c/p\u003e\n\n\n\n\u003cpre class=\"wp-block-code\"\u003e\u003ccode\u003epackage main\n\nimport (\n    \u0026#34;fmt\u0026#34;\n)\n\ntype Numbers struct {\n    vals []int\n}\n\nfunc (n *Numbers) Add(v int) {\n    n.vals = append(n.vals, v)\n}\n\nfunc (n Numbers) Average() float64 {\n    sum := 0.0\n    for _, num := range n.vals {\n        sum += float64(num)\n    }\n    return sum / float64(len(n.vals))\n}\n\n\nfunc main() {\n    var numbers Numbers\n    numbers.Add(200)\n    numbers.Add(43)\n    numbers.Add(-6)\n    fmt.Println(numbers.Average())\n}\u003c/code\u003e\u003c/pre\u003e\n\n\n\n\u003cp\u003eControl of the SSA debugging output is via the \u003ccode\u003eGOSSAFUNC\u003c/code\u003e environment variable. This variable takes the name of the function to dump. This is \u003cem\u003enot\u003c/em\u003e the functions fully qualified name. For \u003ccode\u003efunc main\u003c/code\u003e above the name of the function is \u003ccode\u003emain\u003c/code\u003e \u003cem\u003enot\u003c/em\u003e \u003ccode\u003emain.main\u003c/code\u003e.\u003c/p\u003e\n\n\n\n\u003cpre class=\"wp-block-preformatted\"\u003e% \u003cstrong\u003e\u003c/strong\u003e\u003c/pre\u003e\u003c/body\u003e",
    "source": "Dave Cheney"
  },
  {
    "title": "Diamond interface composition in Go 1.14",
    "link": "https://dave.cheney.net/2020/05/24/diamond-interface-composition-in-go-1-14",
    "published": "2020-05-24T08:49:01Z",
    "summary": "\u003cbody\u003e\u003cp\u003ePer the \u003ca href=\"https://github.com/golang/proposal/blob/master/design/6977-overlapping-interfaces.md\"\u003eoverlapping interfaces proposal\u003c/a\u003e, Go 1.14 now permits embedding of interfaces with overlapping method sets. This is a brief post explain what this change means:\u003c/p\u003e\n\n\n\n\u003cp\u003eLet’s start with the definition of the three key interfaces from the \u003ccode\u003eio\u003c/code\u003e package; \u003ccode\u003eio.Reader\u003c/code\u003e, \u003ccode\u003eio.Writer\u003c/code\u003e, and \u003ccode\u003eio.Closer\u003c/code\u003e:\u003c/p\u003e\n\n\n\n\u003cpre class=\"wp-block-code\"\u003e\u003ccode\u003epackage io\n\ntype Reader interface {\n    Read([]byte) (int, error)\n}\n\ntype Writer interface {\n    Write([]byte) (int, error)\n}\n\ntype Closer interface {\n    Close() error\n}    \u003c/code\u003e\u003c/pre\u003e\n\n\n\n\u003cp\u003eJust as embedding a type inside a struct allows the embedded type’s fields and methods to be accessed as if it were declared on the embedding type\u003cspan id=\"easy-footnote-10-4179\" class=\"easy-footnote-margin-adjust\"\u003e\u003c/span\u003e\u003cspan class=\"easy-footnote\"\u003e\u003ca href=\"https://dave.cheney.net/2020/05/24/diamond-interface-composition-in-go-1-14#easy-footnote-bottom-10-4179\" title=\"It is said that embedding promotes the type\u0026#8217;s fields and methods.\"\u003e\u003csup\u003e10\u003c/sup\u003e\u003c/a\u003e\u003c/span\u003e, the process is true for interfaces. Thus there is no difference between explicitly declaring\u003c/p\u003e\n\n\n\n\u003cpre class=\"wp-block-code\"\u003e\u003ccode\u003etype ReadCloser interface {\n    Read([]byte) (int, error)\n    Close() error\n}\u003c/code\u003e\u003c/pre\u003e\n\n\n\n\u003cp\u003eand using embedding to compose the interface\u003c/p\u003e\n\n\n\n\u003cpre class=\"wp-block-code\"\u003e\u003ccode\u003etype ReadCloser interface {\n    Reader\n    Closer\n}\u003c/code\u003e\u003c/pre\u003e\n\n\n\n\u003cp\u003eYou can even mix and match \u003c/p\u003e\n\n\n\n\u003cpre class=\"wp-block-code\"\u003e\u003ccode\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/body\u003e",
    "source": "Dave Cheney"
  },
  {
    "title": "Fatih’s question",
    "link": "https://dave.cheney.net/2020/05/16/fatihs-question",
    "published": "2020-05-16T11:31:37Z",
    "summary": "\u003cbody\u003e\u003cp\u003eA few days ago Fatih posted \u003ca href=\"https://twitter.com/fatih/status/1260683136842608640\"\u003ethis question\u003c/a\u003e on twitter.\u003c/p\u003e\n\n\n\n\u003cp\u003eI’m going to attempt to give my answer, however to do that I need to apply some simplifications as my previous attempts to answer it involved a lot of phrases like \u003cem\u003ea pointer to a pointer\u003c/em\u003e, and other unhelpful waffling. Hopefully my simplified answer can be useful in building a mental framework to answer Fatih’s original question.\u003c/p\u003e\n\n\n\n\u003ch2 class=\"wp-block-heading\"\u003eRestating the question\u003c/h2\u003e\n\n\n\n\u003cp\u003eFatih’s original tweet showed \u003ca href=\"https://play.golang.org/p/g2yUIYrV67F\"\u003efour different variations\u003c/a\u003e of \u003ccode\u003ejson.Unmarshal\u003c/code\u003e. I’m going to focus on the last two, which I’ll rewrite a little:\u003c/p\u003e\n\n\n\n\u003cpre class=\"wp-block-code\"\u003e\u003ccode\u003epackage main\n\nimport (\n    \u0026#34;encoding/json\u0026#34;\n    \u0026#34;fmt\u0026#34;\n)\n\ntype Result struct {\n    Foo string `json:\u0026#34;foo\u0026#34;`\n}\n\nfunc main() {\n    content := []byte(`{\u0026#34;foo\u0026#34;: \u0026#34;bar\u0026#34;}`)\n    var result1, result2 *Result\n\n    err := json.Unmarshal(content, \u0026amp;result1)\n    fmt.Println(result1, err) // \u0026amp;{bar} \u0026lt;nil\u0026gt;\n\n    err = json.Unmarshal(content, result2)\n    fmt.Println(result2, err) // \u0026lt;nil\u0026gt; json: Unmarshal(nil *main.Result)\n}\u003c/code\u003e\u003c/pre\u003e\n\n\n\n\u003cp\u003eRestated in words, \u003ccode\u003e\u003c/code\u003e\u003c/p\u003e\u003c/body\u003e",
    "source": "Dave Cheney"
  },
  {
    "title": "Ensmallening Go binaries by prohibiting comparisons",
    "link": "https://dave.cheney.net/2020/05/09/ensmallening-go-binaries-by-prohibiting-comparisons",
    "published": "2020-05-09T10:23:17Z",
    "summary": "\u003cbody\u003e\u003cp\u003eConventional wisdom dictates that the larger the number of types declared in a Go program, the larger the resulting binary. Intuitively this makes sense, after all, what’s the point in defining a bunch of types if you’re not going to write code that operates on them. However, part of the job of a linker is to detect functions which are not referenced by a program–say they are part of a library of which only a subset of functionality is used–and remove them from the final output. Yet, the adage mo’ types, mo’ binary holds true for the majority of Go programs.\u003c/p\u003e\n\n\n\n\u003cp\u003eIn this post I’ll dig into what equality, in the context of a Go program, means and why changes \u003ca href=\"https://github.com/golang/net/commit/e0ff5e5a1de5b859e2d48a2830d7933b3ab5b75f\"\u003elike this\u003c/a\u003e have a measurable impact on the size of a Go program.\u003c/p\u003e\n\n\n\n\u003ch2 class=\"wp-block-heading\"\u003eDefining equality between two values\u003c/h2\u003e\n\n\n\n\u003cp\u003e\u003c/p\u003e\u003c/body\u003e",
    "source": "Dave Cheney"
  },
  {
    "title": "Mid-stack inlining in Go",
    "link": "https://dave.cheney.net/2020/05/02/mid-stack-inlining-in-go",
    "published": "2020-05-02T05:09:15Z",
    "summary": "\u003cbody\u003e\u003cp\u003eIn the \u003ca href=\"https://dave.cheney.net/2020/04/25/inlining-optimisations-in-go\"\u003eprevious post\u003c/a\u003e I discussed how leaf inlining allows the Go compiler to reduce the overhead of function calls and extend optimisation opportunities across function boundaries. In this post I’ll discuss the limits of inlining and leaf vs mid-stack inlining.\u003c/p\u003e\n\n\n\n\u003ch2 class=\"wp-block-heading\"\u003eThe limits of inlining\u003c/h2\u003e\n\n\n\n\u003cp\u003eInlining a function into its caller removes the call’s overhead and increases the opportunity for the compiler to apply additional optimisations so the question should be asked, if some inlining is good, would more be better, \u003cem\u003ewhy not inline as much as possible?\u003c/em\u003e\u003c/p\u003e\n\n\n\n\u003cp\u003eInlining trades possibly larger program sizes for potentially faster execution time. The main reason to limit inlining is creating many inlined copies of a function can increase compile time and result in larger binaries for marginal gain. Even taking into account the opportunities for further optimisation, aggressive inlining tends to increase the size of, and the time too compile, the resulting binary.\u003c/p\u003e\n\n\n\n\u003cp\u003eInlining works best for \u003ca href=\"https://medium.com/@joshsaintjacque/small-functions-considered-awesome-c95b3fd1812f\"\u003e\u003c/a\u003e\u003c/p\u003e\u003c/body\u003e",
    "source": "Dave Cheney"
  },
  {
    "title": "Inlining optimisations in Go",
    "link": "https://dave.cheney.net/2020/04/25/inlining-optimisations-in-go",
    "published": "2020-04-25T06:38:17Z",
    "summary": "\u003cbody\u003e\u003cp\u003eThis is a post about how the Go compiler implements inlining and how this optimisation  affects your Go code. \u003c/p\u003e\n\n\n\n\u003cp\u003e\u003cem\u003en.b.\u003c/em\u003e This article focuses on \u003cem\u003egc\u003c/em\u003e, the de facto Go compiler from \u003ca href=\"https://github.com/golang/go\"\u003egolang.org\u003c/a\u003e. The concepts discussed apply broadly to other Go compilers like gccgo and tinygo but may differ in implementation and efficacy.\u003c/p\u003e\n\n\n\n\u003ch2 class=\"wp-block-heading\"\u003eWhat is inlining?\u003c/h2\u003e\n\n\n\n\u003cp\u003eInlining is the act of combining smaller functions into their respective callers. In the early days of computing this optimisation was typically performed by hand. Nowadays inlining is one of a class of fundamental optimisations performed automatically during the compilation process.\u003c/p\u003e\n\n\n\n\u003ch2 class=\"wp-block-heading\"\u003eWhy is inlining important?\u003c/h2\u003e\n\n\n\n\u003cp\u003eInlining is important for two reasons. The first is it removes the overhead of the function call itself. The second is it permits the compiler to more effectively apply other optimisation strategies.\u003c/p\u003e\n\n\n\n\u003ch3 class=\"wp-block-heading\"\u003eFunction call overhead\u003c/h3\u003e\n\n\n\n\u003cp\u003eCalling a function\u003cspan id=\"easy-footnote-19-4053\" class=\"easy-footnote-margin-adjust\"\u003e\u003c/span\u003e\u003cspan class=\"easy-footnote\"\u003e\u003ca href=\"https://dave.cheney.net/2020/04/25/inlining-optimisations-in-go#easy-footnote-bottom-19-4053\" title=\"In Go, a method is just a function with a predefined formal parameter, the receiver. The relative costs of calling a free function vs a invoking a method, assuming that method is not called through an interface, are the same.\"\u003e\u003csup\u003e19\u003c/sup\u003e\u003c/a\u003e\u003c/span\u003e\u003c/p\u003e\u003c/body\u003e",
    "source": "Dave Cheney"
  },
  {
    "title": "go test -v streaming output",
    "link": "https://dave.cheney.net/2020/03/10/go-test-v-streaming-output",
    "published": "2020-03-10T07:03:03Z",
    "summary": "\u003cbody\u003e\u003cp\u003eThe \u003ccode\u003etesting\u003c/code\u003e package is one of my favourite packages in the Go standard library, not just because of its low noise approach to unit testing, but, over the lifetime of Go, it has received a steady stream of quality of life improvements driven by real world usage.\u003c/p\u003e\n\n\n\n\u003cp\u003eThe most recent example of this is, in Go 1.14, \u003ccode\u003ego test -v\u003c/code\u003e will stream \u003ccode\u003et.Log\u003c/code\u003e output as it happens, rather than hoarding it til the end of the test run. Here’s an example;\u003c/p\u003e\n\n\n\n\u003cpre class=\"wp-block-code\"\u003e\u003ccode\u003epackage main\n\nimport (\n\t\u0026#34;fmt\u0026#34;\n\t\u0026#34;testing\u0026#34;\n\t\u0026#34;time\u0026#34;\n)\n\nfunc TestLogStreaming(t *testing.T) {\n\tfor i := 0; i \u0026lt; 5; i++ {\n\t\ttime.Sleep(300 * time.Millisecond)\n\t\tfmt.Println(\u0026#34;fmt.Println:\u0026#34;, i)\n\t\tt.Log(\u0026#34;t.Log:\u0026#34;, i)\n\t}\n}\u003c/code\u003e\u003c/pre\u003e\n\n\n\n\u003cp\u003e\u003cem\u003eNote:\u003c/em\u003e Calling \u003ccode\u003efmt.Println\u003c/code\u003e inside a test is generally considered a no no as it bypasses the \u003ccode\u003etesting\u003c/code\u003e package’s output buffering irrespective of the \u003ccode\u003e-v\u003c/code\u003e flag. However, for this example, it‘s necessary to demonstrate the streaming \u003ccode\u003et.Log\u003c/code\u003e change.\u003c/p\u003e\n\n\n\n\u003cpre class=\"wp-block-code\"\u003e\u003ccode\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/body\u003e",
    "source": "Dave Cheney"
  },
  {
    "title": "Are large slices more expensive than smaller ones?",
    "link": "https://dave.cheney.net/2020/03/01/are-large-slices-more-expensive-than-smaller-ones",
    "published": "2020-03-01T05:35:26Z",
    "summary": "\u003cbody\u003e\u003cp\u003eProgrammers have a tendency to be superstitious. Particularly, when a programmer hears that copies are expensive, they start to see them everywhere, especially when they learn that, in Go, \u003cem\u003eevery\u003c/em\u003e assignment is a copy.\u003c/p\u003e\n\n\n\n\u003cp\u003eConsider this code; \u003ccode\u003ex\u003c/code\u003e is three orders of magnitude larger than \u003ccode\u003ey\u003c/code\u003e, is the assignment of \u003ccode\u003ex\u003c/code\u003e to \u003ccode\u003ea\u003c/code\u003e more expensive than the assignment of \u003ccode\u003ey\u003c/code\u003e to \u003ccode\u003eb\u003c/code\u003e?\u003c/p\u003e\n\n\n\n\u003cpre class=\"wp-block-preformatted\"\u003efunc f() {\n       x, y := make([]byte, 9000), make([]byte, 9)\n       a := x\n       b := y\n       // ...\n } \u003c/pre\u003e\n\n\n\n\u003cp\u003eThe answer is; no. \u003ccode\u003ex\u003c/code\u003e and \u003ccode\u003ey\u003c/code\u003e have the same type, \u003ccode\u003e[]byte\u003c/code\u003e, that is, a slice of bytes. As both variables have the same type, their assignment involves copying the same amount of data. Both assignments have the same cost.\u003c/p\u003e\n\n\n\n\u003cp\u003eAll slices are the same size; three machine words (three \u003ccode\u003euintptrs\u003c/code\u003e\u003c/p\u003e\u003c/body\u003e",
    "source": "Dave Cheney"
  },
  {
    "title": "The Zen of Go",
    "link": "https://dave.cheney.net/2020/02/23/the-zen-of-go",
    "published": "2020-02-23T06:46:10Z",
    "summary": "\u003cbody\u003e\u003cp\u003e\u003cem\u003eThis article was derived from my \u003ca href=\"https://www.gophercon.org.il\"\u003eGopherCon Israel 2020\u003c/a\u003e presentation. It’s also quite long. If you’d prefer a shorter version, head over to \u003ca href=\"https://the-zen-of-go.netlify.com\"\u003ethe-zen-of-go.netlify.com\u003c/a\u003e\u003c/em\u003e.\u003c/p\u003e\n\n\n\n\u003cp\u003e\u003cem\u003eA recording of the presentation is available on \u003ca href=\"https://www.youtube.com/watch?v=yd_rtwYaXps\"\u003eYouTube\u003c/a\u003e.\u003c/em\u003e\u003c/p\u003e\n\n\n\n\u003chr class=\"wp-block-separator\"\u003e\u003c/hr\u003e\n\n\n\n\u003ch2 class=\"wp-block-heading\" id=\"_how_should_we_write_good_code\"\u003eHow should I write good code?\u003c/h2\u003e\n\n\n\n\u003cp\u003eSomething that I’ve been thinking about a lot recently, when reflecting on the body of my own work, is a common subtitle, \u003cem\u003ehow should I write good code?\u003c/em\u003e Given nobody actively seeks to write \u003cem\u003ebad\u003c/em\u003e code, this leads to the question; \u003cem\u003ehow do you know when you’ve written good Go code?\u003c/em\u003e\u003c/p\u003e\n\n\n\n\u003cp\u003eIf there’s a continuum between good and bad, how to do we know what the good parts are? What are its properties, its attributes, its hallmarks, its patterns, and its idioms?\u003c/p\u003e\n\n\n\n\u003ch2 class=\"wp-block-heading\" id=\"_idiomatic_go\"\u003eIdiomatic Go\u003c/h2\u003e\n\n\n\n\u003cfigure class=\"wp-block-image size-large\"\u003e\u003cimg fetchpriority=\"high\" decoding=\"async\" width=\"640\" height=\"480\" src=\"https://dave.cheney.net/wp-content/uploads/2020/02/1011226.jpg\" alt=\"\" class=\"wp-image-3939\" srcset=\"https://dave.cheney.net/wp-content/uploads/2020/02/1011226.jpg 640w, https://dave.cheney.net/wp-content/uploads/2020/02/1011226-300x225.jpg 300w, https://dave.cheney.net/wp-content/uploads/2020/02/1011226-624x468.jpg 624w\" sizes=\"(max-width: 640px) 100vw, 640px\"\u003e\u003c/img\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eWhich brings me to idiomatic Go. To say that something is idiomatic is to say that it follows the style of the time. If something is not idiomatic, it is not following the prevailing style. It is unfashionable.\u003c/p\u003e\n\n\n\n\u003cp\u003e\u003c/p\u003e\u003c/body\u003e",
    "source": "Dave Cheney"
  },
  {
    "title": "Dynamically scoped variables in Go",
    "link": "https://dave.cheney.net/2019/12/08/dynamically-scoped-variables-in-go",
    "published": "2019-12-08T01:36:27Z",
    "summary": "\u003cbody\u003e\u003cp\u003eThis is a thought experiment in API design. It starts with the classic Go unit testing idiom:\u003c/p\u003e\n\n\n\n\u003cpre class=\"wp-block-preformatted\"\u003efunc TestOpenFile(t *testing.T) {\n        f, err := os.Open(\u0026#34;notfound\u0026#34;)\n        if err != nil {\n                t.Fatal(err)\n        }\n\n        // ...\n}\u003c/pre\u003e\n\n\n\n\u003cp\u003eWhat’s the problem with this code? The assertion. \u003ccode\u003eif err != nil { ... }\u003c/code\u003e is repetitive and in the case where multiple conditions need to be checked, somewhat error prone if the author of the test uses \u003ccode\u003et.Error\u003c/code\u003e not \u003ccode\u003et.Fatal\u003c/code\u003e, eg:\u003c/p\u003e\n\n\n\n\u003cpre class=\"wp-block-preformatted\"\u003e        f, err := os.Open(\u0026#34;notfound\u0026#34;)\n        if err != nil {\n                t.Error(err)\n        }\n        f.Close() // boom!\u003c/pre\u003e\n\n\n\n\u003cp\u003eWhat’s the solution? DRY it up, of course, by moving the repetitive assertion logic to a helper:\u003c/p\u003e\n\n\n\n\u003cpre class=\"wp-block-preformatted\"\u003efunc TestOpenFile(t *testing.T) {\n        f, err := os.Open(\u0026#34;notfound\u0026#34;)\n        check(t, err)\n\n        // ...\n}\n \nfunc check(t *testing.T, err error) {\n       if err != nil {\n                t.Helper()\n                t.Fatal(err)\n        }\n}\u003c/pre\u003e\n\n\n\n\u003cp\u003e\u003c/p\u003e\u003c/body\u003e",
    "source": "Dave Cheney"
  },
  {
    "title": "Internets of Interest #15: The Queen of the Skies",
    "link": "https://dave.cheney.net/2019/12/05/internets-of-interest-15-the-queen-of-the-skies",
    "published": "2019-12-05T06:49:41Z",
    "summary": "\u003cbody\u003e\u003cp\u003eIf, like me, you’re a commercial aviation otaku, this walkthrough of an enthusiast built 747 cockpit simulator should be highly relevant to your interests.\u003c/p\u003e\n\n\n\n\u003cfigure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\"\u003e\u003cdiv class=\"wp-block-embed__wrapper\"\u003e\n\u003ciframe loading=\"lazy\" title=\"EEVblog #1268 - DIY Boeing 747 Cockpit Simulator Full Tour\" width=\"625\" height=\"352\" src=\"https://www.youtube.com/embed/Ug7xa-7sako?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen=\"\"\u003e\u003c/iframe\u003e\n\u003c/div\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003e\u003c/p\u003e\n\u003c/body\u003e",
    "source": "Dave Cheney"
  },
  {
    "title": "Complementary engineering indicators",
    "link": "https://dave.cheney.net/2019/12/04/complementary-engineering-indicators",
    "published": "2019-12-04T09:46:26Z",
    "summary": "\u003cbody\u003e\u003cp\u003eLast year I had the opportunity to watch Cat Swetel’s presentation \u003cem\u003e\u003ca href=\"https://www.youtube.com/watch?v=cW3yM-K2M08\"\u003eThe Development Metrics You Should Use (but Don’t)\u003c/a\u003e\u003c/em\u003e. The information that could be gleaned from just tracking the start and finish date of work items was eye opening. If you’re using an issue tracker this information is probably already (perhaps with some light data munging) available — no need for TPS reports. Additionally, statistics obtained by data mining your project’s issue tracker are, perhaps, less likely to be juked.\u003c/p\u003e\n\n\n\n\u003cp\u003eAround the time I saw Cat’s presentation I finished reading Andy Grove’s \u003cem\u003eHigh Output Management\u003c/em\u003e\u003c/p\u003e\u003c/body\u003e",
    "source": "Dave Cheney"
  },
  {
    "title": "Internets of interest #14: UNIX v0",
    "link": "https://dave.cheney.net/2019/11/18/internets-of-interest-14-unix-v0",
    "published": "2019-11-17T16:04:20Z",
    "summary": "\u003cbody\u003e\u003cfigure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\"\u003e\u003cdiv class=\"wp-block-embed__wrapper\"\u003e\n\u003ciframe loading=\"lazy\" title=\"LCM+L PDP-7 booting and running UNIX Version 0\" width=\"625\" height=\"352\" src=\"https://www.youtube.com/embed/pvaPaWyiuLA?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen=\"\"\u003e\u003c/iframe\u003e\n\u003c/div\u003e\u003c/figure\u003e\n\n\n\n\u003cp\u003eRead more over at the \u003ca href=\"https://livingcomputers.org/Blog/Restoring-UNIX-v0-on-a-PDP-7-A-look-behind-the-sce.aspx\"\u003eLiving Computer Museum’s restoration page. \u003c/a\u003e\u003c/p\u003e\n\u003c/body\u003e",
    "source": "Dave Cheney"
  },
  {
    "title": "Internets of interest: Warner Losh on the first ten years of UNIX",
    "link": "https://dave.cheney.net/2019/11/16/internets-of-interest-warner-losh-on-the-first-ten-years-of-unix",
    "published": "2019-11-16T11:21:46Z",
    "summary": "\u003cbody\u003e\u003cp\u003eUNIX turns 50 this year which means 7th edition Research UNIX is that 40. \u003cbr\u003e\u003c/br\u003e\u003c/p\u003e\n\n\n\n\u003cfigure class=\"wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\"\u003e\u003cdiv class=\"wp-block-embed__wrapper\"\u003e\n\u003ciframe loading=\"lazy\" title=\"7th Edition Unix at 40 by Warner Losh\" width=\"625\" height=\"352\" src=\"https://www.youtube.com/embed/FTlzaDgzPY8?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen=\"\"\u003e\u003c/iframe\u003e\n\u003c/div\u003e\u003c/figure\u003e\n\u003c/body\u003e",
    "source": "Dave Cheney"
  },
  {
    "title": "Use internal packages to reduce your public API surface",
    "link": "https://dave.cheney.net/2019/10/06/use-internal-packages-to-reduce-your-public-api-surface",
    "published": "2019-10-06T04:43:54Z",
    "summary": "\u003cbody\u003e\u003cp\u003eIn the beginning, before the \u003ccode\u003ego\u003c/code\u003e tool, before Go 1.0, the Go distribution stored the standard library in a subdirectory called \u003ccode\u003epkg/\u003c/code\u003e and the commands which built upon it in \u003ccode\u003ecmd/\u003c/code\u003e. This wasn’t so much a deliberate taxonomy but a by product of the original \u003ccode\u003emake\u003c/code\u003e based build system. In \u003ca href=\"https://groups.google.com/forum/m/#!msg/golang-dev/c5AknZg3Kww/OFLmvGyfNR0J\"\u003eSeptember 2014\u003c/a\u003e, the Go distribution dropped the \u003ccode\u003epkg/\u003c/code\u003e subdirectory, but then this tribal knowledge had set root in large Go projects and continues to this day.\u003c/p\u003e\n\n\n\n\u003cp\u003eI tend to view empty directories inside a Go project with suspicion. Often they are a hint that the module’s author may be trying to create a taxonomy of packages rather than ensuring each package’s name, and thus its enclosing directory, \u003ca href=\"https://dave.cheney.net/2019/01/08/avoid-package-names-like-base-util-or-common\"\u003euniquely describes its purpose\u003c/a\u003e. While the symmetry with \u003ccode\u003ecmd/\u003c/code\u003e for \u003ccode\u003epackage main\u003c/code\u003e commands is appealing, a directory that exists only to hold other packages is a potential design smell.\u003c/p\u003e\n\n\n\n\u003cp\u003eMore importantly, the boilerplate of an empty \u003ccode\u003epkg/\u003c/code\u003e directory distracts from the more useful idiom of an \u003ccode\u003einternal/\u003c/code\u003e directory. \u003ccode\u003e\u003c/code\u003e\u003c/p\u003e\u003c/body\u003e",
    "source": "Dave Cheney"
  },
  {
    "title": "Be wary of functions which take several parameters of the same type",
    "link": "https://dave.cheney.net/2019/09/24/be-wary-of-functions-which-take-several-parameters-of-the-same-type",
    "published": "2019-09-24T10:20:22Z",
    "summary": "\u003cbody\u003e\u003cblockquote class=\"wp-block-quote is-style-large is-layout-flow wp-block-quote-is-layout-flow\"\u003e\u003cp\u003eAPIs should be easy to use and hard to misuse.\u003c/p\u003e\u003ccite\u003e— Josh Bloch\u003c/cite\u003e\u003c/blockquote\u003e\n\n\n\n\u003cp\u003eA good example of a simple looking, but hard to use correctly, API is one which takes two or more parameters of the same type. Let’s compare two function signatures:\u003c/p\u003e\n\n\n\n\u003cpre class=\"wp-block-code\"\u003e\u003ccode\u003efunc Max(a, b int) int\nfunc CopyFile(to, from string) error\u003c/code\u003e\u003c/pre\u003e\n\n\n\n\u003cp\u003eWhat’s the difference between these functions? Obviously one returns the maximum of two numbers, the other copies a file, but that’s not the important thing.\u003c/p\u003e\n\n\n\n\u003cpre class=\"wp-block-code\"\u003e\u003ccode\u003eMax(8, 10) // 10\nMax(10, 8) // 10\u003c/code\u003e\u003c/pre\u003e\n\n\n\n\u003cp\u003e\u003ccode\u003eMax\u003c/code\u003e is \u003cem\u003ecommutative\u003c/em\u003e; the order of its parameters does not matter. The maximum of eight and ten is ten regardless of if I compare eight and ten or ten and eight.\u003c/p\u003e\n\n\n\n\u003cp\u003eHowever, this property does not hold true for \u003ccode\u003eCopyFile\u003c/code\u003e.\u003c/p\u003e\n\n\n\n\u003cpre class=\"wp-block-code\"\u003e\u003ccode\u003eCopyFile(\u0026#34;/tmp/backup\u0026#34;, \u0026#34;presentation.md\u0026#34;)\nCopyFile(\u0026#34;presentation.md\u0026#34;, \u0026#34;/tmp/backup\u0026#34;)\u003c/code\u003e\u003c/pre\u003e\n\n\n\n\u003cp\u003e\u003c/p\u003e\u003c/body\u003e",
    "source": "Dave Cheney"
  },
  {
    "title": "Don’t force allocations on the callers of your API",
    "link": "https://dave.cheney.net/2019/09/05/dont-force-allocations-on-the-callers-of-your-api",
    "published": "2019-09-05T10:44:32Z",
    "summary": "\u003cbody\u003e\u003cp\u003eThis is a post about performance. Most of the time when worrying about the performance of a piece of code the overwhelming advice should be (with apologies to Brendan Gregg) \u003cem\u003edon’t worry about it, yet.\u003c/em\u003e However there is one area where I counsel developers to think about the performance implications of a design, and that is API design.\u003c/p\u003e\n\n\n\n\u003cp\u003eBecause of the high cost of retrofitting a change to an API’s signature to address performance concerns, it’s worthwhile considering the performance implications of your API’s design on its caller.\u003c/p\u003e\n\n\n\n\u003ch2 class=\"wp-block-heading\"\u003eA tale of two API designs\u003c/h2\u003e\n\n\n\n\u003cp\u003eConsider these two \u003ccode\u003eRead\u003c/code\u003e methods:\u003c/p\u003e\n\n\n\n\u003cpre class=\"wp-block-preformatted\"\u003efunc (r *Reader) Read(buf []byte) (int, error)\nfunc (r *Reader) Read() ([]byte, error)\u003c/pre\u003e\n\n\n\n\u003cp\u003eThe first method takes a \u003ccode\u003e[]byte\u003c/code\u003e buffer and returns the number of bytes read into that buffer and possibly an \u003ccode\u003eerror\u003c/code\u003e that occurred while reading. The second takes no arguments and returns some data as a \u003ccode\u003e[]byte\u003c/code\u003e or an \u003ccode\u003eerror\u003c/code\u003e. \u003c/p\u003e\n\n\n\n\u003cp\u003eThis first method should be familiar to any Go programmer, it’s \u003ccode\u003e\u003ca href=\"https://golang.org/pkg/io/#Reader\"\u003e\u003c/a\u003e\u003c/code\u003e\u003c/p\u003e\u003c/body\u003e",
    "source": "Dave Cheney"
  },
  {
    "title": "Our Software Dependency Problem",
    "link": "http://research.swtch.com/deps",
    "published": "2019-01-23T16:00:00Z",
    "summary": "\u003cbody\u003e\u003cp\u003e\nFor decades, discussion of software reuse was far more common than actual software reuse.\nToday, the situation is reversed: developers reuse software written by others every day,\nin the form of software dependencies,\nand the situation goes mostly unexamined.\n\n\u003c/p\u003e\u003cp\u003e\nMy own background includes a decade of working with\nGoogle’s internal source code system,\nwhich treats software dependencies as a first-class concept,\u003ca class=\"footnote\" id=\"body1\" href=\"#note1\"\u003e\u003csup\u003e1\u003c/sup\u003e\u003c/a\u003e\nand also developing support for\ndependencies in the Go programming language.\u003ca class=\"footnote\" id=\"body2\" href=\"#note2\"\u003e\u003csup\u003e2\u003c/sup\u003e\u003c/a\u003e\n\n\u003c/p\u003e\u003cp\u003e\nSoftware dependencies carry with them\nserious risks that are too often overlooked.\nThe shift to easy, fine-grained software reuse has happened so quickly\nthat we do not yet understand the best practices for choosing\nand using dependencies effectively,\nor even for deciding when they are appropriate and when not.\nMy purpose in writing this article is to raise awareness of the risks\nand encourage more investigation of solutions.\n\u003ca class=\"anchor\" href=\"#what_is_a_dependency\"\u003e\u003c/a\u003e\u003c/p\u003e\u003ch2 id=\"what_is_a_dependency\"\u003e\u003ca class=\"anchor\" href=\"#what_is_a_dependency\"\u003eWhat is a dependency?\u003c/a\u003e\u003c/h2\u003e\n\n\n\u003cp\u003e\nIn today’s software development world,\na \u003ci\u003e\u003c/i\u003e\u003c/p\u003e\u003cp\u003e\u003c/p\u003e\u003cp\u003e\u003c/p\u003e\u003cp\u003e\u003c/p\u003e\u003cpre\u003e\u003c/pre\u003e\u003c/body\u003e",
    "source": "research!rsc"
  },
  {
    "title": "What is Software Engineering?",
    "link": "http://research.swtch.com/vgo-eng",
    "published": "2018-05-30T14:00:00Z",
    "summary": "\u003cbody\u003e\u003cp\u003e\nNearly all of Go’s distinctive design decisions\nwere aimed at making software engineering simpler and easier.\nWe’ve said this often.\nThe canonical reference is Rob Pike’s 2012 article,\n“\u003ca href=\"https://talks.golang.org/2012/splash.article\"\u003eGo at Google: Language Design in the Service of Software Engineering\u003c/a\u003e.”\nBut what is software engineering?\u003c/p\u003e\u003cblockquote\u003e\n\n\u003cp\u003e\n\u003ci\u003eSoftware engineering is what happens to programming\n\u003cbr\u003e\u003c/br\u003e\nwhen you add time and other programmers.\u003c/i\u003e\u003c/p\u003e\u003c/blockquote\u003e\n\n\u003cp\u003e\u003c/p\u003e\u003cp\u003e\u003c/p\u003e\u003cp\u003e\u003c/p\u003e\u003cp\u003e\u003c/p\u003e\u003cp\u003e\u003c/p\u003e\u003cp\u003e\u003c/p\u003e\u003cp\u003e\u003c/p\u003e\u003c/body\u003e",
    "source": "research!rsc"
  },
  {
    "title": "Go and Dogma",
    "link": "http://research.swtch.com/dogma",
    "published": "2017-01-09T14:00:00Z",
    "summary": "\u003cbody\u003e\u003cp\u003e\n[\u003ci\u003eCross-posting from last year’s \u003ca href=\"https://www.reddit.com/r/golang/comments/46bd5h/ama_we_are_the_go_contributors_ask_us_anything/d05yyde/?context=3\u0026st=ixq5hjko\u0026sh=7affd469\"\u003eGo contributors AMA\u003c/a\u003e on Reddit, because it’s still important to remember.\u003c/i\u003e]\n\n\u003c/p\u003e\u003cp\u003e\u003c/p\u003e\u003cp\u003e\u003c/p\u003e\u003cp\u003e\u003c/p\u003e\u003c/body\u003e",
    "source": "research!rsc"
  },
  {
    "title": "A Tour of Acme",
    "link": "http://research.swtch.com/acme",
    "published": "2012-09-17T15:00:00Z",
    "summary": "\u003cbody\u003e\u003cp class=\"lp\"\u003e\nPeople I work with recognize my computer easily:\nit\u0026#39;s the one with nothing but yellow windows and blue bars on the screen.\nThat\u0026#39;s the text editor acme, written by Rob Pike for Plan 9 in the early 1990s.\nAcme focuses entirely on the idea of text as user interface.\nIt\u0026#39;s difficult to explain acme without seeing it, though, so I\u0026#39;ve put together\na screencast explaining the basics of acme and showing a brief programming session.\nRemember as you watch the video that the 854x480 screen is quite cramped.\nUsually you\u0026#39;d run acme on a larger screen: even my MacBook Air has almost four times\nas much screen real estate.\n\u003c/p\u003e\n\n\u003ccenter\u003e\n\u003cdiv style=\"border: 1px solid black; width: 853px; height: 480px;\"\u003e\u003ciframe width=\"853\" height=\"480\" src=\"https://www.youtube.com/embed/dP1xVpMPn8M?rel=0\" frameborder=\"0\" allowfullscreen=\"\"\u003e\u003c/iframe\u003e\u003c/div\u003e\n\u003c/center\u003e\n\n\u003cp class=\"pp\"\u003e\nThe video doesn\u0026#39;t show everything acme can do, nor does it show all the ways you can use it.\nEven small idioms like where you type text to be loaded or executed vary from user to user.\nTo learn more about acme, read Rob Pike\u0026#39;s paper “\u003ca href=\"/acme.pdf\"\u003eAcme: A User Interface for Programmers\u003c/a\u003e” and then try it.\n\u003c/p\u003e\n\n\u003cp class=\"pp\"\u003e\nAcme runs on most operating systems.\nIf you use \u003ca href=\"https://9p.io/\"\u003ePlan 9 from Bell Labs\u003c/a\u003e\u003c/p\u003e\u003c/body\u003e",
    "source": "research!rsc"
  },
  {
    "title": "Minimal Boolean Formulas",
    "link": "http://research.swtch.com/boolean",
    "published": "2011-05-18T04:00:00Z",
    "summary": "\u003cbody\u003e\u003cp\u003e\u003cstyle type=\"text/css\"\u003e\np { line-height: 150%; }\nblockquote { text-align: left; }\npre.alg { font-family: sans-serif; font-size: 100%; margin-left: 60px; }\ntd, th { padding-left; 5px; padding-right: 5px; vertical-align: top; }\n#times td { text-align: right; }\ntable { padding-top: 1em; padding-bottom: 1em; }\n#find td { text-align: center; }\n\u003c/style\u003e\n\n\u003c/p\u003e\u003cp class=\"lp\"\u003e\n\u003ca href=\"http://oeis.org/A056287\"\u003e28\u003c/a\u003e.\nThat\u0026#39;s the minimum number of AND or OR operators\nyou need in order to write any Boolean function of five variables.\n\u003ca href=\"http://alexhealy.net/\"\u003eAlex Healy\u003c/a\u003e and I computed that in April 2010.  Until then,\nI believe no one had ever known that little fact.\nThis post describes how we computed it\nand how we almost got scooped by \u003ca href=\"http://research.swtch.com/2011/01/knuth-volume-4a.html\"\u003eKnuth\u0026#39;s Volume 4A\u003c/a\u003e\nwhich considers the problem for AND, OR, and XOR.\n\u003c/p\u003e\n\n\u003ch3\u003eA Naive Brute Force Approach\u003c/h3\u003e\n\n\u003cp class=\"pp\"\u003e\u003c/p\u003e\u003c/body\u003e",
    "source": "research!rsc"
  },
  {
    "title": "Zip Files All The Way Down",
    "link": "http://research.swtch.com/zip",
    "published": "2010-03-18T04:00:00Z",
    "summary": "\u003cbody\u003e\u003cp\u003e\u003c/p\u003e\u003cp class=\"lp\"\u003e\nStephen Hawking begins \u003ci\u003e\u003ca href=\"http://www.amazon.com/-/dp/0553380168\"\u003eA Brief History of Time\u003c/a\u003e\u003c/i\u003e with this story:\n\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cp class=\"pp\"\u003e\nA well-known scientist (some say it was Bertrand Russell) once gave a public lecture on astronomy. He described how the earth orbits around the sun and how the sun, in turn, orbits around the center of a vast collection of stars called our galaxy. At the end of the lecture, a little old lady at the back of the room got up and said: “What you have told us is rubbish. The world is really a flat plate supported on the back of a giant tortoise.” The scientist gave a superior smile before replying, “What is the tortoise standing on?”  “You\u0026#39;re very clever, young man, very clever,” said the old lady. “But it\u0026#39;s turtles all the way down!”\n\u003c/p\u003e\n\u003c/blockquote\u003e\n\n\u003cp class=\"lp\"\u003e\nScientists today are pretty sure that the universe is not actually turtles all the way down,\nbut we can create that kind of situation in other contexts.\nFor example, here we have \u003ca href=\"http://www.youtube.com/watch?v=Y-gqMTt3IUg\"\u003evideo monitors all the way down\u003c/a\u003e\nand \u003ca href=\"http://www.amazon.com/gp/customer-media/product-gallery/0387900926/ref=cm_ciu_pdp_images_all\"\u003eset theory books all the way down\u003c/a\u003e,\nand \u003ca href=\"http://blog.makezine.com/archive/2009/01/thousands_of_shopping_carts_stake_o.html\"\u003e\u003c/a\u003e\u003c/p\u003e\u003c/body\u003e",
    "source": "research!rsc"
  },
  {
    "title": "UTF-8: Bits, Bytes, and Benefits",
    "link": "http://research.swtch.com/utf8",
    "published": "2010-03-05T05:00:00Z",
    "summary": "\u003cbody\u003e\u003cp\u003e\u003c/p\u003e\u003cp class=\"pp\"\u003e\nUTF-8 is a way to encode Unicode code points—integer values from\n0 through 10FFFF—into a byte stream,\nand it is far simpler than many people realize.\nThe easiest way to make it confusing or complicated\nis to treat it as a black box, never looking inside.\nSo let\u0026#39;s start by looking inside.  Here it is:\n\u003c/p\u003e\n\n\u003ccenter\u003e\n\u003ctable cellspacing=\"5\" cellpadding=\"0\" border=\"0\"\u003e\n\u003ctbody\u003e\u003ctr height=\"10\"\u003e\u003cth colspan=\"4\"\u003e\u003c/th\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003cth align=\"center\" colspan=\"2\"\u003eUnicode code points\u003c/th\u003e\u003cth width=\"10\"\u003e\u003c/th\u003e\u003cth align=\"center\"\u003eUTF-8 encoding (binary)\u003c/th\u003e\u003c/tr\u003e\n\u003ctr height=\"10\"\u003e\u003ctd colspan=\"4\"\u003e\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd align=\"right\"\u003e00-7F\u003c/td\u003e\u003ctd\u003e(7 bits)\u003c/td\u003e\u003ctd\u003e\u003c/td\u003e\u003ctd align=\"right\"\u003e0\u003ci\u003etuvwxyz\u003c/i\u003e\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd align=\"right\"\u003e0080-07FF\u003c/td\u003e\u003ctd\u003e(11 bits)\u003c/td\u003e\u003ctd\u003e\u003c/td\u003e\u003ctd align=\"right\"\u003e110\u003ci\u003epqrst\u003c/i\u003e 10\u003ci\u003euvwxyz\u003c/i\u003e\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd align=\"right\"\u003e0800-FFFF\u003c/td\u003e\u003ctd\u003e(16 bits)\u003c/td\u003e\u003ctd\u003e\u003c/td\u003e\u003ctd align=\"right\"\u003e1110\u003ci\u003ejklm\u003c/i\u003e 10\u003ci\u003enpqrst\u003c/i\u003e 10\u003ci\u003euvwxyz\u003c/i\u003e\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd align=\"right\" valign=\"top\"\u003e010000-10FFFF\u003c/td\u003e\u003ctd\u003e(21 bits)\u003c/td\u003e\u003ctd\u003e\u003c/td\u003e\u003ctd align=\"right\" valign=\"top\"\u003e11110\u003ci\u003eefg\u003c/i\u003e 10\u003ci\u003ehijklm\u003c/i\u003e 10\u003ci\u003enpqrst\u003c/i\u003e 10\u003ci\u003euvwxyz\u003c/i\u003e\u003c/td\u003e\n\u003c/tr\u003e\u003ctr height=\"10\"\u003e\u003ctd colspan=\"4\"\u003e\u003c/td\u003e\u003c/tr\u003e\n\u003c/tbody\u003e\u003c/table\u003e\n\u003c/center\u003e\n\n\u003cp class=\"lp\"\u003e\nThe convenient properties of UTF-8 are all consequences of the choice of encoding.\n\u003c/p\u003e\n\n\u003col\u003e\n\u003cli\u003e\u003ci\u003eAll ASCII files are already UTF-8 files.\u003c/i\u003e\u003cbr\u003e\u003c/br\u003e\nThe first 128 Unicode code points are the 7-bit ASCII character set,\nand UTF-8 preserves their one-byte encoding.\n\u003c/li\u003e\n\n\u003cli\u003e\u003ci\u003eASCII bytes always represent themselves in UTF-8 files.  They never appear as part of other UTF-8 sequences.\u003c/i\u003e\u003cbr\u003e\u003c/br\u003e\u003c/li\u003e\u003c/ol\u003e\u003c/body\u003e",
    "source": "research!rsc"
  },
  {
    "title": "Computing History at Bell Labs",
    "link": "http://research.swtch.com/bell-labs",
    "published": "2008-04-09T04:00:00Z",
    "summary": "\u003cbody\u003e\u003cp\u003e\u003c/p\u003e\u003cp class=\"pp\"\u003e\nIn 1997, on his retirement from Bell Labs, \u003ca href=\"http://www.cs.dartmouth.edu/~doug/\"\u003eDoug McIlroy\u003c/a\u003e gave a\nfascinating talk about the “\u003ca href=\"https://web.archive.org/web/20081022192943/http://cm.bell-labs.com/cm/cs/doug97.html\"\u003e\u003cb\u003eHistory of Computing at Bell Labs\u003c/b\u003e\u003c/a\u003e.”\nAlmost ten years ago I transcribed the audio but never did anything with it.\nThe transcript is below.\n\u003c/p\u003e\n\n\u003cp class=\"pp\"\u003e\nMy favorite parts of the talk are the description of the bi-quinary decimal relay calculator\nand the description of a team that spent over a year tracking down a race condition bug in\na missile detector (reliability was king: today you’d just stamp\n“cannot reproduce” and send the report back).\nBut the whole thing contains many fantastic stories.\nIt’s well worth the read or listen.\nI also like his recollection of programming using cards: “It’s the kind of thing you can be nostalgic about, but it wasn’t actually fun.”\n\u003c/p\u003e\n\n\n\u003cp class=\"pp\"\u003e\nFor more information, Bernard D. Holbrook and W. Stanley Brown’s 1982\ntechnical report\n\n“\u003ca href=\"cstr99.pdf\"\u003eA History of Computing Research at Bell Laboratories (1937-1975)\u003c/a\u003e”\ncovers the earlier history in more detail.\n\u003c/p\u003e\n\n\u003cp\u003e\u003ci\u003e\u003c/i\u003e\u003c/p\u003e\u003c/body\u003e",
    "source": "research!rsc"
  },
  {
    "title": "Using Uninitialized Memory for Fun and Profit",
    "link": "http://research.swtch.com/sparse",
    "published": "2008-03-14T04:00:00Z",
    "summary": "\u003cbody\u003e\u003cp\u003e\u003c/p\u003e\u003cp class=\"lp\"\u003e\nThis is the story of a clever trick that\u0026#39;s been around for\nat least 35 years, in which array values can be left\nuninitialized and then read during normal operations,\nyet the code behaves correctly no matter what garbage\nis sitting in the array.\nLike the best programming tricks, this one is the right tool for the\njob in certain situations.\nThe sleaziness of uninitialized data\naccess is offset by performance improvements:\nsome important operations change from linear\nto constant time.\n\u003c/p\u003e\n\n\u003cp class=\"pp\"\u003e\nAlfred Aho, John Hopcroft, and Jeffrey Ullman\u0026#39;s 1974 book\n\u003ci\u003eThe Design and Analysis of Computer Algorithms\u003c/i\u003e\nhints at the trick in an exercise (Chapter 2, exercise 2.12):\n\u003c/p\u003e\n\n\u003cblockquote\u003e\nDevelop a technique to initialize an entry of a matrix to zero\nthe first time it is accessed, thereby eliminating the \u003ci\u003eO\u003c/i\u003e(||\u003ci\u003eV\u003c/i\u003e||\u003csup\u003e2\u003c/sup\u003e) time\nto initialize an adjacency matrix.\n\u003c/blockquote\u003e\n\n\u003cp class=\"lp\"\u003e\nJon Bentley\u0026#39;s 1986 book \u003ca href=\"http://www.cs.bell-labs.com/cm/cs/pearls/\"\u003e\u003ci\u003eProgramming Pearls\u003c/i\u003e\u003c/a\u003e expands\non the exercise (Column 1, exercise 8; \u003ca href=\"http://www.cs.bell-labs.com/cm/cs/pearls/sec016.html\"\u003eexercise 9\u003c/a\u003e in the Second Edition):\n\u003c/p\u003e\n\n\u003cblockquote\u003e\u003c/blockquote\u003e\u003c/body\u003e",
    "source": "research!rsc"
  },
  {
    "title": "Play Tic-Tac-Toe with Knuth",
    "link": "http://research.swtch.com/tictactoe",
    "published": "2008-01-25T05:00:00Z",
    "summary": "\u003cbody\u003e\u003cp\u003e\u003c/p\u003e\u003cp class=\"lp\"\u003eSection 7.1.2 of the \u003cb\u003e\u003ca href=\"http://www-cs-faculty.stanford.edu/~knuth/taocp.html#vol4\"\u003eVolume 4 pre-fascicle 0A\u003c/a\u003e\u003c/b\u003e of Donald Knuth\u0026#39;s \u003ci\u003eThe Art of Computer Programming\u003c/i\u003e is titled “Boolean Evaluation.”  In it, Knuth considers the construction of a set of nine boolean functions telling the correct next move in an optimal game of tic-tac-toe.  In a footnote, Knuth tells this story:\u003c/p\u003e\n\n\u003cblockquote\u003e\u003cp class=\"lp\"\u003eThis setup is based on an exhibit from the early 1950s at the Museum of Science and Industry in Chicago, where the author was first introduced to the magic of switching circuits.  The machine in Chicago, designed by researchers at Bell Telephone Laboratories, allowed me to go first; yet I soon discovered there was no way to defeat it.  Therefore I decided to move as stupidly as possible, hoping that the designers had not anticipated such bizarre behavior.  In fact I allowed the machine to reach a position where it had two winning moves; and it seized \u003ci\u003eboth\u003c/i\u003e\u003c/p\u003e\u003c/blockquote\u003e\u003c/body\u003e",
    "source": "research!rsc"
  },
  {
    "title": "Crabs, the bitmap terror!",
    "link": "http://research.swtch.com/crabs",
    "published": "2008-01-09T05:00:00Z",
    "summary": "\u003cbody\u003e\u003cp\u003e\u003c/p\u003e\u003cp class=\"lp\"\u003eToday, window systems seem as inevitable as hierarchical file systems, a fundamental building block of computer systems.  But it wasn\u0026#39;t always that way.  This paper could only have been written in the beginning, when everything about user interfaces was up for grabs.\u003c/p\u003e\n\n\u003cblockquote\u003e\u003cp class=\"lp\"\u003eA bitmap screen is a graphic universe where windows, cursors and icons live in harmony, cooperating with each other to achieve functionality and esthetics.  A lot of effort goes into making this universe consistent, the basic law being that every window is a self contained, protected world.  In particular, (1) a window shall not be affected by the internal activities of another window.  (2) A window shall not be affected by activities of the window system not concerning it directly, i.e. (2.1) it shall not notice being obscured (partially or totally) by other windows or obscuring (partially or totally) other windows, (2.2) it shall not see the \u003ci\u003eimage\u003c/i\u003e of the cursor sliding on its surface (it can only ask for its position).\u003c/p\u003e\u003c/blockquote\u003e\u003c/body\u003e",
    "source": "research!rsc"
  }
]
